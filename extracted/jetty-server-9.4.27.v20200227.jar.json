{"jetty-server-9.4.27.v20200227.jar": [["org.eclipse.jetty.server.HttpChannel$TransientListeners", "org.eclipse.jetty.server.HttpChannel$TransientListeners()"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onRequestBegin(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onBeforeDispatch(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onDispatchFailure(org.eclipse.jetty.server.Request, java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onAfterDispatch(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onRequestContent(org.eclipse.jetty.server.Request, java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onRequestContentEnd(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onRequestTrailers(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onRequestEnd(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onRequestFailure(org.eclipse.jetty.server.Request, java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onResponseBegin(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onResponseCommit(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onResponseContent(org.eclipse.jetty.server.Request, java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onResponseEnd(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onResponseFailure(org.eclipse.jetty.server.Request, java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.HttpChannel$TransientListeners.onComplete(org.eclipse.jetty.server.Request)"], ["org.eclipse.jetty.server.handler.ResourceHandler", "org.eclipse.jetty.server.handler.ResourceHandler(org.eclipse.jetty.server.ResourceService)"], ["org.eclipse.jetty.server.handler.ResourceHandler", "org.eclipse.jetty.server.handler.ResourceHandler()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ResourceHandler.getWelcomeFile(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.doStart()"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ResourceHandler.getBaseResource()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ResourceHandler.getCacheControl()"], ["org.eclipse.jetty.http.MimeTypes", "org.eclipse.jetty.server.handler.ResourceHandler.getMimeTypes()"], ["int", "org.eclipse.jetty.server.handler.ResourceHandler.getMinAsyncContentLength()"], ["int", "org.eclipse.jetty.server.handler.ResourceHandler.getMinMemoryMappedContentLength()"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ResourceHandler.getResourceBase()"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ResourceHandler.getStylesheet()"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.ResourceHandler.getWelcomeFiles()"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["boolean", "org.eclipse.jetty.server.handler.ResourceHandler.isAcceptRanges()"], ["boolean", "org.eclipse.jetty.server.handler.ResourceHandler.isDirAllowed()"], ["boolean", "org.eclipse.jetty.server.handler.ResourceHandler.isDirectoriesListed()"], ["boolean", "org.eclipse.jetty.server.handler.ResourceHandler.isEtags()"], ["boolean", "org.eclipse.jetty.server.handler.ResourceHandler.isGzip()"], ["org.eclipse.jetty.http.CompressedContentFormat[]", "org.eclipse.jetty.server.handler.ResourceHandler.getPrecompressedFormats()"], ["boolean", "org.eclipse.jetty.server.handler.ResourceHandler.isPathInfoOnly()"], ["boolean", "org.eclipse.jetty.server.handler.ResourceHandler.isRedirectWelcome()"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setAcceptRanges(boolean)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setCacheControl(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setDirAllowed(boolean)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setDirectoriesListed(boolean)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setEtags(boolean)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setGzip(boolean)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setGzipEquivalentFileExtensions(java.util.List<java.lang.String>)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setPrecompressedFormats(org.eclipse.jetty.http.CompressedContentFormat[])"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setMimeTypes(org.eclipse.jetty.http.MimeTypes)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setMinAsyncContentLength(int)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setMinMemoryMappedContentLength(int)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setPathInfoOnly(boolean)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setRedirectWelcome(boolean)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setResourceBase(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setStylesheet(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setWelcomeFiles(java.lang.String[])"], ["void", "org.eclipse.jetty.server.handler.StatisticsHandler$2.onTimeout(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.StatisticsHandler$2.onStartAsync(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.StatisticsHandler$2.onError(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.StatisticsHandler$2.onComplete(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHttpInputInterceptor$Decoder.decodeChunks(java.nio.ByteBuffer)"], ["org.eclipse.jetty.server.handler.RequestLogHandler", "org.eclipse.jetty.server.handler.RequestLogHandler()"], ["void", "org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)"], ["org.eclipse.jetty.server.RequestLog", "org.eclipse.jetty.server.handler.RequestLogHandler.getRequestLog()"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler$1.onTimeout(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler$1.onStartAsync(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler$1.onError(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler$1.onComplete(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection$2.run()"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection$2.accept(java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection$2.accept(java.lang.Object)"], ["org.eclipse.jetty.server.MultiParts$MultiPartsHttpParser", "org.eclipse.jetty.server.MultiParts$MultiPartsHttpParser(java.io.InputStream, java.lang.String, javax.servlet.MultipartConfigElement, java.io.File, org.eclipse.jetty.server.Request)"], ["javax.servlet.http.Part", "org.eclipse.jetty.server.MultiParts$MultiPartsHttpParser.getPart(java.lang.String)"], ["void", "org.eclipse.jetty.server.MultiParts$MultiPartsHttpParser.close()"], ["boolean", "org.eclipse.jetty.server.MultiParts$MultiPartsHttpParser.isEmpty()"], ["org.eclipse.jetty.server.handler.ContextHandler$Context", "org.eclipse.jetty.server.MultiParts$MultiPartsHttpParser.getContext()"], ["void", "org.eclipse.jetty.server.ResourceService$1.succeeded()"], ["void", "org.eclipse.jetty.server.ResourceService$1.failed(java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.server.ResourceService$1.toString()"], ["org.eclipse.jetty.server.Authentication$Failed", "org.eclipse.jetty.server.Authentication$Failed(java.lang.String)"], ["org.eclipse.jetty.server.Slf4jRequestLog", "org.eclipse.jetty.server.Slf4jRequestLog()"], ["org.eclipse.jetty.server.Slf4jRequestLog", "org.eclipse.jetty.server.Slf4jRequestLog(org.eclipse.jetty.server.Slf4jRequestLogWriter)"], ["void", "org.eclipse.jetty.server.Slf4jRequestLog.setLoggerName(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Slf4jRequestLog.getLoggerName()"], ["void", "org.eclipse.jetty.server.Slf4jRequestLog.write(java.lang.String)"], ["org.eclipse.jetty.server.AsyncContextState$WrappedAsyncListener", "org.eclipse.jetty.server.AsyncContextState$WrappedAsyncListener(javax.servlet.AsyncListener, javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["javax.servlet.AsyncListener", "org.eclipse.jetty.server.AsyncContextState$WrappedAsyncListener.getListener()"], ["void", "org.eclipse.jetty.server.AsyncContextState$WrappedAsyncListener.onTimeout(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.AsyncContextState$WrappedAsyncListener.onStartAsync(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.AsyncContextState$WrappedAsyncListener.onError(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.AsyncContextState$WrappedAsyncListener.onComplete(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.AbstractConnector$1.beanAdded(org.eclipse.jetty.util.component.Container, java.lang.Object)"], ["void", "org.eclipse.jetty.server.AbstractConnector$1.beanRemoved(org.eclipse.jetty.util.component.Container, java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.server.Authentication$3.toString()"], ["org.eclipse.jetty.server.HttpOutput", "org.eclipse.jetty.server.HttpOutput(org.eclipse.jetty.server.HttpChannel)"], ["org.eclipse.jetty.server.HttpChannel", "org.eclipse.jetty.server.HttpOutput.getHttpChannel()"], ["org.eclipse.jetty.server.HttpOutput$Interceptor", "org.eclipse.jetty.server.HttpOutput.getInterceptor()"], ["void", "org.eclipse.jetty.server.HttpOutput.setInterceptor(org.eclipse.jetty.server.HttpOutput$Interceptor)"], ["boolean", "org.eclipse.jetty.server.HttpOutput.isWritten()"], ["long", "org.eclipse.jetty.server.HttpOutput.getWritten()"], ["void", "org.eclipse.jetty.server.HttpOutput.reopen()"], ["void", "org.eclipse.jetty.server.HttpOutput.softClose()"], ["void", "org.eclipse.jetty.server.HttpOutput.complete(org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpOutput.completed()"], ["void", "org.eclipse.jetty.server.HttpOutput.close()"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.HttpOutput.getBuffer()"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.HttpOutput.acquireBuffer()"], ["boolean", "org.eclipse.jetty.server.HttpOutput.isClosed()"], ["boolean", "org.eclipse.jetty.server.HttpOutput.isAsync()"], ["void", "org.eclipse.jetty.server.HttpOutput.flush()"], ["void", "org.eclipse.jetty.server.HttpOutput.write(byte[], int, int)"], ["void", "org.eclipse.jetty.server.HttpOutput.write(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.HttpOutput.write(int)"], ["void", "org.eclipse.jetty.server.HttpOutput.print(java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpOutput.println(java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpOutput.println(boolean)"], ["void", "org.eclipse.jetty.server.HttpOutput.println(char)"], ["void", "org.eclipse.jetty.server.HttpOutput.println(int)"], ["void", "org.eclipse.jetty.server.HttpOutput.println(long)"], ["void", "org.eclipse.jetty.server.HttpOutput.println(float)"], ["void", "org.eclipse.jetty.server.HttpOutput.println(double)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(java.io.InputStream)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(java.nio.channels.ReadableByteChannel)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(org.eclipse.jetty.http.HttpContent)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(java.nio.ByteBuffer, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(java.io.InputStream, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(java.nio.channels.ReadableByteChannel, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(org.eclipse.jetty.http.HttpContent, org.eclipse.jetty.util.Callback)"], ["int", "org.eclipse.jetty.server.HttpOutput.getBufferSize()"], ["void", "org.eclipse.jetty.server.HttpOutput.setBufferSize(int)"], ["void", "org.eclipse.jetty.server.HttpOutput.onFlushed(long)"], ["void", "org.eclipse.jetty.server.HttpOutput.recycle()"], ["void", "org.eclipse.jetty.server.HttpOutput.resetBuffer()"], ["void", "org.eclipse.jetty.server.HttpOutput.setWriteListener(javax.servlet.WriteListener)"], ["boolean", "org.eclipse.jetty.server.HttpOutput.isReady()"], ["void", "org.eclipse.jetty.server.HttpOutput.run()"], ["java.lang.String", "org.eclipse.jetty.server.HttpOutput.toString()"], ["void", "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorRunnable.run()"], ["org.eclipse.jetty.server.HttpChannelState$State[]", "org.eclipse.jetty.server.HttpChannelState$State.values()"], ["org.eclipse.jetty.server.HttpChannelState$State", "org.eclipse.jetty.server.HttpChannelState$State.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.LowResourceMonitor$MainThreadPoolLowResourceCheck", "org.eclipse.jetty.server.LowResourceMonitor$MainThreadPoolLowResourceCheck(org.eclipse.jetty.server.LowResourceMonitor)"], ["boolean", "org.eclipse.jetty.server.LowResourceMonitor$MainThreadPoolLowResourceCheck.isLowOnResources()"], ["java.lang.String", "org.eclipse.jetty.server.LowResourceMonitor$MainThreadPoolLowResourceCheck.getReason()"], ["java.lang.String", "org.eclipse.jetty.server.LowResourceMonitor$MainThreadPoolLowResourceCheck.toString()"], ["org.eclipse.jetty.server.ResourceService", "org.eclipse.jetty.server.ResourceService()"], ["org.eclipse.jetty.http.HttpContent$ContentFactory", "org.eclipse.jetty.server.ResourceService.getContentFactory()"], ["void", "org.eclipse.jetty.server.ResourceService.setContentFactory(org.eclipse.jetty.http.HttpContent$ContentFactory)"], ["org.eclipse.jetty.server.ResourceService$WelcomeFactory", "org.eclipse.jetty.server.ResourceService.getWelcomeFactory()"], ["void", "org.eclipse.jetty.server.ResourceService.setWelcomeFactory(org.eclipse.jetty.server.ResourceService$WelcomeFactory)"], ["boolean", "org.eclipse.jetty.server.ResourceService.isAcceptRanges()"], ["void", "org.eclipse.jetty.server.ResourceService.setAcceptRanges(boolean)"], ["boolean", "org.eclipse.jetty.server.ResourceService.isDirAllowed()"], ["void", "org.eclipse.jetty.server.ResourceService.setDirAllowed(boolean)"], ["boolean", "org.eclipse.jetty.server.ResourceService.isRedirectWelcome()"], ["void", "org.eclipse.jetty.server.ResourceService.setRedirectWelcome(boolean)"], ["org.eclipse.jetty.http.CompressedContentFormat[]", "org.eclipse.jetty.server.ResourceService.getPrecompressedFormats()"], ["void", "org.eclipse.jetty.server.ResourceService.setPrecompressedFormats(org.eclipse.jetty.http.CompressedContentFormat[])"], ["void", "org.eclipse.jetty.server.ResourceService.setEncodingCacheSize(int)"], ["int", "org.eclipse.jetty.server.ResourceService.getEncodingCacheSize()"], ["boolean", "org.eclipse.jetty.server.ResourceService.isPathInfoOnly()"], ["void", "org.eclipse.jetty.server.ResourceService.setPathInfoOnly(boolean)"], ["boolean", "org.eclipse.jetty.server.ResourceService.isEtags()"], ["void", "org.eclipse.jetty.server.ResourceService.setEtags(boolean)"], ["org.eclipse.jetty.http.HttpField", "org.eclipse.jetty.server.ResourceService.getCacheControl()"], ["void", "org.eclipse.jetty.server.ResourceService.setCacheControl(org.eclipse.jetty.http.HttpField)"], ["void", "org.eclipse.jetty.server.ResourceService.setGzipEquivalentFileExtensions(java.util.List<java.lang.String>)"], ["boolean", "org.eclipse.jetty.server.ResourceService.doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.AbstractNetworkConnector", "org.eclipse.jetty.server.AbstractNetworkConnector(org.eclipse.jetty.server.Server, java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, org.eclipse.jetty.io.ByteBufferPool, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["void", "org.eclipse.jetty.server.AbstractNetworkConnector.setHost(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.AbstractNetworkConnector.getHost()"], ["void", "org.eclipse.jetty.server.AbstractNetworkConnector.setPort(int)"], ["int", "org.eclipse.jetty.server.AbstractNetworkConnector.getPort()"], ["int", "org.eclipse.jetty.server.AbstractNetworkConnector.getLocalPort()"], ["void", "org.eclipse.jetty.server.AbstractNetworkConnector.open()"], ["void", "org.eclipse.jetty.server.AbstractNetworkConnector.close()"], ["java.lang.String", "org.eclipse.jetty.server.AbstractNetworkConnector.toString()"], ["void", "org.eclipse.jetty.server.AbstractConnector$Acceptor.run()"], ["java.lang.String", "org.eclipse.jetty.server.AbstractConnector$Acceptor.toString()"], ["org.eclipse.jetty.server.PushBuilderImpl", "org.eclipse.jetty.server.PushBuilderImpl(org.eclipse.jetty.server.Request, org.eclipse.jetty.http.HttpFields, java.lang.String, java.lang.String, java.lang.String, boolean)"], ["java.lang.String", "org.eclipse.jetty.server.PushBuilderImpl.getMethod()"], ["org.eclipse.jetty.server.PushBuilder", "org.eclipse.jetty.server.PushBuilderImpl.method(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.PushBuilderImpl.getQueryString()"], ["org.eclipse.jetty.server.PushBuilder", "org.eclipse.jetty.server.PushBuilderImpl.queryString(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.PushBuilderImpl.getSessionId()"], ["org.eclipse.jetty.server.PushBuilder", "org.eclipse.jetty.server.PushBuilderImpl.sessionId(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.PushBuilderImpl.isConditional()"], ["org.eclipse.jetty.server.PushBuilder", "org.eclipse.jetty.server.PushBuilderImpl.conditional(boolean)"], ["java.lang.String", "org.eclipse.jetty.server.PushBuilderImpl.getHeader(java.lang.String)"], ["org.eclipse.jetty.server.PushBuilder", "org.eclipse.jetty.server.PushBuilderImpl.setHeader(java.lang.String, java.lang.String)"], ["org.eclipse.jetty.server.PushBuilder", "org.eclipse.jetty.server.PushBuilderImpl.addHeader(java.lang.String, java.lang.String)"], ["org.eclipse.jetty.server.PushBuilder", "org.eclipse.jetty.server.PushBuilderImpl.removeHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.PushBuilderImpl.getPath()"], ["org.eclipse.jetty.server.PushBuilder", "org.eclipse.jetty.server.PushBuilderImpl.path(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.PushBuilderImpl.getEtag()"], ["org.eclipse.jetty.server.PushBuilder", "org.eclipse.jetty.server.PushBuilderImpl.etag(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.PushBuilderImpl.getLastModified()"], ["org.eclipse.jetty.server.PushBuilder", "org.eclipse.jetty.server.PushBuilderImpl.lastModified(java.lang.String)"], ["void", "org.eclipse.jetty.server.PushBuilderImpl.push()"], ["void", "org.eclipse.jetty.server.DebugListener$2.requestInitialized(javax.servlet.ServletRequestEvent)"], ["void", "org.eclipse.jetty.server.DebugListener$2.requestDestroyed(javax.servlet.ServletRequestEvent)"], ["org.eclipse.jetty.server.HttpWriter", "org.eclipse.jetty.server.HttpWriter(org.eclipse.jetty.server.HttpOutput)"], ["void", "org.eclipse.jetty.server.HttpWriter.close()"], ["void", "org.eclipse.jetty.server.HttpWriter.complete(org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpWriter.flush()"], ["void", "org.eclipse.jetty.server.HttpWriter.write(java.lang.String, int, int)"], ["void", "org.eclipse.jetty.server.HttpWriter.write(char[], int, int)"], ["org.eclipse.jetty.server.HttpChannelState$InputState[]", "org.eclipse.jetty.server.HttpChannelState$InputState.values()"], ["org.eclipse.jetty.server.HttpChannelState$InputState", "org.eclipse.jetty.server.HttpChannelState$InputState.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.session.NullSessionDataStoreFactory", "org.eclipse.jetty.server.session.NullSessionDataStoreFactory()"], ["org.eclipse.jetty.server.session.SessionDataStore", "org.eclipse.jetty.server.session.NullSessionDataStoreFactory.getSessionDataStore(org.eclipse.jetty.server.session.SessionHandler)"], ["void", "org.eclipse.jetty.server.session.SessionHandler$2.run()"], ["org.eclipse.jetty.server.session.DatabaseAdaptor", "org.eclipse.jetty.server.session.DatabaseAdaptor()"], ["void", "org.eclipse.jetty.server.session.DatabaseAdaptor.adaptTo(java.sql.DatabaseMetaData)"], ["void", "org.eclipse.jetty.server.session.DatabaseAdaptor.setBlobType(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.DatabaseAdaptor.getBlobType()"], ["void", "org.eclipse.jetty.server.session.DatabaseAdaptor.setLongType(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.DatabaseAdaptor.getLongType()"], ["void", "org.eclipse.jetty.server.session.DatabaseAdaptor.setStringType(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.DatabaseAdaptor.getStringType()"], ["java.lang.String", "org.eclipse.jetty.server.session.DatabaseAdaptor.convertIdentifier(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.DatabaseAdaptor.getDBName()"], ["java.io.InputStream", "org.eclipse.jetty.server.session.DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)"], ["boolean", "org.eclipse.jetty.server.session.DatabaseAdaptor.isEmptyStringNull()"], ["boolean", "org.eclipse.jetty.server.session.DatabaseAdaptor.isRowIdReserved()"], ["void", "org.eclipse.jetty.server.session.DatabaseAdaptor.setDriverInfo(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.session.DatabaseAdaptor.setDriverInfo(java.sql.Driver, java.lang.String)"], ["void", "org.eclipse.jetty.server.session.DatabaseAdaptor.setDatasource(javax.sql.DataSource)"], ["void", "org.eclipse.jetty.server.session.DatabaseAdaptor.setDatasourceName(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.DatabaseAdaptor.getDatasourceName()"], ["javax.sql.DataSource", "org.eclipse.jetty.server.session.DatabaseAdaptor.getDatasource()"], ["java.lang.String", "org.eclipse.jetty.server.session.DatabaseAdaptor.getDriverClassName()"], ["java.sql.Driver", "org.eclipse.jetty.server.session.DatabaseAdaptor.getDriver()"], ["java.lang.String", "org.eclipse.jetty.server.session.DatabaseAdaptor.getConnectionUrl()"], ["void", "org.eclipse.jetty.server.session.DatabaseAdaptor.initialize()"], ["java.lang.String", "org.eclipse.jetty.server.session.DatabaseAdaptor.toString()"], ["org.eclipse.jetty.server.session.AbstractSessionDataStoreFactory", "org.eclipse.jetty.server.session.AbstractSessionDataStoreFactory()"], ["int", "org.eclipse.jetty.server.session.AbstractSessionDataStoreFactory.getGracePeriodSec()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionDataStoreFactory.setGracePeriodSec(int)"], ["int", "org.eclipse.jetty.server.session.AbstractSessionDataStoreFactory.getSavePeriodSec()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionDataStoreFactory.setSavePeriodSec(int)"], ["boolean", "org.eclipse.jetty.server.HttpInput$1.blockForContent(org.eclipse.jetty.server.HttpInput)"], ["java.lang.String", "org.eclipse.jetty.server.HttpInput$1.toString()"], ["org.eclipse.jetty.server.handler.DefaultHandler", "org.eclipse.jetty.server.handler.DefaultHandler()"], ["void", "org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["boolean", "org.eclipse.jetty.server.handler.DefaultHandler.getServeIcon()"], ["void", "org.eclipse.jetty.server.handler.DefaultHandler.setServeIcon(boolean)"], ["boolean", "org.eclipse.jetty.server.handler.DefaultHandler.getShowContexts()"], ["void", "org.eclipse.jetty.server.handler.DefaultHandler.setShowContexts(boolean)"], ["org.eclipse.jetty.server.handler.HandlerCollection", "org.eclipse.jetty.server.handler.HandlerCollection()"], ["org.eclipse.jetty.server.handler.HandlerCollection", "org.eclipse.jetty.server.handler.HandlerCollection(org.eclipse.jetty.server.Handler...)"], ["org.eclipse.jetty.server.handler.HandlerCollection", "org.eclipse.jetty.server.handler.HandlerCollection(boolean, org.eclipse.jetty.server.Handler...)"], ["org.eclipse.jetty.server.Handler[]", "org.eclipse.jetty.server.handler.HandlerCollection.getHandlers()"], ["void", "org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])"], ["void", "org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.HandlerCollection.addHandler(org.eclipse.jetty.server.Handler)"], ["void", "org.eclipse.jetty.server.handler.HandlerCollection.prependHandler(org.eclipse.jetty.server.Handler)"], ["void", "org.eclipse.jetty.server.handler.HandlerCollection.removeHandler(org.eclipse.jetty.server.Handler)"], ["void", "org.eclipse.jetty.server.handler.HandlerCollection.destroy()"], ["void", "org.eclipse.jetty.server.handler.ShutdownHandler$1.run()"], ["org.eclipse.jetty.server.handler.gzip.GzipHttpInputInterceptor", "org.eclipse.jetty.server.handler.gzip.GzipHttpInputInterceptor(org.eclipse.jetty.io.ByteBufferPool, int)"], ["org.eclipse.jetty.server.HttpInput$Content", "org.eclipse.jetty.server.handler.gzip.GzipHttpInputInterceptor.readFrom(org.eclipse.jetty.server.HttpInput$Content)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHttpInputInterceptor.destroy()"], ["org.eclipse.jetty.server.Handler[]", "org.eclipse.jetty.server.handler.HandlerCollection$Handlers.getHandlers()"], ["org.eclipse.jetty.server.handler.ShutdownHandler", "org.eclipse.jetty.server.handler.ShutdownHandler(org.eclipse.jetty.server.Server, java.lang.String)"], ["org.eclipse.jetty.server.handler.ShutdownHandler", "org.eclipse.jetty.server.handler.ShutdownHandler(java.lang.String)"], ["org.eclipse.jetty.server.handler.ShutdownHandler", "org.eclipse.jetty.server.handler.ShutdownHandler(java.lang.String, boolean, boolean)"], ["void", "org.eclipse.jetty.server.handler.ShutdownHandler.sendShutdown()"], ["void", "org.eclipse.jetty.server.handler.ShutdownHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ShutdownHandler.setExitJvm(boolean)"], ["boolean", "org.eclipse.jetty.server.handler.ShutdownHandler.isSendShutdownAtStart()"], ["void", "org.eclipse.jetty.server.handler.ShutdownHandler.setSendShutdownAtStart(boolean)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ShutdownHandler.getShutdownToken()"], ["boolean", "org.eclipse.jetty.server.handler.ShutdownHandler.isExitJvm()"], ["void", "org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.AbstractHandlerContainer", "org.eclipse.jetty.server.handler.AbstractHandlerContainer()"], ["org.eclipse.jetty.server.Handler[]", "org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlers()"], ["org.eclipse.jetty.server.Handler[]", "org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlersByClass(java.lang.Class<?>)"], ["<T extends org.eclipse.jetty.server.Handler> T", "org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlerByClass(java.lang.Class<T>)"], ["<T extends org.eclipse.jetty.server.HandlerContainer> T", "org.eclipse.jetty.server.handler.AbstractHandlerContainer.findContainerOf(org.eclipse.jetty.server.HandlerContainer, java.lang.Class<T>, org.eclipse.jetty.server.Handler)"], ["void", "org.eclipse.jetty.server.handler.AbstractHandlerContainer.setServer(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.ProxyConnectionFactory", "org.eclipse.jetty.server.ProxyConnectionFactory()"], ["org.eclipse.jetty.server.ProxyConnectionFactory", "org.eclipse.jetty.server.ProxyConnectionFactory(java.lang.String)"], ["int", "org.eclipse.jetty.server.ProxyConnectionFactory.getMaxProxyHeader()"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory.setMaxProxyHeader(int)"], ["int", "org.eclipse.jetty.server.HttpInput$3.noContent()"], ["java.lang.String", "org.eclipse.jetty.server.HttpInput$3.toString()"], ["java.io.IOException", "org.eclipse.jetty.server.HttpInput$3.getError()"], ["java.lang.Throwable", "org.eclipse.jetty.server.HttpInput$3.getError()"], ["org.eclipse.jetty.server.CustomRequestLog$Token", "org.eclipse.jetty.server.CustomRequestLog$Token(java.lang.String, java.lang.String, java.util.List<java.lang.String>, boolean)"], ["org.eclipse.jetty.server.CustomRequestLog$Token", "org.eclipse.jetty.server.CustomRequestLog$Token(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.CustomRequestLog$Token.isLiteralString()"], ["boolean", "org.eclipse.jetty.server.CustomRequestLog$Token.isPercentCode()"], ["org.eclipse.jetty.server.HttpInput", "org.eclipse.jetty.server.HttpInput(org.eclipse.jetty.server.HttpChannelState)"], ["void", "org.eclipse.jetty.server.HttpInput.recycle()"], ["org.eclipse.jetty.server.HttpInput$Interceptor", "org.eclipse.jetty.server.HttpInput.getInterceptor()"], ["void", "org.eclipse.jetty.server.HttpInput.setInterceptor(org.eclipse.jetty.server.HttpInput$Interceptor)"], ["void", "org.eclipse.jetty.server.HttpInput.addInterceptor(org.eclipse.jetty.server.HttpInput$Interceptor)"], ["int", "org.eclipse.jetty.server.HttpInput.available()"], ["int", "org.eclipse.jetty.server.HttpInput.read()"], ["int", "org.eclipse.jetty.server.HttpInput.read(byte[], int, int)"], ["void", "org.eclipse.jetty.server.HttpInput.asyncReadProduce()"], ["boolean", "org.eclipse.jetty.server.HttpInput.addContent(org.eclipse.jetty.server.HttpInput$Content)"], ["boolean", "org.eclipse.jetty.server.HttpInput.hasContent()"], ["void", "org.eclipse.jetty.server.HttpInput.unblock()"], ["long", "org.eclipse.jetty.server.HttpInput.getContentConsumed()"], ["boolean", "org.eclipse.jetty.server.HttpInput.earlyEOF()"], ["boolean", "org.eclipse.jetty.server.HttpInput.eof()"], ["boolean", "org.eclipse.jetty.server.HttpInput.consumeAll()"], ["boolean", "org.eclipse.jetty.server.HttpInput.isError()"], ["boolean", "org.eclipse.jetty.server.HttpInput.isAsync()"], ["boolean", "org.eclipse.jetty.server.HttpInput.isFinished()"], ["boolean", "org.eclipse.jetty.server.HttpInput.isReady()"], ["void", "org.eclipse.jetty.server.HttpInput.setReadListener(javax.servlet.ReadListener)"], ["boolean", "org.eclipse.jetty.server.HttpInput.onIdleTimeout(java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.server.HttpInput.failed(java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.HttpInput.run()"], ["java.lang.String", "org.eclipse.jetty.server.HttpInput.toString()"], ["org.eclipse.jetty.server.ForwardedRequestCustomizer$Forwarded", "org.eclipse.jetty.server.ForwardedRequestCustomizer$Forwarded(org.eclipse.jetty.server.ForwardedRequestCustomizer, org.eclipse.jetty.server.Request, org.eclipse.jetty.server.HttpConfiguration)"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer$Forwarded.handleCipherSuite(org.eclipse.jetty.http.HttpField)"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer$Forwarded.handleSslSessionId(org.eclipse.jetty.http.HttpField)"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer$Forwarded.handleHost(org.eclipse.jetty.http.HttpField)"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer$Forwarded.handleServer(org.eclipse.jetty.http.HttpField)"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer$Forwarded.handleProto(org.eclipse.jetty.http.HttpField)"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer$Forwarded.handleFor(org.eclipse.jetty.http.HttpField)"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer$Forwarded.handlePort(org.eclipse.jetty.http.HttpField)"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer$Forwarded.handleHttps(org.eclipse.jetty.http.HttpField)"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer$Forwarded.handleRFC7239(org.eclipse.jetty.http.HttpField)"], ["void", "org.eclipse.jetty.server.DetectorConnectionFactory$DetectorConnection.onUpgradeTo(java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.DetectorConnectionFactory$DetectorConnection.onUpgradeFrom()"], ["void", "org.eclipse.jetty.server.DetectorConnectionFactory$DetectorConnection.onOpen()"], ["void", "org.eclipse.jetty.server.DetectorConnectionFactory$DetectorConnection.onFillable()"], ["org.eclipse.jetty.server.jmx.ServerMBean", "org.eclipse.jetty.server.jmx.ServerMBean(java.lang.Object)"], ["org.eclipse.jetty.server.Handler[]", "org.eclipse.jetty.server.jmx.ServerMBean.getContexts()"], ["long", "org.eclipse.jetty.server.jmx.ServerMBean.getStartupTime()"], ["org.eclipse.jetty.server.SecureRequestCustomizer", "org.eclipse.jetty.server.SecureRequestCustomizer()"], ["org.eclipse.jetty.server.SecureRequestCustomizer", "org.eclipse.jetty.server.SecureRequestCustomizer(boolean)"], ["org.eclipse.jetty.server.SecureRequestCustomizer", "org.eclipse.jetty.server.SecureRequestCustomizer(boolean, long, boolean)"], ["org.eclipse.jetty.server.SecureRequestCustomizer", "org.eclipse.jetty.server.SecureRequestCustomizer(boolean, boolean, long, boolean)"], ["boolean", "org.eclipse.jetty.server.SecureRequestCustomizer.isSniHostCheck()"], ["void", "org.eclipse.jetty.server.SecureRequestCustomizer.setSniHostCheck(boolean)"], ["boolean", "org.eclipse.jetty.server.SecureRequestCustomizer.isSniRequired()"], ["void", "org.eclipse.jetty.server.SecureRequestCustomizer.setSniRequired(boolean)"], ["long", "org.eclipse.jetty.server.SecureRequestCustomizer.getStsMaxAge()"], ["void", "org.eclipse.jetty.server.SecureRequestCustomizer.setStsMaxAge(long)"], ["void", "org.eclipse.jetty.server.SecureRequestCustomizer.setStsMaxAge(long, java.util.concurrent.TimeUnit)"], ["boolean", "org.eclipse.jetty.server.SecureRequestCustomizer.isStsIncludeSubDomains()"], ["void", "org.eclipse.jetty.server.SecureRequestCustomizer.setStsIncludeSubDomains(boolean)"], ["void", "org.eclipse.jetty.server.SecureRequestCustomizer.customize(org.eclipse.jetty.server.Connector, org.eclipse.jetty.server.HttpConfiguration, org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.SecureRequestCustomizer.setSslSessionAttribute(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.SecureRequestCustomizer.getSslSessionAttribute()"], ["java.lang.String", "org.eclipse.jetty.server.SecureRequestCustomizer.toString()"], ["javax.security.auth.Subject", "org.eclipse.jetty.server.UserIdentity$1.getSubject()"], ["java.security.Principal", "org.eclipse.jetty.server.UserIdentity$1.getUserPrincipal()"], ["boolean", "org.eclipse.jetty.server.UserIdentity$1.isUserInRole(java.lang.String, org.eclipse.jetty.server.UserIdentity$Scope)"], ["java.lang.String", "org.eclipse.jetty.server.UserIdentity$1.toString()"], ["org.eclipse.jetty.server.HttpChannelOverHttp", "org.eclipse.jetty.server.HttpChannelOverHttp(org.eclipse.jetty.server.HttpConnection, org.eclipse.jetty.server.Connector, org.eclipse.jetty.server.HttpConfiguration, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.HttpTransport)"], ["void", "org.eclipse.jetty.server.HttpChannelOverHttp.recycle()"], ["boolean", "org.eclipse.jetty.server.HttpChannelOverHttp.isExpecting100Continue()"], ["boolean", "org.eclipse.jetty.server.HttpChannelOverHttp.isExpecting102Processing()"], ["boolean", "org.eclipse.jetty.server.HttpChannelOverHttp.startRequest(java.lang.String, java.lang.String, org.eclipse.jetty.http.HttpVersion)"], ["void", "org.eclipse.jetty.server.HttpChannelOverHttp.parsedHeader(org.eclipse.jetty.http.HttpField)"], ["void", "org.eclipse.jetty.server.HttpChannelOverHttp.parsedTrailer(org.eclipse.jetty.http.HttpField)"], ["void", "org.eclipse.jetty.server.HttpChannelOverHttp.continue100(int)"], ["void", "org.eclipse.jetty.server.HttpChannelOverHttp.earlyEOF()"], ["boolean", "org.eclipse.jetty.server.HttpChannelOverHttp.content(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.HttpChannelOverHttp.onAsyncWaitForContent()"], ["void", "org.eclipse.jetty.server.HttpChannelOverHttp.onBlockWaitForContent()"], ["void", "org.eclipse.jetty.server.HttpChannelOverHttp.onBlockWaitForContentFailure(java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.HttpChannelOverHttp.badMessage(org.eclipse.jetty.http.BadMessageException)"], ["boolean", "org.eclipse.jetty.server.HttpChannelOverHttp.headerComplete()"], ["void", "org.eclipse.jetty.server.HttpChannelOverHttp.abort(java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.server.HttpChannelOverHttp.contentComplete()"], ["boolean", "org.eclipse.jetty.server.HttpChannelOverHttp.messageComplete()"], ["int", "org.eclipse.jetty.server.HttpChannelOverHttp.getHeaderCacheSize()"], ["void", "org.eclipse.jetty.server.HttpChannelOverHttp.onComplianceViolation(org.eclipse.jetty.http.HttpCompliance, org.eclipse.jetty.http.HttpComplianceSection, java.lang.String)"], ["org.eclipse.jetty.server.Response", "org.eclipse.jetty.server.Response(org.eclipse.jetty.server.HttpChannel, org.eclipse.jetty.server.HttpOutput)"], ["org.eclipse.jetty.server.HttpChannel", "org.eclipse.jetty.server.Response.getHttpChannel()"], ["org.eclipse.jetty.server.HttpOutput", "org.eclipse.jetty.server.Response.getHttpOutput()"], ["void", "org.eclipse.jetty.server.Response.reopen()"], ["void", "org.eclipse.jetty.server.Response.errorClose()"], ["boolean", "org.eclipse.jetty.server.Response.isIncluding()"], ["void", "org.eclipse.jetty.server.Response.include()"], ["void", "org.eclipse.jetty.server.Response.included()"], ["void", "org.eclipse.jetty.server.Response.addCookie(org.eclipse.jetty.http.HttpCookie)"], ["void", "org.eclipse.jetty.server.Response.replaceCookie(org.eclipse.jetty.http.HttpCookie)"], ["void", "org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)"], ["boolean", "org.eclipse.jetty.server.Response.containsHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Response.encodeURL(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Response.encodeRedirectURL(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Response.encodeUrl(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Response.encodeRedirectUrl(java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.sendError(int)"], ["void", "org.eclipse.jetty.server.Response.sendError(int, java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.sendProcessing()"], ["void", "org.eclipse.jetty.server.Response.sendRedirect(int, java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.setDateHeader(java.lang.String, long)"], ["void", "org.eclipse.jetty.server.Response.addDateHeader(java.lang.String, long)"], ["void", "org.eclipse.jetty.server.Response.setHeader(org.eclipse.jetty.http.HttpHeader, java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Response.getHeader(java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)"], ["void", "org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)"], ["void", "org.eclipse.jetty.server.Response.setStatus(int)"], ["void", "org.eclipse.jetty.server.Response.setStatus(int, java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.setStatusWithReason(int, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Response.getCharacterEncoding()"], ["java.lang.String", "org.eclipse.jetty.server.Response.getContentType()"], ["javax.servlet.ServletOutputStream", "org.eclipse.jetty.server.Response.getOutputStream()"], ["boolean", "org.eclipse.jetty.server.Response.isWriting()"], ["boolean", "org.eclipse.jetty.server.Response.isStreaming()"], ["boolean", "org.eclipse.jetty.server.Response.isWritingOrStreaming()"], ["java.io.PrintWriter", "org.eclipse.jetty.server.Response.getWriter()"], ["void", "org.eclipse.jetty.server.Response.setContentLength(int)"], ["long", "org.eclipse.jetty.server.Response.getContentLength()"], ["boolean", "org.eclipse.jetty.server.Response.isAllContentWritten(long)"], ["boolean", "org.eclipse.jetty.server.Response.isContentComplete(long)"], ["void", "org.eclipse.jetty.server.Response.completeOutput()"], ["void", "org.eclipse.jetty.server.Response.completeOutput(org.eclipse.jetty.util.Callback)"], ["long", "org.eclipse.jetty.server.Response.getLongContentLength()"], ["void", "org.eclipse.jetty.server.Response.setLongContentLength(long)"], ["void", "org.eclipse.jetty.server.Response.setContentLengthLong(long)"], ["void", "org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.setContentType(java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.setBufferSize(int)"], ["int", "org.eclipse.jetty.server.Response.getBufferSize()"], ["void", "org.eclipse.jetty.server.Response.flushBuffer()"], ["void", "org.eclipse.jetty.server.Response.reset()"], ["void", "org.eclipse.jetty.server.Response.resetContent()"], ["void", "org.eclipse.jetty.server.Response.resetForForward()"], ["void", "org.eclipse.jetty.server.Response.resetBuffer()"], ["void", "org.eclipse.jetty.server.Response.setTrailers(java.util.function.Supplier<org.eclipse.jetty.http.HttpFields>)"], ["org.eclipse.jetty.http.MetaData$Response", "org.eclipse.jetty.server.Response.getCommittedMetaData()"], ["boolean", "org.eclipse.jetty.server.Response.isCommitted()"], ["void", "org.eclipse.jetty.server.Response.setLocale(java.util.Locale)"], ["java.util.Locale", "org.eclipse.jetty.server.Response.getLocale()"], ["int", "org.eclipse.jetty.server.Response.getStatus()"], ["java.lang.String", "org.eclipse.jetty.server.Response.getReason()"], ["org.eclipse.jetty.http.HttpFields", "org.eclipse.jetty.server.Response.getHttpFields()"], ["long", "org.eclipse.jetty.server.Response.getContentCount()"], ["java.lang.String", "org.eclipse.jetty.server.Response.toString()"], ["void", "org.eclipse.jetty.server.Response.putHeaders(org.eclipse.jetty.http.HttpContent, long, boolean)"], ["void", "org.eclipse.jetty.server.Response.putHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.http.HttpContent, long, boolean)"], ["javax.servlet.http.HttpServletResponse", "org.eclipse.jetty.server.Response.unwrap(javax.servlet.ServletResponse)"], ["java.lang.Object", "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()"], ["void", "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.clearAttributes()"], ["void", "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.removeAttribute(java.lang.String)"], ["org.eclipse.jetty.server.SocketCustomizationListener", "org.eclipse.jetty.server.SocketCustomizationListener()"], ["org.eclipse.jetty.server.SocketCustomizationListener", "org.eclipse.jetty.server.SocketCustomizationListener(boolean)"], ["void", "org.eclipse.jetty.server.SocketCustomizationListener.onOpened(org.eclipse.jetty.io.Connection)"], ["void", "org.eclipse.jetty.server.SocketCustomizationListener.onClosed(org.eclipse.jetty.io.Connection)"], ["org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector", "org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector", "org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector", "org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory)"], ["org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector", "org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector(org.eclipse.jetty.server.Server, java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, org.eclipse.jetty.io.ByteBufferPool, int, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector", "org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["void", "org.eclipse.jetty.server.HttpOutput$ReadableByteChannelWritingCB.onCompleteFailure(java.lang.Throwable)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, int, int)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, int, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, int, int, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.util.ssl.SslContextFactory, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, org.eclipse.jetty.io.ByteBufferPool, int, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["boolean", "org.eclipse.jetty.server.ServerConnector.isOpen()"], ["boolean", "org.eclipse.jetty.server.ServerConnector.isInheritChannel()"], ["void", "org.eclipse.jetty.server.ServerConnector.setInheritChannel(boolean)"], ["void", "org.eclipse.jetty.server.ServerConnector.open(java.nio.channels.ServerSocketChannel)"], ["void", "org.eclipse.jetty.server.ServerConnector.open()"], ["void", "org.eclipse.jetty.server.ServerConnector.close()"], ["void", "org.eclipse.jetty.server.ServerConnector.accept(int)"], ["org.eclipse.jetty.io.SelectorManager", "org.eclipse.jetty.server.ServerConnector.getSelectorManager()"], ["java.lang.Object", "org.eclipse.jetty.server.ServerConnector.getTransport()"], ["int", "org.eclipse.jetty.server.ServerConnector.getLocalPort()"], ["int", "org.eclipse.jetty.server.ServerConnector.getSoLingerTime()"], ["void", "org.eclipse.jetty.server.ServerConnector.setSoLingerTime(int)"], ["int", "org.eclipse.jetty.server.ServerConnector.getAcceptQueueSize()"], ["void", "org.eclipse.jetty.server.ServerConnector.setAcceptQueueSize(int)"], ["boolean", "org.eclipse.jetty.server.ServerConnector.getReuseAddress()"], ["void", "org.eclipse.jetty.server.ServerConnector.setReuseAddress(boolean)"], ["void", "org.eclipse.jetty.server.ServerConnector.setAccepting(boolean)"], ["org.eclipse.jetty.server.EncodingHttpWriter", "org.eclipse.jetty.server.EncodingHttpWriter(org.eclipse.jetty.server.HttpOutput, java.lang.String)"], ["void", "org.eclipse.jetty.server.EncodingHttpWriter.write(char[], int, int)"], ["org.eclipse.jetty.server.resource.SeekableByteChannelRangeWriter", "org.eclipse.jetty.server.resource.SeekableByteChannelRangeWriter(org.eclipse.jetty.server.resource.SeekableByteChannelRangeWriter$ChannelSupplier)"], ["org.eclipse.jetty.server.resource.SeekableByteChannelRangeWriter", "org.eclipse.jetty.server.resource.SeekableByteChannelRangeWriter(java.nio.channels.SeekableByteChannel, org.eclipse.jetty.server.resource.SeekableByteChannelRangeWriter$ChannelSupplier)"], ["void", "org.eclipse.jetty.server.resource.SeekableByteChannelRangeWriter.close()"], ["void", "org.eclipse.jetty.server.resource.SeekableByteChannelRangeWriter.writeTo(java.io.OutputStream, long, long)"], ["org.eclipse.jetty.server.HttpChannelState$OutputState[]", "org.eclipse.jetty.server.HttpChannelState$OutputState.values()"], ["org.eclipse.jetty.server.HttpChannelState$OutputState", "org.eclipse.jetty.server.HttpChannelState$OutputState.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getSchemaName()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setSchemaName(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getTableName()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setTableName(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getIdColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setIdColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getContextPathColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setContextPathColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getVirtualHostColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setVirtualHostColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getLastNodeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setLastNodeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getAccessTimeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setAccessTimeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getLastAccessTimeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setLastAccessTimeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getCreateTimeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setCreateTimeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getCookieTimeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setCookieTimeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getLastSavedTimeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setLastSavedTimeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getExpiryTimeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setExpiryTimeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getMaxIntervalColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setMaxIntervalColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getMapColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.setMapColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getCreateStatementAsString()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getCreateIndexOverExpiryStatementAsString(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getCreateIndexOverSessionStatementAsString(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getAlterTableForMaxIntervalAsString()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getInsertSessionStatementAsString()"], ["java.sql.PreparedStatement", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getUpdateSessionStatement(java.sql.Connection, java.lang.String, org.eclipse.jetty.server.session.SessionContext)"], ["java.sql.PreparedStatement", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getExpiredSessionsStatement(java.sql.Connection, java.lang.String, java.lang.String, long)"], ["java.sql.PreparedStatement", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getMyExpiredSessionsStatement(java.sql.Connection, org.eclipse.jetty.server.session.SessionContext, long)"], ["java.sql.PreparedStatement", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getAllAncientExpiredSessionsStatement(java.sql.Connection)"], ["java.sql.PreparedStatement", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getCheckSessionExistsStatement(java.sql.Connection, org.eclipse.jetty.server.session.SessionContext)"], ["java.sql.PreparedStatement", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getLoadStatement(java.sql.Connection, java.lang.String, org.eclipse.jetty.server.session.SessionContext)"], ["java.sql.PreparedStatement", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getUpdateStatement(java.sql.Connection, java.lang.String, org.eclipse.jetty.server.session.SessionContext)"], ["java.sql.PreparedStatement", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.getDeleteStatement(java.sql.Connection, java.lang.String, org.eclipse.jetty.server.session.SessionContext)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.prepareTables()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema.toString()"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.Session(org.eclipse.jetty.server.session.SessionHandler, javax.servlet.http.HttpServletRequest, org.eclipse.jetty.server.session.SessionData)"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.Session(org.eclipse.jetty.server.session.SessionHandler, org.eclipse.jetty.server.session.SessionData)"], ["long", "org.eclipse.jetty.server.session.Session.getRequests()"], ["void", "org.eclipse.jetty.server.session.Session.setExtendedId(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.Session.unbindValue(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.session.Session.bindValue(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.session.Session.didActivate()"], ["void", "org.eclipse.jetty.server.session.Session.willPassivate()"], ["boolean", "org.eclipse.jetty.server.session.Session.isValid()"], ["boolean", "org.eclipse.jetty.server.session.Session.isInvalid()"], ["boolean", "org.eclipse.jetty.server.session.Session.isChanging()"], ["long", "org.eclipse.jetty.server.session.Session.getCookieSetTime()"], ["long", "org.eclipse.jetty.server.session.Session.getCreationTime()"], ["java.lang.String", "org.eclipse.jetty.server.session.Session.getId()"], ["java.lang.String", "org.eclipse.jetty.server.session.Session.getExtendedId()"], ["java.lang.String", "org.eclipse.jetty.server.session.Session.getContextPath()"], ["java.lang.String", "org.eclipse.jetty.server.session.Session.getVHost()"], ["long", "org.eclipse.jetty.server.session.Session.getLastAccessedTime()"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.session.Session.getServletContext()"], ["void", "org.eclipse.jetty.server.session.Session.setMaxInactiveInterval(int)"], ["void", "org.eclipse.jetty.server.session.Session.updateInactivityTimer()"], ["long", "org.eclipse.jetty.server.session.Session.calculateInactivityTimeout(long)"], ["int", "org.eclipse.jetty.server.session.Session.getMaxInactiveInterval()"], ["javax.servlet.http.HttpSessionContext", "org.eclipse.jetty.server.session.Session.getSessionContext()"], ["org.eclipse.jetty.server.session.SessionHandler", "org.eclipse.jetty.server.session.Session.getSessionHandler()"], ["java.lang.Object", "org.eclipse.jetty.server.session.Session.getAttribute(java.lang.String)"], ["java.lang.Object", "org.eclipse.jetty.server.session.Session.getValue(java.lang.String)"], ["int", "org.eclipse.jetty.server.session.Session.getAttributes()"], ["java.lang.String[]", "org.eclipse.jetty.server.session.Session.getValueNames()"], ["void", "org.eclipse.jetty.server.session.Session.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.session.Session.putValue(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.session.Session.removeAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.Session.removeValue(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.Session.renewId(javax.servlet.http.HttpServletRequest)"], ["void", "org.eclipse.jetty.server.session.Session.invalidate()"], ["org.eclipse.jetty.util.thread.Locker$Lock", "org.eclipse.jetty.server.session.Session.lock()"], ["boolean", "org.eclipse.jetty.server.session.Session.isNew()"], ["void", "org.eclipse.jetty.server.session.Session.setIdChanged(boolean)"], ["boolean", "org.eclipse.jetty.server.session.Session.isIdChanged()"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.Session.getSession()"], ["void", "org.eclipse.jetty.server.session.Session.setResident(boolean)"], ["boolean", "org.eclipse.jetty.server.session.Session.isResident()"], ["java.lang.String", "org.eclipse.jetty.server.session.Session.toString()"], ["org.eclipse.jetty.server.session.JDBCSessionDataStoreFactory", "org.eclipse.jetty.server.session.JDBCSessionDataStoreFactory()"], ["org.eclipse.jetty.server.session.SessionDataStore", "org.eclipse.jetty.server.session.JDBCSessionDataStoreFactory.getSessionDataStore(org.eclipse.jetty.server.session.SessionHandler)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStoreFactory.setDatabaseAdaptor(org.eclipse.jetty.server.session.DatabaseAdaptor)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStoreFactory.setSessionTableSchema(org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema)"], ["org.eclipse.jetty.server.session.NullSessionCache", "org.eclipse.jetty.server.session.NullSessionCache(org.eclipse.jetty.server.session.SessionHandler)"], ["void", "org.eclipse.jetty.server.session.NullSessionCache.shutdown()"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.NullSessionCache.newSession(org.eclipse.jetty.server.session.SessionData)"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.NullSessionCache.newSession(javax.servlet.http.HttpServletRequest, org.eclipse.jetty.server.session.SessionData)"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.NullSessionCache.doGet(java.lang.String)"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.NullSessionCache.doPutIfAbsent(java.lang.String, org.eclipse.jetty.server.session.Session)"], ["boolean", "org.eclipse.jetty.server.session.NullSessionCache.doReplace(java.lang.String, org.eclipse.jetty.server.session.Session, org.eclipse.jetty.server.session.Session)"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.NullSessionCache.doDelete(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.NullSessionCache.setEvictionPolicy(int)"], ["org.eclipse.jetty.server.session.FileSessionDataStoreFactory", "org.eclipse.jetty.server.session.FileSessionDataStoreFactory()"], ["boolean", "org.eclipse.jetty.server.session.FileSessionDataStoreFactory.isDeleteUnrestorableFiles()"], ["void", "org.eclipse.jetty.server.session.FileSessionDataStoreFactory.setDeleteUnrestorableFiles(boolean)"], ["java.io.File", "org.eclipse.jetty.server.session.FileSessionDataStoreFactory.getStoreDir()"], ["void", "org.eclipse.jetty.server.session.FileSessionDataStoreFactory.setStoreDir(java.io.File)"], ["org.eclipse.jetty.server.session.SessionDataStore", "org.eclipse.jetty.server.session.FileSessionDataStoreFactory.getSessionDataStore(org.eclipse.jetty.server.session.SessionHandler)"], ["org.eclipse.jetty.server.DebugListener", "org.eclipse.jetty.server.DebugListener()"], ["org.eclipse.jetty.server.DebugListener", "org.eclipse.jetty.server.DebugListener(boolean, boolean, boolean)"], ["org.eclipse.jetty.server.DebugListener", "org.eclipse.jetty.server.DebugListener(java.io.OutputStream, boolean, boolean, boolean)"], ["boolean", "org.eclipse.jetty.server.DebugListener.isRenameThread()"], ["void", "org.eclipse.jetty.server.DebugListener.setRenameThread(boolean)"], ["boolean", "org.eclipse.jetty.server.DebugListener.isShowHeaders()"], ["void", "org.eclipse.jetty.server.DebugListener.setShowHeaders(boolean)"], ["boolean", "org.eclipse.jetty.server.DebugListener.isDumpContext()"], ["void", "org.eclipse.jetty.server.DebugListener.setDumpContext(boolean)"], ["void", "org.eclipse.jetty.server.DebugListener.contextInitialized(javax.servlet.ServletContextEvent)"], ["void", "org.eclipse.jetty.server.DebugListener.contextDestroyed(javax.servlet.ServletContextEvent)"], ["org.eclipse.jetty.server.HttpOutput$ApiState[]", "org.eclipse.jetty.server.HttpOutput$ApiState.values()"], ["org.eclipse.jetty.server.HttpOutput$ApiState", "org.eclipse.jetty.server.HttpOutput$ApiState.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.handler.AbstractHandler$ErrorDispatchHandler", "org.eclipse.jetty.server.handler.AbstractHandler$ErrorDispatchHandler()"], ["void", "org.eclipse.jetty.server.handler.AbstractHandler$ErrorDispatchHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.jmx.ContextHandlerMBean", "org.eclipse.jetty.server.handler.jmx.ContextHandlerMBean(java.lang.Object)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.eclipse.jetty.server.handler.jmx.ContextHandlerMBean.getContextAttributes()"], ["void", "org.eclipse.jetty.server.handler.jmx.ContextHandlerMBean.setContextAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.handler.jmx.ContextHandlerMBean.setContextAttribute(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.jmx.ContextHandlerMBean.removeContextAttribute(java.lang.String)"], ["org.eclipse.jetty.server.handler.ErrorHandler", "org.eclipse.jetty.server.handler.ErrorHandler()"], ["boolean", "org.eclipse.jetty.server.handler.ErrorHandler.errorPageForMethod(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ErrorHandler.doError(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.handler.ErrorHandler.badMessageError(int, java.lang.String, org.eclipse.jetty.http.HttpFields)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ErrorHandler.getCacheControl()"], ["void", "org.eclipse.jetty.server.handler.ErrorHandler.setCacheControl(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.handler.ErrorHandler.isShowServlet()"], ["void", "org.eclipse.jetty.server.handler.ErrorHandler.setShowServlet(boolean)"], ["boolean", "org.eclipse.jetty.server.handler.ErrorHandler.isShowStacks()"], ["void", "org.eclipse.jetty.server.handler.ErrorHandler.setShowStacks(boolean)"], ["void", "org.eclipse.jetty.server.handler.ErrorHandler.setShowMessageInTitle(boolean)"], ["boolean", "org.eclipse.jetty.server.handler.ErrorHandler.getShowMessageInTitle()"], ["org.eclipse.jetty.server.handler.ErrorHandler", "org.eclipse.jetty.server.handler.ErrorHandler.getErrorHandler(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.handler.ContextHandler)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandlerCollection$Branch.toString()"], ["org.eclipse.jetty.server.handler.ContextHandler$ApproveAliases", "org.eclipse.jetty.server.handler.ContextHandler$ApproveAliases()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$ApproveAliases.check(java.lang.String, org.eclipse.jetty.util.resource.Resource)"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.handler.ContextHandler$Context.getContextHandler()"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(java.lang.String)"], ["javax.servlet.RequestDispatcher", "org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)"], ["java.net.URL", "org.eclipse.jetty.server.handler.ContextHandler$Context.getResource(java.lang.String)"], ["java.io.InputStream", "org.eclipse.jetty.server.handler.ContextHandler$Context.getResourceAsStream(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.Exception, java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$Context.getInitParameter(java.lang.String)"], ["synchronized", "org.eclipse.jetty.server.handler.ContextHandler$Context.java.lang.Object getAttribute(java.lang.String)"], ["synchronized", "org.eclipse.jetty.server.handler.ContextHandler$Context.void setAttribute(java.lang.String, java.lang.Object)"], ["synchronized", "org.eclipse.jetty.server.handler.ContextHandler$Context.void removeAttribute(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$Context.getServletContextName()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$Context.toString()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$Context.setInitParameter(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.addListener(java.lang.String)"], ["<T extends java.util.EventListener> void", "org.eclipse.jetty.server.handler.ContextHandler$Context.addListener(T)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.addListener(java.lang.Class<? extends java.util.EventListener>)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.checkListener(java.lang.Class<? extends java.util.EventListener>)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.setExtendedListenerTypes(boolean)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$Context.isExtendedListenerTypes()"], ["java.lang.ClassLoader", "org.eclipse.jetty.server.handler.ContextHandler$Context.getClassLoader()"], ["javax.servlet.descriptor.JspConfigDescriptor", "org.eclipse.jetty.server.handler.ContextHandler$Context.getJspConfigDescriptor()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.setJspConfigDescriptor(javax.servlet.descriptor.JspConfigDescriptor)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.declareRoles(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.setEnabled(boolean)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$Context.isEnabled()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$Context.getVirtualServerName()"], ["org.eclipse.jetty.server.handler.SecuredRedirectHandler", "org.eclipse.jetty.server.handler.SecuredRedirectHandler()"], ["void", "org.eclipse.jetty.server.handler.SecuredRedirectHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint$1.parsedHeader(org.eclipse.jetty.http.HttpField)"], ["boolean", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint$1.contentComplete()"], ["boolean", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint$1.messageComplete()"], ["boolean", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint$1.headerComplete()"], ["int", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint$1.getHeaderCacheSize()"], ["void", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint$1.earlyEOF()"], ["boolean", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint$1.content(java.nio.ByteBuffer)"], ["boolean", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint$1.startResponse(org.eclipse.jetty.http.HttpVersion, int, java.lang.String)"], ["org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory$Transport[]", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory$Transport.values()"], ["org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory$Transport", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory$Transport.valueOf(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.CachedContentFactory$CachedPrecompressedHttpContent.isValid()"], ["org.eclipse.jetty.http.HttpField", "org.eclipse.jetty.server.CachedContentFactory$CachedPrecompressedHttpContent.getETag()"], ["java.lang.String", "org.eclipse.jetty.server.CachedContentFactory$CachedPrecompressedHttpContent.getETagValue()"], ["java.lang.String", "org.eclipse.jetty.server.CachedContentFactory$CachedPrecompressedHttpContent.toString()"], ["org.eclipse.jetty.server.Utf8HttpWriter", "org.eclipse.jetty.server.Utf8HttpWriter(org.eclipse.jetty.server.HttpOutput)"], ["void", "org.eclipse.jetty.server.Utf8HttpWriter.write(char[], int, int)"], ["org.eclipse.jetty.server.AsyncContextState", "org.eclipse.jetty.server.AsyncContextState(org.eclipse.jetty.server.HttpChannelState)"], ["org.eclipse.jetty.server.HttpChannel", "org.eclipse.jetty.server.AsyncContextState.getHttpChannel()"], ["void", "org.eclipse.jetty.server.AsyncContextState.addListener(javax.servlet.AsyncListener, javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["void", "org.eclipse.jetty.server.AsyncContextState.addListener(javax.servlet.AsyncListener)"], ["void", "org.eclipse.jetty.server.AsyncContextState.complete()"], ["<T extends javax.servlet.AsyncListener> T", "org.eclipse.jetty.server.AsyncContextState.createListener(java.lang.Class<T>)"], ["void", "org.eclipse.jetty.server.AsyncContextState.dispatch()"], ["void", "org.eclipse.jetty.server.AsyncContextState.dispatch(java.lang.String)"], ["void", "org.eclipse.jetty.server.AsyncContextState.dispatch(javax.servlet.ServletContext, java.lang.String)"], ["javax.servlet.ServletRequest", "org.eclipse.jetty.server.AsyncContextState.getRequest()"], ["javax.servlet.ServletResponse", "org.eclipse.jetty.server.AsyncContextState.getResponse()"], ["long", "org.eclipse.jetty.server.AsyncContextState.getTimeout()"], ["boolean", "org.eclipse.jetty.server.AsyncContextState.hasOriginalRequestAndResponse()"], ["void", "org.eclipse.jetty.server.AsyncContextState.setTimeout(long)"], ["void", "org.eclipse.jetty.server.AsyncContextState.start(java.lang.Runnable)"], ["void", "org.eclipse.jetty.server.AsyncContextState.reset()"], ["org.eclipse.jetty.server.HttpChannelState", "org.eclipse.jetty.server.AsyncContextState.getHttpChannelState()"], ["org.eclipse.jetty.server.InclusiveByteRange", "org.eclipse.jetty.server.InclusiveByteRange(long, long)"], ["long", "org.eclipse.jetty.server.InclusiveByteRange.getFirst()"], ["long", "org.eclipse.jetty.server.InclusiveByteRange.getLast()"], ["long", "org.eclipse.jetty.server.InclusiveByteRange.getSize()"], ["java.lang.String", "org.eclipse.jetty.server.InclusiveByteRange.toHeaderRangeString(long)"], ["int", "org.eclipse.jetty.server.InclusiveByteRange.hashCode()"], ["boolean", "org.eclipse.jetty.server.InclusiveByteRange.equals(java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.server.InclusiveByteRange.toString()"], ["java.lang.String", "org.eclipse.jetty.server.InclusiveByteRange.to416HeaderRangeString(long)"], ["org.eclipse.jetty.server.jmx.AbstractConnectorMBean", "org.eclipse.jetty.server.jmx.AbstractConnectorMBean(java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.server.jmx.AbstractConnectorMBean.getObjectContextBasis()"], ["org.eclipse.jetty.server.MultiParts$MultiPartsUtilParser", "org.eclipse.jetty.server.MultiParts$MultiPartsUtilParser(java.io.InputStream, java.lang.String, javax.servlet.MultipartConfigElement, java.io.File, org.eclipse.jetty.server.Request)"], ["javax.servlet.http.Part", "org.eclipse.jetty.server.MultiParts$MultiPartsUtilParser.getPart(java.lang.String)"], ["void", "org.eclipse.jetty.server.MultiParts$MultiPartsUtilParser.close()"], ["boolean", "org.eclipse.jetty.server.MultiParts$MultiPartsUtilParser.isEmpty()"], ["org.eclipse.jetty.server.handler.ContextHandler$Context", "org.eclipse.jetty.server.MultiParts$MultiPartsUtilParser.getContext()"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onRequestBegin(org.eclipse.jetty.server.Request)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onBeforeDispatch(org.eclipse.jetty.server.Request)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onDispatchFailure(org.eclipse.jetty.server.Request, java.lang.Throwable)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onAfterDispatch(org.eclipse.jetty.server.Request)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onRequestContent(org.eclipse.jetty.server.Request, java.nio.ByteBuffer)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onRequestContentEnd(org.eclipse.jetty.server.Request)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onRequestTrailers(org.eclipse.jetty.server.Request)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onRequestEnd(org.eclipse.jetty.server.Request)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onRequestFailure(org.eclipse.jetty.server.Request, java.lang.Throwable)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onResponseBegin(org.eclipse.jetty.server.Request)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onResponseCommit(org.eclipse.jetty.server.Request)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onResponseContent(org.eclipse.jetty.server.Request, java.nio.ByteBuffer)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onResponseEnd(org.eclipse.jetty.server.Request)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onResponseFailure(org.eclipse.jetty.server.Request, java.lang.Throwable)"], ["default", "org.eclipse.jetty.server.HttpChannel$Listener.void onComplete(org.eclipse.jetty.server.Request)"], ["org.eclipse.jetty.server.RequestLogWriter", "org.eclipse.jetty.server.RequestLogWriter()"], ["org.eclipse.jetty.server.RequestLogWriter", "org.eclipse.jetty.server.RequestLogWriter(java.lang.String)"], ["void", "org.eclipse.jetty.server.RequestLogWriter.setFilename(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.RequestLogWriter.getFileName()"], ["java.lang.String", "org.eclipse.jetty.server.RequestLogWriter.getDatedFilename()"], ["void", "org.eclipse.jetty.server.RequestLogWriter.setRetainDays(int)"], ["int", "org.eclipse.jetty.server.RequestLogWriter.getRetainDays()"], ["void", "org.eclipse.jetty.server.RequestLogWriter.setAppend(boolean)"], ["boolean", "org.eclipse.jetty.server.RequestLogWriter.isAppend()"], ["void", "org.eclipse.jetty.server.RequestLogWriter.setFilenameDateFormat(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.RequestLogWriter.getFilenameDateFormat()"], ["void", "org.eclipse.jetty.server.RequestLogWriter.write(java.lang.String)"], ["void", "org.eclipse.jetty.server.RequestLogWriter.setTimeZone(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.RequestLogWriter.getTimeZone()"], ["default", "org.eclipse.jetty.server.HttpOutput$Interceptor.void resetBuffer()"], ["org.eclipse.jetty.server.Iso88591HttpWriter", "org.eclipse.jetty.server.Iso88591HttpWriter(org.eclipse.jetty.server.HttpOutput)"], ["void", "org.eclipse.jetty.server.Iso88591HttpWriter.write(char[], int, int)"], ["java.lang.Throwable", "org.eclipse.jetty.server.HttpInput$ErrorState.getError()"], ["int", "org.eclipse.jetty.server.HttpInput$ErrorState.noContent()"], ["java.lang.String", "org.eclipse.jetty.server.HttpInput$ErrorState.toString()"], ["org.eclipse.jetty.server.ResponseWriter", "org.eclipse.jetty.server.ResponseWriter(org.eclipse.jetty.server.HttpWriter, java.util.Locale, java.lang.String)"], ["boolean", "org.eclipse.jetty.server.ResponseWriter.isFor(java.util.Locale, java.lang.String)"], ["boolean", "org.eclipse.jetty.server.ResponseWriter.checkError()"], ["void", "org.eclipse.jetty.server.ResponseWriter.flush()"], ["void", "org.eclipse.jetty.server.ResponseWriter.close()"], ["void", "org.eclipse.jetty.server.ResponseWriter.complete(org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.ResponseWriter.write(int)"], ["void", "org.eclipse.jetty.server.ResponseWriter.write(char[], int, int)"], ["void", "org.eclipse.jetty.server.ResponseWriter.write(char[])"], ["void", "org.eclipse.jetty.server.ResponseWriter.write(java.lang.String, int, int)"], ["void", "org.eclipse.jetty.server.ResponseWriter.write(java.lang.String)"], ["void", "org.eclipse.jetty.server.ResponseWriter.print(boolean)"], ["void", "org.eclipse.jetty.server.ResponseWriter.print(char)"], ["void", "org.eclipse.jetty.server.ResponseWriter.print(int)"], ["void", "org.eclipse.jetty.server.ResponseWriter.print(long)"], ["void", "org.eclipse.jetty.server.ResponseWriter.print(float)"], ["void", "org.eclipse.jetty.server.ResponseWriter.print(double)"], ["void", "org.eclipse.jetty.server.ResponseWriter.print(char[])"], ["void", "org.eclipse.jetty.server.ResponseWriter.print(java.lang.String)"], ["void", "org.eclipse.jetty.server.ResponseWriter.print(java.lang.Object)"], ["void", "org.eclipse.jetty.server.ResponseWriter.println()"], ["void", "org.eclipse.jetty.server.ResponseWriter.println(boolean)"], ["void", "org.eclipse.jetty.server.ResponseWriter.println(char)"], ["void", "org.eclipse.jetty.server.ResponseWriter.println(int)"], ["void", "org.eclipse.jetty.server.ResponseWriter.println(long)"], ["void", "org.eclipse.jetty.server.ResponseWriter.println(float)"], ["void", "org.eclipse.jetty.server.ResponseWriter.println(double)"], ["void", "org.eclipse.jetty.server.ResponseWriter.println(char[])"], ["void", "org.eclipse.jetty.server.ResponseWriter.println(java.lang.String)"], ["void", "org.eclipse.jetty.server.ResponseWriter.println(java.lang.Object)"], ["java.io.PrintWriter", "org.eclipse.jetty.server.ResponseWriter.printf(java.lang.String, java.lang.Object...)"], ["java.io.PrintWriter", "org.eclipse.jetty.server.ResponseWriter.printf(java.util.Locale, java.lang.String, java.lang.Object...)"], ["java.io.PrintWriter", "org.eclipse.jetty.server.ResponseWriter.format(java.lang.String, java.lang.Object...)"], ["java.io.PrintWriter", "org.eclipse.jetty.server.ResponseWriter.format(java.util.Locale, java.lang.String, java.lang.Object...)"], ["void", "org.eclipse.jetty.server.AsyncRequestLogWriter$WriterThread.run()"], ["org.eclipse.jetty.server.CookieCutter", "org.eclipse.jetty.server.CookieCutter()"], ["org.eclipse.jetty.server.CookieCutter", "org.eclipse.jetty.server.CookieCutter(org.eclipse.jetty.http.CookieCompliance)"], ["javax.servlet.http.Cookie[]", "org.eclipse.jetty.server.CookieCutter.getCookies()"], ["void", "org.eclipse.jetty.server.CookieCutter.setCookies(javax.servlet.http.Cookie[])"], ["void", "org.eclipse.jetty.server.CookieCutter.reset()"], ["void", "org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)"], ["void", "org.eclipse.jetty.server.MultiPartCleanerListener.requestDestroyed(javax.servlet.ServletRequestEvent)"], ["void", "org.eclipse.jetty.server.MultiPartCleanerListener.requestInitialized(javax.servlet.ServletRequestEvent)"], ["void", "org.eclipse.jetty.server.LowResourceMonitor$1.run()"], ["org.eclipse.jetty.server.session.JDBCSessionDataStore", "org.eclipse.jetty.server.session.JDBCSessionDataStore()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore.initialize()"], ["org.eclipse.jetty.server.session.SessionData", "org.eclipse.jetty.server.session.JDBCSessionDataStore.doLoad(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.session.JDBCSessionDataStore.delete(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore.doStore(java.lang.String, org.eclipse.jetty.server.session.SessionData, long)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore.setDatabaseAdaptor(org.eclipse.jetty.server.session.DatabaseAdaptor)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionDataStore.setSessionTableSchema(org.eclipse.jetty.server.session.JDBCSessionDataStore$SessionTableSchema)"], ["boolean", "org.eclipse.jetty.server.session.JDBCSessionDataStore.isPassivating()"], ["boolean", "org.eclipse.jetty.server.session.JDBCSessionDataStore.exists(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionDataStore$1.run()"], ["org.eclipse.jetty.server.session.DefaultSessionIdManager", "org.eclipse.jetty.server.session.DefaultSessionIdManager(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.session.DefaultSessionIdManager", "org.eclipse.jetty.server.session.DefaultSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)"], ["void", "org.eclipse.jetty.server.session.DefaultSessionIdManager.setServer(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.session.DefaultSessionIdManager.getServer()"], ["void", "org.eclipse.jetty.server.session.DefaultSessionIdManager.setSessionHouseKeeper(org.eclipse.jetty.server.session.HouseKeeper)"], ["org.eclipse.jetty.server.session.HouseKeeper", "org.eclipse.jetty.server.session.DefaultSessionIdManager.getSessionHouseKeeper()"], ["java.lang.String", "org.eclipse.jetty.server.session.DefaultSessionIdManager.getWorkerName()"], ["void", "org.eclipse.jetty.server.session.DefaultSessionIdManager.setWorkerName(java.lang.String)"], ["java.util.Random", "org.eclipse.jetty.server.session.DefaultSessionIdManager.getRandom()"], ["synchronized", "org.eclipse.jetty.server.session.DefaultSessionIdManager.void setRandom(java.util.Random)"], ["long", "org.eclipse.jetty.server.session.DefaultSessionIdManager.getReseed()"], ["void", "org.eclipse.jetty.server.session.DefaultSessionIdManager.setReseed(long)"], ["java.lang.String", "org.eclipse.jetty.server.session.DefaultSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)"], ["java.lang.String", "org.eclipse.jetty.server.session.DefaultSessionIdManager.newSessionId(long)"], ["boolean", "org.eclipse.jetty.server.session.DefaultSessionIdManager.isIdInUse(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.DefaultSessionIdManager.initRandom()"], ["java.lang.String", "org.eclipse.jetty.server.session.DefaultSessionIdManager.getExtendedId(java.lang.String, javax.servlet.http.HttpServletRequest)"], ["java.lang.String", "org.eclipse.jetty.server.session.DefaultSessionIdManager.getId(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.DefaultSessionIdManager.expireAll(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.DefaultSessionIdManager.invalidateAll(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.DefaultSessionIdManager.renewSessionId(java.lang.String, java.lang.String, javax.servlet.http.HttpServletRequest)"], ["java.lang.String", "org.eclipse.jetty.server.session.DefaultSessionIdManager.toString()"], ["org.eclipse.jetty.server.session.Session$IdState[]", "org.eclipse.jetty.server.session.Session$IdState.values()"], ["org.eclipse.jetty.server.session.Session$IdState", "org.eclipse.jetty.server.session.Session$IdState.valueOf(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.HouseKeeper$Runner.run()"], ["org.eclipse.jetty.server.HttpInput$SentinelContent", "org.eclipse.jetty.server.HttpInput$SentinelContent(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.HttpInput$SentinelContent.toString()"], ["org.eclipse.jetty.server.handler.ManagedAttributeListener", "org.eclipse.jetty.server.handler.ManagedAttributeListener(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.ManagedAttributeListener.attributeReplaced(javax.servlet.ServletContextAttributeEvent)"], ["void", "org.eclipse.jetty.server.handler.ManagedAttributeListener.attributeRemoved(javax.servlet.ServletContextAttributeEvent)"], ["void", "org.eclipse.jetty.server.handler.ManagedAttributeListener.attributeAdded(javax.servlet.ServletContextAttributeEvent)"], ["void", "org.eclipse.jetty.server.handler.ManagedAttributeListener.contextInitialized(javax.servlet.ServletContextEvent)"], ["void", "org.eclipse.jetty.server.handler.ManagedAttributeListener.contextDestroyed(javax.servlet.ServletContextEvent)"], ["org.eclipse.jetty.server.handler.MovedContextHandler", "org.eclipse.jetty.server.handler.MovedContextHandler()"], ["org.eclipse.jetty.server.handler.MovedContextHandler", "org.eclipse.jetty.server.handler.MovedContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String, java.lang.String)"], ["boolean", "org.eclipse.jetty.server.handler.MovedContextHandler.isDiscardPathInfo()"], ["void", "org.eclipse.jetty.server.handler.MovedContextHandler.setDiscardPathInfo(boolean)"], ["java.lang.String", "org.eclipse.jetty.server.handler.MovedContextHandler.getNewContextURL()"], ["void", "org.eclipse.jetty.server.handler.MovedContextHandler.setNewContextURL(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.handler.MovedContextHandler.isPermanent()"], ["void", "org.eclipse.jetty.server.handler.MovedContextHandler.setPermanent(boolean)"], ["boolean", "org.eclipse.jetty.server.handler.MovedContextHandler.isDiscardQuery()"], ["void", "org.eclipse.jetty.server.handler.MovedContextHandler.setDiscardQuery(boolean)"], ["java.lang.String", "org.eclipse.jetty.server.handler.MovedContextHandler.getExpires()"], ["void", "org.eclipse.jetty.server.handler.MovedContextHandler.setExpires(java.lang.String)"], ["org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor$GZState[]", "org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor$GZState.values()"], ["org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor$GZState", "org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor$GZState.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.handler.IdleTimeoutHandler", "org.eclipse.jetty.server.handler.IdleTimeoutHandler()"], ["boolean", "org.eclipse.jetty.server.handler.IdleTimeoutHandler.isApplyToAsync()"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler.setApplyToAsync(boolean)"], ["long", "org.eclipse.jetty.server.handler.IdleTimeoutHandler.getIdleTimeoutMs()"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler.setIdleTimeoutMs(long)"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.AllowSymLinkAliasChecker", "org.eclipse.jetty.server.handler.AllowSymLinkAliasChecker()"], ["boolean", "org.eclipse.jetty.server.handler.AllowSymLinkAliasChecker.check(java.lang.String, org.eclipse.jetty.util.resource.Resource)"], ["org.eclipse.jetty.server.handler.DebugHandler", "org.eclipse.jetty.server.handler.DebugHandler()"], ["void", "org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["java.io.OutputStream", "org.eclipse.jetty.server.handler.DebugHandler.getOutputStream()"], ["void", "org.eclipse.jetty.server.handler.DebugHandler.setOutputStream(java.io.OutputStream)"], ["void", "org.eclipse.jetty.server.handler.DebugHandler.onOpened(org.eclipse.jetty.io.Connection)"], ["void", "org.eclipse.jetty.server.handler.DebugHandler.onClosed(org.eclipse.jetty.io.Connection)"], ["org.eclipse.jetty.server.handler.IPAccessHandler", "org.eclipse.jetty.server.handler.IPAccessHandler()"], ["org.eclipse.jetty.server.handler.IPAccessHandler", "org.eclipse.jetty.server.handler.IPAccessHandler(java.lang.String[], java.lang.String[])"], ["void", "org.eclipse.jetty.server.handler.IPAccessHandler.addWhite(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.IPAccessHandler.addBlack(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.IPAccessHandler.setWhite(java.lang.String[])"], ["void", "org.eclipse.jetty.server.handler.IPAccessHandler.setBlack(java.lang.String[])"], ["void", "org.eclipse.jetty.server.handler.IPAccessHandler.setWhiteListByPath(boolean)"], ["void", "org.eclipse.jetty.server.handler.IPAccessHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.IPAccessHandler.dump(java.lang.Appendable, java.lang.String)"], ["org.eclipse.jetty.server.Dispatcher", "org.eclipse.jetty.server.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, org.eclipse.jetty.http.HttpURI, java.lang.String)"], ["org.eclipse.jetty.server.Dispatcher", "org.eclipse.jetty.server.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String)"], ["void", "org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["void", "org.eclipse.jetty.server.Dispatcher.error(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["void", "org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["java.lang.String", "org.eclipse.jetty.server.Dispatcher.toString()"], ["org.eclipse.jetty.server.AbstractNCSARequestLog", "org.eclipse.jetty.server.AbstractNCSARequestLog(org.eclipse.jetty.server.RequestLog$Writer)"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.write(java.lang.String)"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setIgnorePaths(java.lang.String[])"], ["java.lang.String[]", "org.eclipse.jetty.server.AbstractNCSARequestLog.getIgnorePaths()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogCookies(boolean)"], ["boolean", "org.eclipse.jetty.server.AbstractNCSARequestLog.getLogCookies()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogServer(boolean)"], ["boolean", "org.eclipse.jetty.server.AbstractNCSARequestLog.getLogServer()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogLatency(boolean)"], ["boolean", "org.eclipse.jetty.server.AbstractNCSARequestLog.getLogLatency()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogDispatch(boolean)"], ["boolean", "org.eclipse.jetty.server.AbstractNCSARequestLog.isLogDispatch()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setPreferProxiedForAddress(boolean)"], ["boolean", "org.eclipse.jetty.server.AbstractNCSARequestLog.getPreferProxiedForAddress()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setExtended(boolean)"], ["boolean", "org.eclipse.jetty.server.AbstractNCSARequestLog.isExtended()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogDateFormat(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.AbstractNCSARequestLog.getLogDateFormat()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogLocale(java.util.Locale)"], ["java.util.Locale", "org.eclipse.jetty.server.AbstractNCSARequestLog.getLogLocale()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogTimeZone(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.AbstractNCSARequestLog.getLogTimeZone()"], ["org.eclipse.jetty.server.AsyncNCSARequestLog", "org.eclipse.jetty.server.AsyncNCSARequestLog()"], ["org.eclipse.jetty.server.AsyncNCSARequestLog", "org.eclipse.jetty.server.AsyncNCSARequestLog(java.lang.String, java.util.concurrent.BlockingQueue<java.lang.String>)"], ["org.eclipse.jetty.server.HomeBaseWarning", "org.eclipse.jetty.server.HomeBaseWarning()"], ["java.lang.String", "org.eclipse.jetty.server.NegotiatingServerConnection.getDefaultProtocol()"], ["org.eclipse.jetty.server.Connector", "org.eclipse.jetty.server.NegotiatingServerConnection.getConnector()"], ["javax.net.ssl.SSLEngine", "org.eclipse.jetty.server.NegotiatingServerConnection.getSSLEngine()"], ["java.lang.String", "org.eclipse.jetty.server.NegotiatingServerConnection.getProtocol()"], ["void", "org.eclipse.jetty.server.NegotiatingServerConnection.onOpen()"], ["void", "org.eclipse.jetty.server.NegotiatingServerConnection.onFillable()"], ["void", "org.eclipse.jetty.server.NegotiatingServerConnection.close()"], ["org.eclipse.jetty.util.thread.Invocable$InvocationType", "org.eclipse.jetty.server.HttpConnection$SendCallback.getInvocationType()"], ["org.eclipse.jetty.util.IteratingCallback$Action", "org.eclipse.jetty.server.HttpConnection$SendCallback.process()"], ["void", "org.eclipse.jetty.server.HttpConnection$SendCallback.onCompleteFailure(java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.server.HttpConnection$SendCallback.toString()"], ["org.eclipse.jetty.server.OptionalSslConnectionFactory", "org.eclipse.jetty.server.OptionalSslConnectionFactory(org.eclipse.jetty.server.SslConnectionFactory, java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpOutput$InputStreamWritingCB.onCompleteFailure(java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getKey()"], ["boolean", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.isCached()"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getResource()"], ["org.eclipse.jetty.http.HttpField", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getETag()"], ["java.lang.String", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getETagValue()"], ["org.eclipse.jetty.http.HttpField", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getLastModified()"], ["java.lang.String", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getLastModifiedValue()"], ["org.eclipse.jetty.http.HttpField", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getContentType()"], ["java.lang.String", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getContentTypeValue()"], ["org.eclipse.jetty.http.HttpField", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getContentEncoding()"], ["java.lang.String", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getContentEncodingValue()"], ["java.lang.String", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getCharacterEncoding()"], ["org.eclipse.jetty.http.MimeTypes$Type", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getMimeType()"], ["void", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.release()"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getIndirectBuffer()"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getDirectBuffer()"], ["org.eclipse.jetty.http.HttpField", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getContentLength()"], ["long", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getContentLengthValue()"], ["java.io.InputStream", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getInputStream()"], ["java.nio.channels.ReadableByteChannel", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getReadableByteChannel()"], ["java.lang.String", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.toString()"], ["java.util.Map<org.eclipse.jetty.http.CompressedContentFormat, ? extends org.eclipse.jetty.http.HttpContent>", "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent.getPrecompressedContents()"], ["org.eclipse.jetty.server.RequestLogCollection", "org.eclipse.jetty.server.RequestLogCollection(org.eclipse.jetty.server.RequestLog...)"], ["void", "org.eclipse.jetty.server.RequestLogCollection.add(org.eclipse.jetty.server.RequestLog)"], ["void", "org.eclipse.jetty.server.RequestLogCollection.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)"], ["void", "org.eclipse.jetty.server.HttpOutput$1.succeeded()"], ["void", "org.eclipse.jetty.server.HttpOutput$1.failed(java.lang.Throwable)"], ["org.eclipse.jetty.server.ServerConnectionStatistics", "org.eclipse.jetty.server.ServerConnectionStatistics()"], ["void", "org.eclipse.jetty.server.ServerConnectionStatistics.addToAllConnectors(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.LowResourceMonitor$MemoryLowResourceCheck", "org.eclipse.jetty.server.LowResourceMonitor$MemoryLowResourceCheck(org.eclipse.jetty.server.LowResourceMonitor, long)"], ["boolean", "org.eclipse.jetty.server.LowResourceMonitor$MemoryLowResourceCheck.isLowOnResources()"], ["long", "org.eclipse.jetty.server.LowResourceMonitor$MemoryLowResourceCheck.getMaxMemory()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor$MemoryLowResourceCheck.setMaxMemory(long)"], ["java.lang.String", "org.eclipse.jetty.server.LowResourceMonitor$MemoryLowResourceCheck.getReason()"], ["java.lang.String", "org.eclipse.jetty.server.LowResourceMonitor$MemoryLowResourceCheck.toString()"], ["org.eclipse.jetty.server.HttpChannelState$RequestState[]", "org.eclipse.jetty.server.HttpChannelState$RequestState.values()"], ["org.eclipse.jetty.server.HttpChannelState$RequestState", "org.eclipse.jetty.server.HttpChannelState$RequestState.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.LocalConnector", "org.eclipse.jetty.server.LocalConnector(org.eclipse.jetty.server.Server, java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, org.eclipse.jetty.io.ByteBufferPool, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.LocalConnector", "org.eclipse.jetty.server.LocalConnector(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.LocalConnector", "org.eclipse.jetty.server.LocalConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["org.eclipse.jetty.server.LocalConnector", "org.eclipse.jetty.server.LocalConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory)"], ["org.eclipse.jetty.server.LocalConnector", "org.eclipse.jetty.server.LocalConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["java.lang.Object", "org.eclipse.jetty.server.LocalConnector.getTransport()"], ["java.lang.String", "org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String, long, java.util.concurrent.TimeUnit)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.LocalConnector.getResponses(java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.LocalConnector.getResponses(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit)"], ["org.eclipse.jetty.server.LocalConnector$LocalEndPoint", "org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)"], ["org.eclipse.jetty.server.LocalConnector$LocalEndPoint", "org.eclipse.jetty.server.LocalConnector.connect()"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.LocalConnector.getResponse(java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.LocalConnector.getResponse(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.LocalConnector.getResponse(java.nio.ByteBuffer, boolean, long, java.util.concurrent.TimeUnit)"], ["java.lang.String", "org.eclipse.jetty.server.LocalConnector.getResponse(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.LocalConnector.getResponse(java.lang.String, long, java.util.concurrent.TimeUnit)"], ["java.lang.String", "org.eclipse.jetty.server.LocalConnector.getResponse(java.lang.String, boolean, long, java.util.concurrent.TimeUnit)"], ["org.eclipse.jetty.server.ForwardedRequestCustomizer", "org.eclipse.jetty.server.ForwardedRequestCustomizer()"], ["boolean", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getProxyAsAuthority()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setProxyAsAuthority(boolean)"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedOnly(boolean)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForcedHost()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForcedHost(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedHostHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedHostHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedServerHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedServerHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedForHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedForHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedPortHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedPortHeader(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedPortAsAuthority()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedPortAsAuthority(boolean)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedProtoHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedProtoHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedCipherSuiteHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedCipherSuiteHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedSslSessionIdHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedSslSessionIdHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedHttpsHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedHttpsHeader(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.ForwardedRequestCustomizer.isSslIsSecure()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setSslIsSecure(boolean)"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.customize(org.eclipse.jetty.server.Connector, org.eclipse.jetty.server.HttpConfiguration, org.eclipse.jetty.server.Request)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.toString()"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getHostHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setHostHeader(java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpOutput$NestedChannelWriteCB.onCompleteFailure(java.lang.Throwable)"], ["org.eclipse.jetty.server.HttpConnectionFactory", "org.eclipse.jetty.server.HttpConnectionFactory()"], ["org.eclipse.jetty.server.HttpConnectionFactory", "org.eclipse.jetty.server.HttpConnectionFactory(org.eclipse.jetty.server.HttpConfiguration)"], ["org.eclipse.jetty.server.HttpConnectionFactory", "org.eclipse.jetty.server.HttpConnectionFactory(org.eclipse.jetty.server.HttpConfiguration, org.eclipse.jetty.http.HttpCompliance)"], ["org.eclipse.jetty.server.HttpConfiguration", "org.eclipse.jetty.server.HttpConnectionFactory.getHttpConfiguration()"], ["org.eclipse.jetty.http.HttpCompliance", "org.eclipse.jetty.server.HttpConnectionFactory.getHttpCompliance()"], ["boolean", "org.eclipse.jetty.server.HttpConnectionFactory.isRecordHttpComplianceViolations()"], ["void", "org.eclipse.jetty.server.HttpConnectionFactory.setHttpCompliance(org.eclipse.jetty.http.HttpCompliance)"], ["org.eclipse.jetty.io.Connection", "org.eclipse.jetty.server.HttpConnectionFactory.newConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint)"], ["void", "org.eclipse.jetty.server.HttpConnectionFactory.setRecordHttpComplianceViolations(boolean)"], ["org.eclipse.jetty.server.NCSARequestLog", "org.eclipse.jetty.server.NCSARequestLog()"], ["org.eclipse.jetty.server.NCSARequestLog", "org.eclipse.jetty.server.NCSARequestLog(java.lang.String)"], ["org.eclipse.jetty.server.NCSARequestLog", "org.eclipse.jetty.server.NCSARequestLog(org.eclipse.jetty.server.RequestLogWriter)"], ["void", "org.eclipse.jetty.server.NCSARequestLog.setFilename(java.lang.String)"], ["void", "org.eclipse.jetty.server.NCSARequestLog.setLogTimeZone(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.NCSARequestLog.getFilename()"], ["java.lang.String", "org.eclipse.jetty.server.NCSARequestLog.getDatedFilename()"], ["void", "org.eclipse.jetty.server.NCSARequestLog.setRetainDays(int)"], ["int", "org.eclipse.jetty.server.NCSARequestLog.getRetainDays()"], ["void", "org.eclipse.jetty.server.NCSARequestLog.setAppend(boolean)"], ["boolean", "org.eclipse.jetty.server.NCSARequestLog.isAppend()"], ["void", "org.eclipse.jetty.server.NCSARequestLog.setFilenameDateFormat(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.NCSARequestLog.getFilenameDateFormat()"], ["void", "org.eclipse.jetty.server.NCSARequestLog.write(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.UnreadableSessionDataException.getId()"], ["org.eclipse.jetty.server.session.SessionContext", "org.eclipse.jetty.server.session.UnreadableSessionDataException.getSessionContext()"], ["org.eclipse.jetty.server.session.UnreadableSessionDataException", "org.eclipse.jetty.server.session.UnreadableSessionDataException(java.lang.String, org.eclipse.jetty.server.session.SessionContext, java.lang.Throwable)"], ["org.eclipse.jetty.server.session.SessionHandler", "org.eclipse.jetty.server.session.SessionHandler()"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionHandler.getSessionPath()"], ["int", "org.eclipse.jetty.server.session.SessionHandler.getMaxCookieAge()"], ["org.eclipse.jetty.http.HttpCookie", "org.eclipse.jetty.server.session.SessionHandler.access(javax.servlet.http.HttpSession, boolean)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.addEventListener(java.util.EventListener)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.clearEventListeners()"], ["void", "org.eclipse.jetty.server.session.SessionHandler.complete(javax.servlet.http.HttpSession)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.commit(javax.servlet.http.HttpSession)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.complete(org.eclipse.jetty.server.session.Session, org.eclipse.jetty.server.Request)"], ["boolean", "org.eclipse.jetty.server.session.SessionHandler.getHttpOnly()"], ["org.eclipse.jetty.http.HttpCookie$SameSite", "org.eclipse.jetty.server.session.SessionHandler.getSameSite()"], ["org.eclipse.jetty.server.SessionIdManager", "org.eclipse.jetty.server.session.SessionHandler.getSessionIdManager()"], ["int", "org.eclipse.jetty.server.session.SessionHandler.getMaxInactiveInterval()"], ["int", "org.eclipse.jetty.server.session.SessionHandler.getRefreshCookieAge()"], ["boolean", "org.eclipse.jetty.server.session.SessionHandler.getSecureCookies()"], ["boolean", "org.eclipse.jetty.server.session.SessionHandler.isSecureRequestOnly()"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setSecureRequestOnly(boolean)"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionHandler.getSessionCookie()"], ["org.eclipse.jetty.http.HttpCookie", "org.eclipse.jetty.server.session.SessionHandler.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionHandler.getSessionDomain()"], ["int", "org.eclipse.jetty.server.session.SessionHandler.getSessionsCreated()"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionHandler.getSessionIdPathParameterName()"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionHandler.getSessionIdPathParameterNamePrefix()"], ["boolean", "org.eclipse.jetty.server.session.SessionHandler.isUsingCookies()"], ["boolean", "org.eclipse.jetty.server.session.SessionHandler.isValid(javax.servlet.http.HttpSession)"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionHandler.getId(javax.servlet.http.HttpSession)"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionHandler.getExtendedId(javax.servlet.http.HttpSession)"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.session.SessionHandler.newHttpSession(javax.servlet.http.HttpServletRequest)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.removeEventListener(java.util.EventListener)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.statsReset()"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setHttpOnly(boolean)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setSameSite(org.eclipse.jetty.http.HttpCookie$SameSite)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setMaxInactiveInterval(int)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setRefreshCookieAge(int)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setSessionCookie(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setSessionIdPathParameterName(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setUsingCookies(boolean)"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.SessionHandler.getSession(java.lang.String)"], ["org.eclipse.jetty.server.session.SessionCache", "org.eclipse.jetty.server.session.SessionHandler.getSessionCache()"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setSessionCache(org.eclipse.jetty.server.session.SessionCache)"], ["boolean", "org.eclipse.jetty.server.session.SessionHandler.isNodeIdInSessionId()"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setNodeIdInSessionId(boolean)"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.SessionHandler.removeSession(java.lang.String, boolean)"], ["long", "org.eclipse.jetty.server.session.SessionHandler.getSessionTimeMax()"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setSessionTrackingModes(java.util.Set<javax.servlet.SessionTrackingMode>)"], ["boolean", "org.eclipse.jetty.server.session.SessionHandler.isUsingURLs()"], ["javax.servlet.SessionCookieConfig", "org.eclipse.jetty.server.session.SessionHandler.getSessionCookieConfig()"], ["long", "org.eclipse.jetty.server.session.SessionHandler.getSessionTimeTotal()"], ["double", "org.eclipse.jetty.server.session.SessionHandler.getSessionTimeMean()"], ["double", "org.eclipse.jetty.server.session.SessionHandler.getSessionTimeStdDev()"], ["boolean", "org.eclipse.jetty.server.session.SessionHandler.isCheckingRemoteSessionIdEncoding()"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setCheckingRemoteSessionIdEncoding(boolean)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.renewSessionId(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.invalidate(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.scavenge()"], ["void", "org.eclipse.jetty.server.session.SessionHandler.sessionInactivityTimerExpired(org.eclipse.jetty.server.session.Session)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.sessionInactivityTimerExpired(org.eclipse.jetty.server.session.Session, long)"], ["boolean", "org.eclipse.jetty.server.session.SessionHandler.isIdInUse(java.lang.String)"], ["org.eclipse.jetty.util.thread.Scheduler", "org.eclipse.jetty.server.session.SessionHandler.getScheduler()"], ["void", "org.eclipse.jetty.server.session.SessionHandler.doSessionAttributeListeners(org.eclipse.jetty.server.session.Session, java.lang.String, java.lang.Object, java.lang.Object)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionHandler.toString()"], ["org.eclipse.jetty.server.session.NullSessionDataStore", "org.eclipse.jetty.server.session.NullSessionDataStore()"], ["org.eclipse.jetty.server.session.SessionData", "org.eclipse.jetty.server.session.NullSessionDataStore.doLoad(java.lang.String)"], ["org.eclipse.jetty.server.session.SessionData", "org.eclipse.jetty.server.session.NullSessionDataStore.newSessionData(java.lang.String, long, long, long, long)"], ["boolean", "org.eclipse.jetty.server.session.NullSessionDataStore.delete(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.NullSessionDataStore.doStore(java.lang.String, org.eclipse.jetty.server.session.SessionData, long)"], ["boolean", "org.eclipse.jetty.server.session.NullSessionDataStore.isPassivating()"], ["boolean", "org.eclipse.jetty.server.session.NullSessionDataStore.exists(java.lang.String)"], ["org.eclipse.jetty.server.session.DefaultSessionCacheFactory", "org.eclipse.jetty.server.session.DefaultSessionCacheFactory()"], ["org.eclipse.jetty.server.session.SessionCache", "org.eclipse.jetty.server.session.DefaultSessionCacheFactory.getSessionCache(org.eclipse.jetty.server.session.SessionHandler)"], ["boolean", "org.eclipse.jetty.server.HttpInput$State.blockForContent(org.eclipse.jetty.server.HttpInput)"], ["int", "org.eclipse.jetty.server.HttpInput$State.noContent()"], ["java.lang.Throwable", "org.eclipse.jetty.server.HttpInput$State.getError()"], ["org.eclipse.jetty.server.handler.ThreadLimitHandler$Remote", "org.eclipse.jetty.server.handler.ThreadLimitHandler$Remote(org.eclipse.jetty.server.handler.ThreadLimitHandler, java.lang.String, int)"], ["void", "org.eclipse.jetty.server.handler.ThreadLimitHandler$Remote.close()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ThreadLimitHandler$Remote.toString()"], ["org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor", "org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor(org.eclipse.jetty.server.handler.gzip.GzipFactory, org.eclipse.jetty.server.HttpChannel, org.eclipse.jetty.server.HttpOutput$Interceptor, boolean)"], ["org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor", "org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor(org.eclipse.jetty.server.handler.gzip.GzipFactory, org.eclipse.jetty.http.HttpField, org.eclipse.jetty.server.HttpChannel, org.eclipse.jetty.server.HttpOutput$Interceptor, boolean)"], ["org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor", "org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor(org.eclipse.jetty.server.handler.gzip.GzipFactory, org.eclipse.jetty.http.HttpField, int, org.eclipse.jetty.server.HttpChannel, org.eclipse.jetty.server.HttpOutput$Interceptor, boolean)"], ["org.eclipse.jetty.server.HttpOutput$Interceptor", "org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor.getNextInterceptor()"], ["boolean", "org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor.isOptimizedForDirectBuffers()"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor.write(java.nio.ByteBuffer, boolean, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor.noCompression()"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor.noCompressionIfPossible()"], ["boolean", "org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor.mightCompress()"], ["org.eclipse.jetty.server.handler.HandlerWrapper", "org.eclipse.jetty.server.handler.HandlerWrapper()"], ["org.eclipse.jetty.server.Handler", "org.eclipse.jetty.server.handler.HandlerWrapper.getHandler()"], ["org.eclipse.jetty.server.Handler[]", "org.eclipse.jetty.server.handler.HandlerWrapper.getHandlers()"], ["void", "org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)"], ["void", "org.eclipse.jetty.server.handler.HandlerWrapper.insertHandler(org.eclipse.jetty.server.handler.HandlerWrapper)"], ["void", "org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.HandlerWrapper.destroy()"], ["org.eclipse.jetty.server.handler.BufferedResponseHandler", "org.eclipse.jetty.server.handler.BufferedResponseHandler()"], ["void", "org.eclipse.jetty.server.handler.BufferedResponseHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.AbstractHandler", "org.eclipse.jetty.server.handler.AbstractHandler()"], ["void", "org.eclipse.jetty.server.handler.AbstractHandler.setServer(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.handler.AbstractHandler.getServer()"], ["void", "org.eclipse.jetty.server.handler.AbstractHandler.destroy()"], ["org.eclipse.jetty.server.HttpInputOverHTTP", "org.eclipse.jetty.server.HttpInputOverHTTP(org.eclipse.jetty.server.HttpChannelState)"], ["org.eclipse.jetty.server.HttpOutput$State[]", "org.eclipse.jetty.server.HttpOutput$State.values()"], ["org.eclipse.jetty.server.HttpOutput$State", "org.eclipse.jetty.server.HttpOutput$State.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.ServerConnector$ServerConnectorManager", "org.eclipse.jetty.server.ServerConnector$ServerConnectorManager(org.eclipse.jetty.server.ServerConnector, java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, int)"], ["org.eclipse.jetty.io.Connection", "org.eclipse.jetty.server.ServerConnector$ServerConnectorManager.newConnection(java.nio.channels.SelectableChannel, org.eclipse.jetty.io.EndPoint, java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.server.ServerConnector$ServerConnectorManager.toString()"], ["org.eclipse.jetty.server.ResourceContentFactory", "org.eclipse.jetty.server.ResourceContentFactory(org.eclipse.jetty.util.resource.ResourceFactory, org.eclipse.jetty.http.MimeTypes, org.eclipse.jetty.http.CompressedContentFormat[])"], ["org.eclipse.jetty.http.HttpContent", "org.eclipse.jetty.server.ResourceContentFactory.getContent(java.lang.String, int)"], ["java.lang.String", "org.eclipse.jetty.server.ResourceContentFactory.toString()"], ["java.lang.String", "org.eclipse.jetty.server.Authentication$4.toString()"], ["org.eclipse.jetty.server.HttpConfiguration", "org.eclipse.jetty.server.HttpConfiguration()"], ["org.eclipse.jetty.server.HttpConfiguration", "org.eclipse.jetty.server.HttpConfiguration(org.eclipse.jetty.server.HttpConfiguration)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.addCustomizer(org.eclipse.jetty.server.HttpConfiguration$Customizer)"], ["<T> T", "org.eclipse.jetty.server.HttpConfiguration.getCustomizer(java.lang.Class<T>)"], ["int", "org.eclipse.jetty.server.HttpConfiguration.getOutputBufferSize()"], ["int", "org.eclipse.jetty.server.HttpConfiguration.getOutputAggregationSize()"], ["int", "org.eclipse.jetty.server.HttpConfiguration.getRequestHeaderSize()"], ["int", "org.eclipse.jetty.server.HttpConfiguration.getResponseHeaderSize()"], ["int", "org.eclipse.jetty.server.HttpConfiguration.getHeaderCacheSize()"], ["int", "org.eclipse.jetty.server.HttpConfiguration.getSecurePort()"], ["java.lang.String", "org.eclipse.jetty.server.HttpConfiguration.getSecureScheme()"], ["boolean", "org.eclipse.jetty.server.HttpConfiguration.isPersistentConnectionsEnabled()"], ["long", "org.eclipse.jetty.server.HttpConfiguration.getIdleTimeout()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setIdleTimeout(long)"], ["long", "org.eclipse.jetty.server.HttpConfiguration.getBlockingTimeout()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setBlockingTimeout(long)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setPersistentConnectionsEnabled(boolean)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setSendServerVersion(boolean)"], ["boolean", "org.eclipse.jetty.server.HttpConfiguration.getSendServerVersion()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.writePoweredBy(java.lang.Appendable, java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setSendXPoweredBy(boolean)"], ["boolean", "org.eclipse.jetty.server.HttpConfiguration.getSendXPoweredBy()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setSendDateHeader(boolean)"], ["boolean", "org.eclipse.jetty.server.HttpConfiguration.getSendDateHeader()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setDelayDispatchUntilContent(boolean)"], ["boolean", "org.eclipse.jetty.server.HttpConfiguration.isDelayDispatchUntilContent()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setCustomizers(java.util.List<org.eclipse.jetty.server.HttpConfiguration$Customizer>)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setOutputBufferSize(int)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setOutputAggregationSize(int)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setRequestHeaderSize(int)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setResponseHeaderSize(int)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setHeaderCacheSize(int)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setSecurePort(int)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setSecureScheme(java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setFormEncodedMethods(java.lang.String...)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.addFormEncodedMethod(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.HttpConfiguration.isFormEncodedMethod(java.lang.String)"], ["int", "org.eclipse.jetty.server.HttpConfiguration.getMaxErrorDispatches()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setMaxErrorDispatches(int)"], ["long", "org.eclipse.jetty.server.HttpConfiguration.getMinRequestDataRate()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setMinRequestDataRate(long)"], ["long", "org.eclipse.jetty.server.HttpConfiguration.getMinResponseDataRate()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setMinResponseDataRate(long)"], ["org.eclipse.jetty.http.CookieCompliance", "org.eclipse.jetty.server.HttpConfiguration.getRequestCookieCompliance()"], ["org.eclipse.jetty.http.CookieCompliance", "org.eclipse.jetty.server.HttpConfiguration.getResponseCookieCompliance()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setRequestCookieCompliance(org.eclipse.jetty.http.CookieCompliance)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setResponseCookieCompliance(org.eclipse.jetty.http.CookieCompliance)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setCookieCompliance(org.eclipse.jetty.http.CookieCompliance)"], ["org.eclipse.jetty.http.CookieCompliance", "org.eclipse.jetty.server.HttpConfiguration.getCookieCompliance()"], ["boolean", "org.eclipse.jetty.server.HttpConfiguration.isCookieCompliance(org.eclipse.jetty.http.CookieCompliance)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setMultiPartFormDataCompliance(org.eclipse.jetty.server.MultiPartFormDataCompliance)"], ["org.eclipse.jetty.server.MultiPartFormDataCompliance", "org.eclipse.jetty.server.HttpConfiguration.getMultipartFormDataCompliance()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setNotifyRemoteAsyncErrors(boolean)"], ["boolean", "org.eclipse.jetty.server.HttpConfiguration.isNotifyRemoteAsyncErrors()"], ["java.lang.String", "org.eclipse.jetty.server.HttpConfiguration.dump()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.dump(java.lang.Appendable, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.HttpConfiguration.toString()"], ["void", "org.eclipse.jetty.server.HttpChannel$SendCallback.succeeded()"], ["void", "org.eclipse.jetty.server.HttpChannel$SendCallback.failed(java.lang.Throwable)"], ["org.eclipse.jetty.server.Response$EncodingFrom[]", "org.eclipse.jetty.server.Response$EncodingFrom.values()"], ["org.eclipse.jetty.server.Response$EncodingFrom", "org.eclipse.jetty.server.Response$EncodingFrom.valueOf(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Authentication$5.toString()"], ["org.eclipse.jetty.server.ConnectionFactory$Detecting$Detection", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV1ConnectionFactory.detect(java.nio.ByteBuffer)"], ["org.eclipse.jetty.io.Connection", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV1ConnectionFactory.newConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint)"], ["org.eclipse.jetty.server.LowResourceMonitor$MaxConnectionsLowResourceCheck", "org.eclipse.jetty.server.LowResourceMonitor$MaxConnectionsLowResourceCheck(org.eclipse.jetty.server.LowResourceMonitor, int)"], ["int", "org.eclipse.jetty.server.LowResourceMonitor$MaxConnectionsLowResourceCheck.getMaxConnections()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor$MaxConnectionsLowResourceCheck.setMaxConnections(int)"], ["boolean", "org.eclipse.jetty.server.LowResourceMonitor$MaxConnectionsLowResourceCheck.isLowOnResources()"], ["java.lang.String", "org.eclipse.jetty.server.LowResourceMonitor$MaxConnectionsLowResourceCheck.getReason()"], ["java.lang.String", "org.eclipse.jetty.server.LowResourceMonitor$MaxConnectionsLowResourceCheck.toString()"], ["org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint(org.eclipse.jetty.io.EndPoint, java.net.InetSocketAddress, java.net.InetSocketAddress)"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.close()"], ["int", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.fill(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.fillInterested(org.eclipse.jetty.util.Callback)"], ["boolean", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.flush(java.nio.ByteBuffer...)"], ["org.eclipse.jetty.io.Connection", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.getConnection()"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.setConnection(org.eclipse.jetty.io.Connection)"], ["long", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.getCreatedTimeStamp()"], ["long", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.getIdleTimeout()"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.setIdleTimeout(long)"], ["java.net.InetSocketAddress", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.getLocalAddress()"], ["java.net.InetSocketAddress", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.getRemoteAddress()"], ["java.lang.Object", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.getTransport()"], ["boolean", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.isFillInterested()"], ["boolean", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.isInputShutdown()"], ["boolean", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.isOpen()"], ["boolean", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.isOptimizedForDirectBuffers()"], ["boolean", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.isOutputShutdown()"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.onClose()"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.onOpen()"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.shutdownOutput()"], ["java.lang.String", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.toString()"], ["boolean", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.tryFillInterested(org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.upgrade(org.eclipse.jetty.io.Connection)"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyEndPoint.write(org.eclipse.jetty.util.Callback, java.nio.ByteBuffer...)"], ["org.eclipse.jetty.server.DetectorConnectionFactory$DetectionFailureException", "org.eclipse.jetty.server.DetectorConnectionFactory$DetectionFailureException(java.lang.Throwable)"], ["org.eclipse.jetty.server.ServletResponseHttpWrapper", "org.eclipse.jetty.server.ServletResponseHttpWrapper(javax.servlet.ServletResponse)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.addCookie(javax.servlet.http.Cookie)"], ["boolean", "org.eclipse.jetty.server.ServletResponseHttpWrapper.containsHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletResponseHttpWrapper.encodeURL(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletResponseHttpWrapper.encodeRedirectURL(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletResponseHttpWrapper.encodeUrl(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletResponseHttpWrapper.encodeRedirectUrl(java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.sendError(int, java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.sendError(int)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.sendRedirect(java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.setDateHeader(java.lang.String, long)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.addDateHeader(java.lang.String, long)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.setHeader(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.addHeader(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.setIntHeader(java.lang.String, int)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.addIntHeader(java.lang.String, int)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.setStatus(int)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.setStatus(int, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletResponseHttpWrapper.getHeader(java.lang.String)"], ["int", "org.eclipse.jetty.server.ServletResponseHttpWrapper.getStatus()"], ["org.eclipse.jetty.server.Request", "org.eclipse.jetty.server.Request.getBaseRequest(javax.servlet.ServletRequest)"], ["org.eclipse.jetty.server.Request", "org.eclipse.jetty.server.Request(org.eclipse.jetty.server.HttpChannel, org.eclipse.jetty.server.HttpInput)"], ["org.eclipse.jetty.http.HttpFields", "org.eclipse.jetty.server.Request.getHttpFields()"], ["org.eclipse.jetty.http.HttpFields", "org.eclipse.jetty.server.Request.getTrailers()"], ["org.eclipse.jetty.server.HttpInput", "org.eclipse.jetty.server.Request.getHttpInput()"], ["boolean", "org.eclipse.jetty.server.Request.isPush()"], ["boolean", "org.eclipse.jetty.server.Request.isPushSupported()"], ["org.eclipse.jetty.server.PushBuilder", "org.eclipse.jetty.server.Request.getPushBuilder()"], ["void", "org.eclipse.jetty.server.Request.addEventListener(java.util.EventListener)"], ["void", "org.eclipse.jetty.server.Request.enterSession(javax.servlet.http.HttpSession)"], ["void", "org.eclipse.jetty.server.Request.extractFormParameters(org.eclipse.jetty.util.MultiMap<java.lang.String>)"], ["javax.servlet.AsyncContext", "org.eclipse.jetty.server.Request.getAsyncContext()"], ["org.eclipse.jetty.server.HttpChannelState", "org.eclipse.jetty.server.Request.getHttpChannelState()"], ["java.lang.Object", "org.eclipse.jetty.server.Request.getAttribute(java.lang.String)"], ["org.eclipse.jetty.util.Attributes", "org.eclipse.jetty.server.Request.getAttributes()"], ["org.eclipse.jetty.server.Authentication", "org.eclipse.jetty.server.Request.getAuthentication()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getAuthType()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getCharacterEncoding()"], ["org.eclipse.jetty.server.HttpChannel", "org.eclipse.jetty.server.Request.getHttpChannel()"], ["int", "org.eclipse.jetty.server.Request.getContentLength()"], ["long", "org.eclipse.jetty.server.Request.getContentLengthLong()"], ["long", "org.eclipse.jetty.server.Request.getContentRead()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getContentType()"], ["org.eclipse.jetty.server.handler.ContextHandler$Context", "org.eclipse.jetty.server.Request.getContext()"], ["org.eclipse.jetty.server.handler.ContextHandler$Context", "org.eclipse.jetty.server.Request.getErrorContext()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getContextPath()"], ["javax.servlet.http.Cookie[]", "org.eclipse.jetty.server.Request.getCookies()"], ["long", "org.eclipse.jetty.server.Request.getDateHeader(java.lang.String)"], ["javax.servlet.DispatcherType", "org.eclipse.jetty.server.Request.getDispatcherType()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getHeader(java.lang.String)"], ["int", "org.eclipse.jetty.server.Request.getInputState()"], ["javax.servlet.ServletInputStream", "org.eclipse.jetty.server.Request.getInputStream()"], ["int", "org.eclipse.jetty.server.Request.getIntHeader(java.lang.String)"], ["java.util.Locale", "org.eclipse.jetty.server.Request.getLocale()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getLocalAddr()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getLocalName()"], ["int", "org.eclipse.jetty.server.Request.getLocalPort()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getMethod()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getParameter(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String[]>", "org.eclipse.jetty.server.Request.getParameterMap()"], ["java.lang.String[]", "org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setQueryParameters(org.eclipse.jetty.util.MultiMap<java.lang.String>)"], ["void", "org.eclipse.jetty.server.Request.setContentParameters(org.eclipse.jetty.util.MultiMap<java.lang.String>)"], ["void", "org.eclipse.jetty.server.Request.resetParameters()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getPathInfo()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getPathTranslated()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getProtocol()"], ["org.eclipse.jetty.http.HttpVersion", "org.eclipse.jetty.server.Request.getHttpVersion()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getQueryEncoding()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getQueryString()"], ["java.io.BufferedReader", "org.eclipse.jetty.server.Request.getReader()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getRealPath(java.lang.String)"], ["java.net.InetSocketAddress", "org.eclipse.jetty.server.Request.getRemoteInetSocketAddress()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getRemoteAddr()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getRemoteHost()"], ["int", "org.eclipse.jetty.server.Request.getRemotePort()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getRemoteUser()"], ["javax.servlet.RequestDispatcher", "org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Request.getRequestedSessionId()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getRequestURI()"], ["java.lang.StringBuffer", "org.eclipse.jetty.server.Request.getRequestURL()"], ["org.eclipse.jetty.server.Response", "org.eclipse.jetty.server.Request.getResponse()"], ["java.lang.StringBuilder", "org.eclipse.jetty.server.Request.getRootURL()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getScheme()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getServerName()"], ["int", "org.eclipse.jetty.server.Request.getServerPort()"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.Request.getServletContext()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getServletName()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getServletPath()"], ["javax.servlet.ServletResponse", "org.eclipse.jetty.server.Request.getServletResponse()"], ["java.lang.String", "org.eclipse.jetty.server.Request.changeSessionId()"], ["void", "org.eclipse.jetty.server.Request.onCompleted()"], ["void", "org.eclipse.jetty.server.Request.onResponseCommit()"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.Request.getSession(org.eclipse.jetty.server.session.SessionHandler)"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.Request.getSession()"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.Request.getSession(boolean)"], ["org.eclipse.jetty.server.session.SessionHandler", "org.eclipse.jetty.server.Request.getSessionHandler()"], ["long", "org.eclipse.jetty.server.Request.getTimeStamp()"], ["org.eclipse.jetty.http.HttpURI", "org.eclipse.jetty.server.Request.getHttpURI()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getOriginalURI()"], ["void", "org.eclipse.jetty.server.Request.setHttpURI(org.eclipse.jetty.http.HttpURI)"], ["org.eclipse.jetty.server.UserIdentity", "org.eclipse.jetty.server.Request.getUserIdentity()"], ["org.eclipse.jetty.server.UserIdentity", "org.eclipse.jetty.server.Request.getResolvedUserIdentity()"], ["org.eclipse.jetty.server.UserIdentity$Scope", "org.eclipse.jetty.server.Request.getUserIdentityScope()"], ["java.security.Principal", "org.eclipse.jetty.server.Request.getUserPrincipal()"], ["boolean", "org.eclipse.jetty.server.Request.isHandled()"], ["boolean", "org.eclipse.jetty.server.Request.isAsyncStarted()"], ["boolean", "org.eclipse.jetty.server.Request.isAsyncSupported()"], ["boolean", "org.eclipse.jetty.server.Request.isRequestedSessionIdFromCookie()"], ["boolean", "org.eclipse.jetty.server.Request.isRequestedSessionIdFromUrl()"], ["boolean", "org.eclipse.jetty.server.Request.isRequestedSessionIdFromURL()"], ["boolean", "org.eclipse.jetty.server.Request.isRequestedSessionIdValid()"], ["boolean", "org.eclipse.jetty.server.Request.isSecure()"], ["void", "org.eclipse.jetty.server.Request.setSecure(boolean)"], ["boolean", "org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setMetaData(org.eclipse.jetty.http.MetaData$Request)"], ["org.eclipse.jetty.http.MetaData$Request", "org.eclipse.jetty.server.Request.getMetaData()"], ["boolean", "org.eclipse.jetty.server.Request.hasMetaData()"], ["void", "org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.removeEventListener(java.util.EventListener)"], ["void", "org.eclipse.jetty.server.Request.setAsyncSupported(boolean, java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.Request.setAttributes(org.eclipse.jetty.util.Attributes)"], ["void", "org.eclipse.jetty.server.Request.setAuthentication(org.eclipse.jetty.server.Authentication)"], ["void", "org.eclipse.jetty.server.Request.setCharacterEncoding(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setCharacterEncodingUnchecked(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setContentType(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setContext(org.eclipse.jetty.server.handler.ContextHandler$Context)"], ["boolean", "org.eclipse.jetty.server.Request.takeNewContext()"], ["void", "org.eclipse.jetty.server.Request.setContextPath(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setCookies(javax.servlet.http.Cookie[])"], ["void", "org.eclipse.jetty.server.Request.setDispatcherType(javax.servlet.DispatcherType)"], ["void", "org.eclipse.jetty.server.Request.setHandled(boolean)"], ["void", "org.eclipse.jetty.server.Request.setMethod(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setHttpVersion(org.eclipse.jetty.http.HttpVersion)"], ["boolean", "org.eclipse.jetty.server.Request.isHead()"], ["void", "org.eclipse.jetty.server.Request.setPathInfo(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setQueryEncoding(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setQueryString(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setRemoteAddr(java.net.InetSocketAddress)"], ["void", "org.eclipse.jetty.server.Request.setRequestedSessionId(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setRequestedSessionIdFromCookie(boolean)"], ["void", "org.eclipse.jetty.server.Request.setURIPathQuery(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setScheme(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setAuthority(java.lang.String, int)"], ["void", "org.eclipse.jetty.server.Request.setServletPath(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setSession(javax.servlet.http.HttpSession)"], ["void", "org.eclipse.jetty.server.Request.setSessionHandler(org.eclipse.jetty.server.session.SessionHandler)"], ["void", "org.eclipse.jetty.server.Request.setTimeStamp(long)"], ["void", "org.eclipse.jetty.server.Request.setUserIdentityScope(org.eclipse.jetty.server.UserIdentity$Scope)"], ["javax.servlet.AsyncContext", "org.eclipse.jetty.server.Request.startAsync()"], ["javax.servlet.AsyncContext", "org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["javax.servlet.http.HttpServletRequest", "org.eclipse.jetty.server.Request.unwrap(javax.servlet.ServletRequest)"], ["java.lang.String", "org.eclipse.jetty.server.Request.toString()"], ["boolean", "org.eclipse.jetty.server.Request.authenticate(javax.servlet.http.HttpServletResponse)"], ["javax.servlet.http.Part", "org.eclipse.jetty.server.Request.getPart(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.login(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.logout()"], ["void", "org.eclipse.jetty.server.Request.mergeQueryParameters(java.lang.String, java.lang.String, boolean)"], ["<T extends javax.servlet.http.HttpUpgradeHandler> T", "org.eclipse.jetty.server.Request.upgrade(java.lang.Class<T>)"], ["org.eclipse.jetty.server.AsyncRequestLogWriter", "org.eclipse.jetty.server.AsyncRequestLogWriter()"], ["org.eclipse.jetty.server.AsyncRequestLogWriter", "org.eclipse.jetty.server.AsyncRequestLogWriter(java.lang.String)"], ["org.eclipse.jetty.server.AsyncRequestLogWriter", "org.eclipse.jetty.server.AsyncRequestLogWriter(java.lang.String, java.util.concurrent.BlockingQueue<java.lang.String>)"], ["void", "org.eclipse.jetty.server.AsyncRequestLogWriter.write(java.lang.String)"], ["org.eclipse.jetty.server.Slf4jRequestLogWriter", "org.eclipse.jetty.server.Slf4jRequestLogWriter()"], ["void", "org.eclipse.jetty.server.Slf4jRequestLogWriter.setLoggerName(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Slf4jRequestLogWriter.getLoggerName()"], ["void", "org.eclipse.jetty.server.Slf4jRequestLogWriter.write(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request$1.close()"], ["void", "org.eclipse.jetty.server.session.Session$SessionInactivityTimer$1.onTimeoutExpired()"], ["org.eclipse.jetty.server.session.HouseKeeper", "org.eclipse.jetty.server.session.HouseKeeper()"], ["void", "org.eclipse.jetty.server.session.HouseKeeper.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)"], ["void", "org.eclipse.jetty.server.session.HouseKeeper.setIntervalSec(long)"], ["long", "org.eclipse.jetty.server.session.HouseKeeper.getIntervalSec()"], ["void", "org.eclipse.jetty.server.session.HouseKeeper.scavenge()"], ["java.lang.String", "org.eclipse.jetty.server.session.HouseKeeper.toString()"], ["org.eclipse.jetty.server.session.SessionContext", "org.eclipse.jetty.server.session.SessionContext(java.lang.String, org.eclipse.jetty.server.handler.ContextHandler$Context)"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionContext.getWorkerName()"], ["org.eclipse.jetty.server.session.SessionHandler", "org.eclipse.jetty.server.session.SessionContext.getSessionHandler()"], ["org.eclipse.jetty.server.handler.ContextHandler$Context", "org.eclipse.jetty.server.session.SessionContext.getContext()"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionContext.getCanonicalContextPath()"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionContext.getVhost()"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionContext.toString()"], ["void", "org.eclipse.jetty.server.session.SessionContext.run(java.lang.Runnable)"], ["org.eclipse.jetty.server.session.Session$State[]", "org.eclipse.jetty.server.session.Session$State.values()"], ["org.eclipse.jetty.server.session.Session$State", "org.eclipse.jetty.server.session.Session$State.valueOf(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Authentication$2.toString()"], ["org.eclipse.jetty.server.handler.ContextHandler$Availability[]", "org.eclipse.jetty.server.handler.ContextHandler$Availability.values()"], ["org.eclipse.jetty.server.handler.ContextHandler$Availability", "org.eclipse.jetty.server.handler.ContextHandler$Availability.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.handler.ContextHandler$ApproveNonExistentDirectoryAliases", "org.eclipse.jetty.server.handler.ContextHandler$ApproveNonExistentDirectoryAliases()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$ApproveNonExistentDirectoryAliases.check(java.lang.String, org.eclipse.jetty.util.resource.Resource)"], ["org.eclipse.jetty.server.handler.jmx.AbstractHandlerMBean", "org.eclipse.jetty.server.handler.jmx.AbstractHandlerMBean(java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.server.handler.jmx.AbstractHandlerMBean.getObjectContextBasis()"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHttpInputInterceptor$1.succeeded()"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection$1.run()"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection$1.accept(java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection$1.accept(java.lang.Object)"], ["org.eclipse.jetty.server.handler.ContextHandler$Context", "org.eclipse.jetty.server.handler.ContextHandler.getCurrentContext()"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.handler.ContextHandler.getContextHandler(javax.servlet.ServletContext)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getServerInfo()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setServerInfo(java.lang.String)"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.handler.ContextHandler()"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.handler.ContextHandler(java.lang.String)"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.handler.ContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.dump(java.lang.Appendable, java.lang.String)"], ["org.eclipse.jetty.server.handler.ContextHandler$Context", "org.eclipse.jetty.server.handler.ContextHandler.getServletContext()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.getAllowNullPathInfo()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setAllowNullPathInfo(boolean)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.isUsingSecurityManager()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setUsingSecurityManager(boolean)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setVirtualHosts(java.lang.String[])"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.addVirtualHosts(java.lang.String[])"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.removeVirtualHosts(java.lang.String[])"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.ContextHandler.getVirtualHosts()"], ["java.lang.Object", "org.eclipse.jetty.server.handler.ContextHandler.getAttribute(java.lang.String)"], ["org.eclipse.jetty.util.Attributes", "org.eclipse.jetty.server.handler.ContextHandler.getAttributes()"], ["java.lang.ClassLoader", "org.eclipse.jetty.server.handler.ContextHandler.getClassLoader()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getClassPath()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getContextPath()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getContextPathEncoded()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getInitParameter(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.setInitParameter(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.eclipse.jetty.server.handler.ContextHandler.getInitParams()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getDisplayName()"], ["java.util.EventListener[]", "org.eclipse.jetty.server.handler.ContextHandler.getEventListeners()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.addEventListener(java.util.EventListener)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.removeEventListener(java.util.EventListener)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.isProgrammaticListener(java.util.EventListener)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.isDurableListener(java.util.EventListener)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.isShutdown()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.isAvailable()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setAvailable(boolean)"], ["org.eclipse.jetty.util.log.Logger", "org.eclipse.jetty.server.handler.ContextHandler.getLogger()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setLogger(org.eclipse.jetty.util.log.Logger)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.checkVirtualHost(org.eclipse.jetty.server.Request)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.checkContextPath(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.handle(org.eclipse.jetty.server.Request, java.lang.Runnable)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.Runnable)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.isProtectedTarget(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setProtectedTargets(java.lang.String[])"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.ContextHandler.getProtectedTargets()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.removeAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.clearAttributes()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setClassLoader(java.lang.ClassLoader)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setDisplayName(java.lang.String)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ContextHandler.getBaseResource()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getResourceBase()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)"], ["org.eclipse.jetty.http.MimeTypes", "org.eclipse.jetty.server.handler.ContextHandler.getMimeTypes()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setMimeTypes(org.eclipse.jetty.http.MimeTypes)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setWelcomeFiles(java.lang.String[])"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.ContextHandler.getWelcomeFiles()"], ["org.eclipse.jetty.server.handler.ErrorHandler", "org.eclipse.jetty.server.handler.ContextHandler.getErrorHandler()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)"], ["int", "org.eclipse.jetty.server.handler.ContextHandler.getMaxFormContentSize()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setMaxFormContentSize(int)"], ["int", "org.eclipse.jetty.server.handler.ContextHandler.getMaxFormKeys()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setMaxFormKeys(int)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.isCompactPath()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setCompactPath(boolean)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.toString()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.addLocaleEncoding(java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.util.Locale)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncodings()"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.checkAlias(java.lang.String, org.eclipse.jetty.util.resource.Resource)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ContextHandler.newResource(java.net.URL)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ContextHandler.newResource(java.net.URI)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ContextHandler.newResource(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.addAliasCheck(org.eclipse.jetty.server.handler.ContextHandler$AliasCheck)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setAliasChecks(java.util.List<org.eclipse.jetty.server.handler.ContextHandler$AliasCheck>)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.clearAliasChecks()"], ["org.eclipse.jetty.server.handler.InetAccessHandler", "org.eclipse.jetty.server.handler.InetAccessHandler()"], ["void", "org.eclipse.jetty.server.handler.InetAccessHandler.clear()"], ["void", "org.eclipse.jetty.server.handler.InetAccessHandler.include(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.InetAccessHandler.include(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.InetAccessHandler.exclude(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.InetAccessHandler.exclude(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.InetAccessHandler.includeConnector(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.InetAccessHandler.excludeConnector(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.InetAccessHandler.includeConnectors(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.InetAccessHandler.excludeConnectors(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.InetAccessHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.InetAccessHandler.dump(java.lang.Appendable, java.lang.String)"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory$ProxyProtocolV2Connection.onUpgradeTo(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory$ProxyProtocolV2Connection.onOpen()"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory$ProxyProtocolV2Connection.onFillable()"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory$ProxyProtocolV2Connection.onUpgradeFrom()"], ["org.eclipse.jetty.server.AbstractConnector", "org.eclipse.jetty.server.AbstractConnector(org.eclipse.jetty.server.Server, java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, org.eclipse.jetty.io.ByteBufferPool, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.HttpChannel$Listener", "org.eclipse.jetty.server.AbstractConnector.getHttpChannelListeners()"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.AbstractConnector.getServer()"], ["java.util.concurrent.Executor", "org.eclipse.jetty.server.AbstractConnector.getExecutor()"], ["org.eclipse.jetty.io.ByteBufferPool", "org.eclipse.jetty.server.AbstractConnector.getByteBufferPool()"], ["long", "org.eclipse.jetty.server.AbstractConnector.getIdleTimeout()"], ["void", "org.eclipse.jetty.server.AbstractConnector.setIdleTimeout(long)"], ["int", "org.eclipse.jetty.server.AbstractConnector.getAcceptors()"], ["boolean", "org.eclipse.jetty.server.AbstractConnector.isShutdown()"], ["void", "org.eclipse.jetty.server.AbstractConnector.join()"], ["void", "org.eclipse.jetty.server.AbstractConnector.join(long)"], ["boolean", "org.eclipse.jetty.server.AbstractConnector.isAccepting()"], ["void", "org.eclipse.jetty.server.AbstractConnector.setAccepting(boolean)"], ["org.eclipse.jetty.server.ConnectionFactory", "org.eclipse.jetty.server.AbstractConnector.getConnectionFactory(java.lang.String)"], ["<T> T", "org.eclipse.jetty.server.AbstractConnector.getConnectionFactory(java.lang.Class<T>)"], ["void", "org.eclipse.jetty.server.AbstractConnector.addConnectionFactory(org.eclipse.jetty.server.ConnectionFactory)"], ["void", "org.eclipse.jetty.server.AbstractConnector.addFirstConnectionFactory(org.eclipse.jetty.server.ConnectionFactory)"], ["void", "org.eclipse.jetty.server.AbstractConnector.addIfAbsentConnectionFactory(org.eclipse.jetty.server.ConnectionFactory)"], ["org.eclipse.jetty.server.ConnectionFactory", "org.eclipse.jetty.server.AbstractConnector.removeConnectionFactory(java.lang.String)"], ["void", "org.eclipse.jetty.server.AbstractConnector.setConnectionFactories(java.util.Collection<org.eclipse.jetty.server.ConnectionFactory>)"], ["int", "org.eclipse.jetty.server.AbstractConnector.getAcceptorPriorityDelta()"], ["void", "org.eclipse.jetty.server.AbstractConnector.setAcceptorPriorityDelta(int)"], ["void", "org.eclipse.jetty.server.AbstractConnector.clearConnectionFactories()"], ["java.lang.String", "org.eclipse.jetty.server.AbstractConnector.getDefaultProtocol()"], ["void", "org.eclipse.jetty.server.AbstractConnector.setDefaultProtocol(java.lang.String)"], ["org.eclipse.jetty.server.ConnectionFactory", "org.eclipse.jetty.server.AbstractConnector.getDefaultConnectionFactory()"], ["org.eclipse.jetty.util.thread.Scheduler", "org.eclipse.jetty.server.AbstractConnector.getScheduler()"], ["java.lang.String", "org.eclipse.jetty.server.AbstractConnector.getName()"], ["void", "org.eclipse.jetty.server.AbstractConnector.setName(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.AbstractConnector.toString()"], ["org.eclipse.jetty.server.HttpChannelListeners", "org.eclipse.jetty.server.HttpChannelListeners(java.util.Collection<org.eclipse.jetty.server.HttpChannel$Listener>)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onRequestBegin(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onBeforeDispatch(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onDispatchFailure(org.eclipse.jetty.server.Request, java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onAfterDispatch(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onRequestContent(org.eclipse.jetty.server.Request, java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onRequestContentEnd(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onRequestTrailers(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onRequestEnd(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onRequestFailure(org.eclipse.jetty.server.Request, java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onResponseBegin(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onResponseCommit(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onResponseContent(org.eclipse.jetty.server.Request, java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onResponseEnd(org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onResponseFailure(org.eclipse.jetty.server.Request, java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.HttpChannelListeners.onComplete(org.eclipse.jetty.server.Request)"], ["java.lang.String", "org.eclipse.jetty.server.AbstractConnectionFactory.getProtocol()"], ["int", "org.eclipse.jetty.server.AbstractConnectionFactory.getInputBufferSize()"], ["void", "org.eclipse.jetty.server.AbstractConnectionFactory.setInputBufferSize(int)"], ["java.lang.String", "org.eclipse.jetty.server.AbstractConnectionFactory.toString()"], ["org.eclipse.jetty.server.ConnectionFactory[]", "org.eclipse.jetty.server.AbstractConnectionFactory.getFactories(org.eclipse.jetty.util.ssl.SslContextFactory, org.eclipse.jetty.server.ConnectionFactory...)"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV1ConnectionFactory$ProxyProtocolV1Connection.onFillable()"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV1ConnectionFactory$ProxyProtocolV1Connection.onOpen()"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV1ConnectionFactory$ProxyProtocolV1Connection.onUpgradeFrom()"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV1ConnectionFactory$ProxyProtocolV1Connection.onUpgradeTo(java.nio.ByteBuffer)"], ["int", "org.eclipse.jetty.server.HttpInput$2.noContent()"], ["java.lang.String", "org.eclipse.jetty.server.HttpInput$2.toString()"], ["org.eclipse.jetty.server.NegotiatingServerConnectionFactory", "org.eclipse.jetty.server.NegotiatingServerConnectionFactory(java.lang.String, java.lang.String...)"], ["java.lang.String", "org.eclipse.jetty.server.NegotiatingServerConnectionFactory.getDefaultProtocol()"], ["void", "org.eclipse.jetty.server.NegotiatingServerConnectionFactory.setDefaultProtocol(java.lang.String)"], ["org.eclipse.jetty.io.Connection", "org.eclipse.jetty.server.NegotiatingServerConnectionFactory.newConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint)"], ["java.lang.String", "org.eclipse.jetty.server.NegotiatingServerConnectionFactory.toString()"], ["org.eclipse.jetty.server.HttpInput$ChainedInterceptor", "org.eclipse.jetty.server.HttpInput$ChainedInterceptor(org.eclipse.jetty.server.HttpInput$Interceptor, org.eclipse.jetty.server.HttpInput$Interceptor)"], ["org.eclipse.jetty.server.HttpInput$Interceptor", "org.eclipse.jetty.server.HttpInput$ChainedInterceptor.getPrev()"], ["org.eclipse.jetty.server.HttpInput$Interceptor", "org.eclipse.jetty.server.HttpInput$ChainedInterceptor.getNext()"], ["org.eclipse.jetty.server.HttpInput$Content", "org.eclipse.jetty.server.HttpInput$ChainedInterceptor.readFrom(org.eclipse.jetty.server.HttpInput$Content)"], ["void", "org.eclipse.jetty.server.HttpInput$ChainedInterceptor.destroy()"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.Server()"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.Server(int)"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.Server(java.net.InetSocketAddress)"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.Server(org.eclipse.jetty.util.thread.ThreadPool)"], ["org.eclipse.jetty.server.RequestLog", "org.eclipse.jetty.server.Server.getRequestLog()"], ["org.eclipse.jetty.server.handler.ErrorHandler", "org.eclipse.jetty.server.Server.getErrorHandler()"], ["void", "org.eclipse.jetty.server.Server.setRequestLog(org.eclipse.jetty.server.RequestLog)"], ["void", "org.eclipse.jetty.server.Server.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)"], ["java.lang.String", "org.eclipse.jetty.server.Server.getVersion()"], ["boolean", "org.eclipse.jetty.server.Server.getStopAtShutdown()"], ["void", "org.eclipse.jetty.server.Server.setStopTimeout(long)"], ["void", "org.eclipse.jetty.server.Server.setStopAtShutdown(boolean)"], ["org.eclipse.jetty.server.Connector[]", "org.eclipse.jetty.server.Server.getConnectors()"], ["void", "org.eclipse.jetty.server.Server.addConnector(org.eclipse.jetty.server.Connector)"], ["void", "org.eclipse.jetty.server.Server.removeConnector(org.eclipse.jetty.server.Connector)"], ["void", "org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])"], ["org.eclipse.jetty.util.thread.ThreadPool", "org.eclipse.jetty.server.Server.getThreadPool()"], ["boolean", "org.eclipse.jetty.server.Server.isDumpAfterStart()"], ["void", "org.eclipse.jetty.server.Server.setDumpAfterStart(boolean)"], ["boolean", "org.eclipse.jetty.server.Server.isDumpBeforeStop()"], ["void", "org.eclipse.jetty.server.Server.setDumpBeforeStop(boolean)"], ["org.eclipse.jetty.http.HttpField", "org.eclipse.jetty.server.Server.getDateField()"], ["void", "org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpChannel)"], ["void", "org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpChannel)"], ["void", "org.eclipse.jetty.server.Server.join()"], ["org.eclipse.jetty.server.SessionIdManager", "org.eclipse.jetty.server.Server.getSessionIdManager()"], ["void", "org.eclipse.jetty.server.Server.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)"], ["void", "org.eclipse.jetty.server.Server.clearAttributes()"], ["java.lang.Object", "org.eclipse.jetty.server.Server.getAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.Server.removeAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.Server.setAttribute(java.lang.String, java.lang.Object)"], ["java.net.URI", "org.eclipse.jetty.server.Server.getURI()"], ["java.lang.String", "org.eclipse.jetty.server.Server.toString()"], ["void", "org.eclipse.jetty.server.Server.dump(java.lang.Appendable, java.lang.String)"], ["void", "org.eclipse.jetty.server.Server.main(java.lang.String...)"], ["org.eclipse.jetty.server.SameFileAliasChecker", "org.eclipse.jetty.server.SameFileAliasChecker()"], ["boolean", "org.eclipse.jetty.server.SameFileAliasChecker.check(java.lang.String, org.eclipse.jetty.util.resource.Resource)"], ["void", "org.eclipse.jetty.server.DebugListener$3.enterScope(org.eclipse.jetty.server.handler.ContextHandler$Context, org.eclipse.jetty.server.Request, java.lang.Object)"], ["void", "org.eclipse.jetty.server.DebugListener$3.exitScope(org.eclipse.jetty.server.handler.ContextHandler$Context, org.eclipse.jetty.server.Request)"], ["org.eclipse.jetty.server.AcceptRateLimit", "org.eclipse.jetty.server.AcceptRateLimit(int, long, java.util.concurrent.TimeUnit, org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.AcceptRateLimit", "org.eclipse.jetty.server.AcceptRateLimit(int, long, java.util.concurrent.TimeUnit, org.eclipse.jetty.server.Connector...)"], ["int", "org.eclipse.jetty.server.AcceptRateLimit.getAcceptRateLimit()"], ["long", "org.eclipse.jetty.server.AcceptRateLimit.getPeriod()"], ["java.util.concurrent.TimeUnit", "org.eclipse.jetty.server.AcceptRateLimit.getUnits()"], ["int", "org.eclipse.jetty.server.AcceptRateLimit.getRate()"], ["long", "org.eclipse.jetty.server.AcceptRateLimit.getMaxRate()"], ["void", "org.eclipse.jetty.server.AcceptRateLimit.reset()"], ["void", "org.eclipse.jetty.server.AcceptRateLimit.onAccepting(java.nio.channels.SelectableChannel)"], ["void", "org.eclipse.jetty.server.AcceptRateLimit.run()"], ["org.eclipse.jetty.server.HttpChannelState$State", "org.eclipse.jetty.server.HttpChannelState.getState()"], ["void", "org.eclipse.jetty.server.HttpChannelState.addListener(javax.servlet.AsyncListener)"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.hasListener(javax.servlet.AsyncListener)"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isSendError()"], ["void", "org.eclipse.jetty.server.HttpChannelState.setTimeout(long)"], ["long", "org.eclipse.jetty.server.HttpChannelState.getTimeout()"], ["org.eclipse.jetty.server.AsyncContextEvent", "org.eclipse.jetty.server.HttpChannelState.getAsyncContextEvent()"], ["java.lang.String", "org.eclipse.jetty.server.HttpChannelState.toString()"], ["java.lang.String", "org.eclipse.jetty.server.HttpChannelState.getStatusString()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.commitResponse()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.partialResponse()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.completeResponse()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isResponseCommitted()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isResponseCompleted()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.abortResponse()"], ["org.eclipse.jetty.server.HttpChannelState$Action", "org.eclipse.jetty.server.HttpChannelState.handling()"], ["void", "org.eclipse.jetty.server.HttpChannelState.startAsync(org.eclipse.jetty.server.AsyncContextEvent)"], ["void", "org.eclipse.jetty.server.HttpChannelState.dispatch(javax.servlet.ServletContext, java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpChannelState.complete()"], ["void", "org.eclipse.jetty.server.HttpChannelState.asyncError(java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.HttpChannelState.sendError(int, java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpChannelState.upgrade()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isIdle()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isExpired()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isInitial()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isSuspended()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isAsyncStarted()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isAsync()"], ["org.eclipse.jetty.server.Request", "org.eclipse.jetty.server.HttpChannelState.getBaseRequest()"], ["org.eclipse.jetty.server.HttpChannel", "org.eclipse.jetty.server.HttpChannelState.getHttpChannel()"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.HttpChannelState.getContextHandler()"], ["javax.servlet.ServletResponse", "org.eclipse.jetty.server.HttpChannelState.getServletResponse()"], ["javax.servlet.ServletResponse", "org.eclipse.jetty.server.HttpChannelState.getServletResponse(org.eclipse.jetty.server.AsyncContextEvent)"], ["java.lang.Object", "org.eclipse.jetty.server.HttpChannelState.getAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpChannelState.removeAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpChannelState.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.HttpChannelState.onReadUnready()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.onContentAdded()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.onReadReady()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.onReadPossible()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.onReadEof()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.onWritePossible()"], ["org.eclipse.jetty.server.CachedContentFactory", "org.eclipse.jetty.server.CachedContentFactory(org.eclipse.jetty.server.CachedContentFactory, org.eclipse.jetty.util.resource.ResourceFactory, org.eclipse.jetty.http.MimeTypes, boolean, boolean, org.eclipse.jetty.http.CompressedContentFormat[])"], ["int", "org.eclipse.jetty.server.CachedContentFactory.getCachedSize()"], ["int", "org.eclipse.jetty.server.CachedContentFactory.getCachedFiles()"], ["int", "org.eclipse.jetty.server.CachedContentFactory.getMaxCachedFileSize()"], ["void", "org.eclipse.jetty.server.CachedContentFactory.setMaxCachedFileSize(int)"], ["int", "org.eclipse.jetty.server.CachedContentFactory.getMaxCacheSize()"], ["void", "org.eclipse.jetty.server.CachedContentFactory.setMaxCacheSize(int)"], ["int", "org.eclipse.jetty.server.CachedContentFactory.getMaxCachedFiles()"], ["void", "org.eclipse.jetty.server.CachedContentFactory.setMaxCachedFiles(int)"], ["boolean", "org.eclipse.jetty.server.CachedContentFactory.isUseFileMappedBuffer()"], ["void", "org.eclipse.jetty.server.CachedContentFactory.flushCache()"], ["org.eclipse.jetty.http.HttpContent", "org.eclipse.jetty.server.CachedContentFactory.lookup(java.lang.String)"], ["org.eclipse.jetty.http.HttpContent", "org.eclipse.jetty.server.CachedContentFactory.getContent(java.lang.String, int)"], ["java.lang.String", "org.eclipse.jetty.server.CachedContentFactory.toString()"], ["org.eclipse.jetty.server.LowResourceMonitor", "org.eclipse.jetty.server.LowResourceMonitor(org.eclipse.jetty.server.Server)"], ["boolean", "org.eclipse.jetty.server.LowResourceMonitor.getMonitorThreads()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setMonitorThreads(boolean)"], ["int", "org.eclipse.jetty.server.LowResourceMonitor.getMaxConnections()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setMaxConnections(int)"], ["java.lang.String", "org.eclipse.jetty.server.LowResourceMonitor.getReasons()"], ["boolean", "org.eclipse.jetty.server.LowResourceMonitor.isLowOnResources()"], ["java.lang.String", "org.eclipse.jetty.server.LowResourceMonitor.getLowResourcesReasons()"], ["long", "org.eclipse.jetty.server.LowResourceMonitor.getLowResourcesStarted()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setLowResourcesStarted(long)"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setMonitoredConnectors(java.util.Collection<org.eclipse.jetty.server.Connector>)"], ["boolean", "org.eclipse.jetty.server.LowResourceMonitor.isAcceptingInLowResources()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setAcceptingInLowResources(boolean)"], ["int", "org.eclipse.jetty.server.LowResourceMonitor.getPeriod()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setPeriod(int)"], ["int", "org.eclipse.jetty.server.LowResourceMonitor.getLowResourcesIdleTimeout()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setLowResourcesIdleTimeout(int)"], ["int", "org.eclipse.jetty.server.LowResourceMonitor.getMaxLowResourcesTime()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setMaxLowResourcesTime(int)"], ["long", "org.eclipse.jetty.server.LowResourceMonitor.getMaxMemory()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setMaxMemory(long)"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setLowResourceChecks(java.util.Set<org.eclipse.jetty.server.LowResourceMonitor$LowResourceCheck>)"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.addLowResourceCheck(org.eclipse.jetty.server.LowResourceMonitor$LowResourceCheck)"], ["org.eclipse.jetty.server.DetectorConnectionFactory", "org.eclipse.jetty.server.DetectorConnectionFactory(org.eclipse.jetty.server.ConnectionFactory$Detecting...)"], ["org.eclipse.jetty.server.ConnectionFactory$Detecting$Detection", "org.eclipse.jetty.server.DetectorConnectionFactory.detect(java.nio.ByteBuffer)"], ["org.eclipse.jetty.io.Connection", "org.eclipse.jetty.server.DetectorConnectionFactory.newConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint)"], ["org.eclipse.jetty.server.ConnectionFactory$Detecting$Detection[]", "org.eclipse.jetty.server.ConnectionFactory$Detecting$Detection.values()"], ["org.eclipse.jetty.server.ConnectionFactory$Detecting$Detection", "org.eclipse.jetty.server.ConnectionFactory$Detecting$Detection.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.resource.HttpContentRangeWriter", "org.eclipse.jetty.server.resource.HttpContentRangeWriter()"], ["org.eclipse.jetty.server.resource.RangeWriter", "org.eclipse.jetty.server.resource.HttpContentRangeWriter.newRangeWriter(org.eclipse.jetty.http.HttpContent)"], ["org.eclipse.jetty.server.HttpConnection$Content", "org.eclipse.jetty.server.HttpConnection$Content(org.eclipse.jetty.server.HttpConnection, java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.HttpConnection$Content.succeeded()"], ["void", "org.eclipse.jetty.server.HttpConnection$Content.failed(java.lang.Throwable)"], ["org.eclipse.jetty.server.HttpChannelState$Action[]", "org.eclipse.jetty.server.HttpChannelState$Action.values()"], ["org.eclipse.jetty.server.HttpChannelState$Action", "org.eclipse.jetty.server.HttpChannelState$Action.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.HttpConnection", "org.eclipse.jetty.server.HttpConnection.getCurrentConnection()"], ["org.eclipse.jetty.server.HttpConnection", "org.eclipse.jetty.server.HttpConnection(org.eclipse.jetty.server.HttpConfiguration, org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.http.HttpCompliance, boolean)"], ["org.eclipse.jetty.server.HttpConfiguration", "org.eclipse.jetty.server.HttpConnection.getHttpConfiguration()"], ["boolean", "org.eclipse.jetty.server.HttpConnection.isRecordHttpComplianceViolations()"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.HttpConnection.getServer()"], ["org.eclipse.jetty.server.Connector", "org.eclipse.jetty.server.HttpConnection.getConnector()"], ["org.eclipse.jetty.server.HttpChannel", "org.eclipse.jetty.server.HttpConnection.getHttpChannel()"], ["org.eclipse.jetty.http.HttpParser", "org.eclipse.jetty.server.HttpConnection.getParser()"], ["org.eclipse.jetty.http.HttpGenerator", "org.eclipse.jetty.server.HttpConnection.getGenerator()"], ["boolean", "org.eclipse.jetty.server.HttpConnection.isOptimizedForDirectBuffers()"], ["long", "org.eclipse.jetty.server.HttpConnection.getMessagesIn()"], ["long", "org.eclipse.jetty.server.HttpConnection.getMessagesOut()"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.HttpConnection.onUpgradeFrom()"], ["void", "org.eclipse.jetty.server.HttpConnection.onUpgradeTo(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.HttpConnection.onFlushed(long)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.HttpConnection.getRequestBuffer()"], ["boolean", "org.eclipse.jetty.server.HttpConnection.isRequestBufferEmpty()"], ["void", "org.eclipse.jetty.server.HttpConnection.onFillable()"], ["void", "org.eclipse.jetty.server.HttpConnection.onCompleted()"], ["void", "org.eclipse.jetty.server.HttpConnection.onOpen()"], ["void", "org.eclipse.jetty.server.HttpConnection.onClose()"], ["void", "org.eclipse.jetty.server.HttpConnection.run()"], ["void", "org.eclipse.jetty.server.HttpConnection.send(org.eclipse.jetty.http.MetaData$Response, boolean, java.nio.ByteBuffer, boolean, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpConnection.abort(java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.server.HttpConnection.isPushSupported()"], ["void", "org.eclipse.jetty.server.HttpConnection.push(org.eclipse.jetty.http.MetaData$Request)"], ["void", "org.eclipse.jetty.server.HttpConnection.asyncReadFillInterested()"], ["void", "org.eclipse.jetty.server.HttpConnection.blockingReadFillInterested()"], ["void", "org.eclipse.jetty.server.HttpConnection.blockingReadFailure(java.lang.Throwable)"], ["long", "org.eclipse.jetty.server.HttpConnection.getBytesIn()"], ["long", "org.eclipse.jetty.server.HttpConnection.getBytesOut()"], ["java.lang.String", "org.eclipse.jetty.server.HttpConnection.toConnectionString()"], ["default", "org.eclipse.jetty.server.session.SessionCache.org.eclipse.jetty.server.session.Session renewSessionId(java.lang.String, java.lang.String)"], ["default", "org.eclipse.jetty.server.session.SessionCache.org.eclipse.jetty.server.session.Session renewSessionId(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["org.eclipse.jetty.server.session.UnwriteableSessionDataException", "org.eclipse.jetty.server.session.UnwriteableSessionDataException(java.lang.String, org.eclipse.jetty.server.session.SessionContext, java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.server.session.UnwriteableSessionDataException.getId()"], ["org.eclipse.jetty.server.session.SessionContext", "org.eclipse.jetty.server.session.UnwriteableSessionDataException.getSessionContext()"], ["org.eclipse.jetty.server.session.CachingSessionDataStoreFactory", "org.eclipse.jetty.server.session.CachingSessionDataStoreFactory()"], ["org.eclipse.jetty.server.session.SessionDataMapFactory", "org.eclipse.jetty.server.session.CachingSessionDataStoreFactory.getMapFactory()"], ["void", "org.eclipse.jetty.server.session.CachingSessionDataStoreFactory.setSessionDataMapFactory(org.eclipse.jetty.server.session.SessionDataMapFactory)"], ["void", "org.eclipse.jetty.server.session.CachingSessionDataStoreFactory.setSessionStoreFactory(org.eclipse.jetty.server.session.SessionDataStoreFactory)"], ["org.eclipse.jetty.server.session.SessionDataStore", "org.eclipse.jetty.server.session.CachingSessionDataStoreFactory.getSessionDataStore(org.eclipse.jetty.server.session.SessionHandler)"], ["org.eclipse.jetty.server.session.AbstractSessionCache", "org.eclipse.jetty.server.session.AbstractSessionCache(org.eclipse.jetty.server.session.SessionHandler)"], ["org.eclipse.jetty.server.session.SessionHandler", "org.eclipse.jetty.server.session.AbstractSessionCache.getSessionHandler()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCache.initialize(org.eclipse.jetty.server.session.SessionContext)"], ["org.eclipse.jetty.server.session.SessionDataStore", "org.eclipse.jetty.server.session.AbstractSessionCache.getSessionDataStore()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCache.setSessionDataStore(org.eclipse.jetty.server.session.SessionDataStore)"], ["int", "org.eclipse.jetty.server.session.AbstractSessionCache.getEvictionPolicy()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCache.setEvictionPolicy(int)"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionCache.isSaveOnCreate()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCache.setSaveOnCreate(boolean)"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionCache.isRemoveUnloadableSessions()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCache.setRemoveUnloadableSessions(boolean)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCache.setFlushOnResponseCommit(boolean)"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionCache.isFlushOnResponseCommit()"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.AbstractSessionCache.get(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCache.add(java.lang.String, org.eclipse.jetty.server.session.Session)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCache.commit(org.eclipse.jetty.server.session.Session)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCache.put(java.lang.String, org.eclipse.jetty.server.session.Session)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCache.release(java.lang.String, org.eclipse.jetty.server.session.Session)"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionCache.exists(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionCache.contains(java.lang.String)"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.AbstractSessionCache.delete(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCache.checkInactiveSession(org.eclipse.jetty.server.session.Session)"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.AbstractSessionCache.renewSessionId(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCache.setSaveOnInactiveEviction(boolean)"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionCache.isSaveOnInactiveEviction()"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.AbstractSessionCache.newSession(javax.servlet.http.HttpServletRequest, java.lang.String, long, long)"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionCache.toString()"], ["org.eclipse.jetty.server.session.DefaultSessionCache", "org.eclipse.jetty.server.session.DefaultSessionCache(org.eclipse.jetty.server.session.SessionHandler)"], ["long", "org.eclipse.jetty.server.session.DefaultSessionCache.getSessionsCurrent()"], ["long", "org.eclipse.jetty.server.session.DefaultSessionCache.getSessionsMax()"], ["long", "org.eclipse.jetty.server.session.DefaultSessionCache.getSessionsTotal()"], ["void", "org.eclipse.jetty.server.session.DefaultSessionCache.resetStats()"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.DefaultSessionCache.doGet(java.lang.String)"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.DefaultSessionCache.doPutIfAbsent(java.lang.String, org.eclipse.jetty.server.session.Session)"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.DefaultSessionCache.doDelete(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.DefaultSessionCache.shutdown()"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.DefaultSessionCache.newSession(javax.servlet.http.HttpServletRequest, org.eclipse.jetty.server.session.SessionData)"], ["org.eclipse.jetty.server.session.Session", "org.eclipse.jetty.server.session.DefaultSessionCache.newSession(org.eclipse.jetty.server.session.SessionData)"], ["boolean", "org.eclipse.jetty.server.session.DefaultSessionCache.doReplace(java.lang.String, org.eclipse.jetty.server.session.Session, org.eclipse.jetty.server.session.Session)"], ["org.eclipse.jetty.server.handler.ContextHandlerCollection", "org.eclipse.jetty.server.handler.ContextHandlerCollection()"], ["org.eclipse.jetty.server.handler.ContextHandlerCollection", "org.eclipse.jetty.server.handler.ContextHandlerCollection(org.eclipse.jetty.server.handler.ContextHandler...)"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection.deployHandler(org.eclipse.jetty.server.Handler, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection.undeployHandler(org.eclipse.jetty.server.Handler, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection.setContextClass(java.lang.Class<? extends org.eclipse.jetty.server.handler.ContextHandler>)"], ["org.eclipse.jetty.server.handler.ScopedHandler", "org.eclipse.jetty.server.handler.ScopedHandler()"], ["void", "org.eclipse.jetty.server.handler.ScopedHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ScopedHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ScopedHandler.nextScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor$GzipBufferCB", "org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor$GzipBufferCB(org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor, java.nio.ByteBuffer, boolean, org.eclipse.jetty.util.Callback)"], ["java.lang.String", "org.eclipse.jetty.server.handler.gzip.GzipHttpOutputInterceptor$GzipBufferCB.toString()"], ["org.eclipse.jetty.server.handler.StatisticsHandler", "org.eclipse.jetty.server.handler.StatisticsHandler()"], ["void", "org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()"], ["void", "org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequests()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActive()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActiveMax()"], ["long", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMax()"], ["long", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeTotal()"], ["double", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMean()"], ["double", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeStdDev()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatched()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedActive()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedActiveMax()"], ["long", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedTimeMax()"], ["long", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedTimeTotal()"], ["double", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedTimeMean()"], ["double", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedTimeStdDev()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getAsyncRequests()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getAsyncRequestsWaiting()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getAsyncRequestsWaitingMax()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getAsyncDispatches()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getExpires()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getResponses1xx()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getResponses2xx()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getResponses3xx()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getResponses4xx()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getResponses5xx()"], ["long", "org.eclipse.jetty.server.handler.StatisticsHandler.getStatsOnMs()"], ["long", "org.eclipse.jetty.server.handler.StatisticsHandler.getResponsesBytesTotal()"], ["java.lang.String", "org.eclipse.jetty.server.handler.StatisticsHandler.toStatsHTML()"], ["boolean", "org.eclipse.jetty.server.handler.StatisticsHandler.isShutdown()"], ["java.lang.String", "org.eclipse.jetty.server.handler.StatisticsHandler.toString()"], ["org.eclipse.jetty.server.handler.AsyncDelayHandler", "org.eclipse.jetty.server.handler.AsyncDelayHandler()"], ["void", "org.eclipse.jetty.server.handler.AsyncDelayHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.LowResourceMonitor$ConnectorsThreadPoolLowResourceCheck", "org.eclipse.jetty.server.LowResourceMonitor$ConnectorsThreadPoolLowResourceCheck(org.eclipse.jetty.server.LowResourceMonitor)"], ["boolean", "org.eclipse.jetty.server.LowResourceMonitor$ConnectorsThreadPoolLowResourceCheck.isLowOnResources()"], ["java.lang.String", "org.eclipse.jetty.server.LowResourceMonitor$ConnectorsThreadPoolLowResourceCheck.getReason()"], ["java.lang.String", "org.eclipse.jetty.server.LowResourceMonitor$ConnectorsThreadPoolLowResourceCheck.toString()"], ["org.eclipse.jetty.server.ConnectionLimit", "org.eclipse.jetty.server.ConnectionLimit(int, org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.ConnectionLimit", "org.eclipse.jetty.server.ConnectionLimit(int, org.eclipse.jetty.server.Connector...)"], ["long", "org.eclipse.jetty.server.ConnectionLimit.getIdleTimeout()"], ["void", "org.eclipse.jetty.server.ConnectionLimit.setIdleTimeout(long)"], ["int", "org.eclipse.jetty.server.ConnectionLimit.getMaxConnections()"], ["void", "org.eclipse.jetty.server.ConnectionLimit.setMaxConnections(int)"], ["int", "org.eclipse.jetty.server.ConnectionLimit.getConnections()"], ["void", "org.eclipse.jetty.server.ConnectionLimit.onAccepting(java.nio.channels.SelectableChannel)"], ["void", "org.eclipse.jetty.server.ConnectionLimit.onAcceptFailed(java.nio.channels.SelectableChannel, java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.ConnectionLimit.onAccepted(java.nio.channels.SelectableChannel)"], ["void", "org.eclipse.jetty.server.ConnectionLimit.onOpened(org.eclipse.jetty.io.Connection)"], ["void", "org.eclipse.jetty.server.ConnectionLimit.onClosed(org.eclipse.jetty.io.Connection)"], ["void", "org.eclipse.jetty.server.HttpConnection$BlockingReadCallback.succeeded()"], ["void", "org.eclipse.jetty.server.HttpConnection$BlockingReadCallback.failed(java.lang.Throwable)"], ["org.eclipse.jetty.util.thread.Invocable$InvocationType", "org.eclipse.jetty.server.HttpConnection$BlockingReadCallback.getInvocationType()"], ["org.eclipse.jetty.server.HostHeaderCustomizer", "org.eclipse.jetty.server.HostHeaderCustomizer(java.lang.String)"], ["org.eclipse.jetty.server.HostHeaderCustomizer", "org.eclipse.jetty.server.HostHeaderCustomizer(java.lang.String, int)"], ["void", "org.eclipse.jetty.server.HostHeaderCustomizer.customize(org.eclipse.jetty.server.Connector, org.eclipse.jetty.server.HttpConfiguration, org.eclipse.jetty.server.Request)"], ["org.eclipse.jetty.server.Response$OutputType[]", "org.eclipse.jetty.server.Response$OutputType.values()"], ["org.eclipse.jetty.server.Response$OutputType", "org.eclipse.jetty.server.Response$OutputType.valueOf(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.HttpInput$5.toString()"], ["org.eclipse.jetty.server.ConnectionFactory$Detecting$Detection", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory.detect(java.nio.ByteBuffer)"], ["int", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory.getMaxProxyHeader()"], ["void", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory.setMaxProxyHeader(int)"], ["org.eclipse.jetty.io.Connection", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory.newConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint)"], ["org.eclipse.jetty.server.RequestLog$Collection", "org.eclipse.jetty.server.RequestLog$Collection(org.eclipse.jetty.server.RequestLog...)"], ["void", "org.eclipse.jetty.server.RequestLog$Collection.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)"], ["org.eclipse.jetty.server.HttpInput$Content", "org.eclipse.jetty.server.HttpInput$Content(java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.HttpInput$Content.getByteBuffer()"], ["org.eclipse.jetty.util.thread.Invocable$InvocationType", "org.eclipse.jetty.server.HttpInput$Content.getInvocationType()"], ["int", "org.eclipse.jetty.server.HttpInput$Content.get(byte[], int, int)"], ["int", "org.eclipse.jetty.server.HttpInput$Content.skip(int)"], ["boolean", "org.eclipse.jetty.server.HttpInput$Content.hasContent()"], ["int", "org.eclipse.jetty.server.HttpInput$Content.remaining()"], ["boolean", "org.eclipse.jetty.server.HttpInput$Content.isEmpty()"], ["java.lang.String", "org.eclipse.jetty.server.HttpInput$Content.toString()"], ["org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory$Family[]", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory$Family.values()"], ["org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory$Family", "org.eclipse.jetty.server.ProxyConnectionFactory$ProxyV2ConnectionFactory$Family.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.HttpChannel", "org.eclipse.jetty.server.HttpChannel(org.eclipse.jetty.server.Connector, org.eclipse.jetty.server.HttpConfiguration, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.HttpTransport)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.isSendError()"], ["org.eclipse.jetty.server.HttpChannelState", "org.eclipse.jetty.server.HttpChannel.getState()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.addListener(org.eclipse.jetty.server.HttpChannel$Listener)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.removeListener(org.eclipse.jetty.server.HttpChannel$Listener)"], ["long", "org.eclipse.jetty.server.HttpChannel.getBytesWritten()"], ["long", "org.eclipse.jetty.server.HttpChannel.getRequests()"], ["org.eclipse.jetty.server.Connector", "org.eclipse.jetty.server.HttpChannel.getConnector()"], ["org.eclipse.jetty.server.HttpTransport", "org.eclipse.jetty.server.HttpChannel.getHttpTransport()"], ["org.eclipse.jetty.server.RequestLog", "org.eclipse.jetty.server.HttpChannel.getRequestLog()"], ["void", "org.eclipse.jetty.server.HttpChannel.setRequestLog(org.eclipse.jetty.server.RequestLog)"], ["void", "org.eclipse.jetty.server.HttpChannel.addRequestLog(org.eclipse.jetty.server.RequestLog)"], ["org.eclipse.jetty.http.MetaData$Response", "org.eclipse.jetty.server.HttpChannel.getCommittedMetaData()"], ["long", "org.eclipse.jetty.server.HttpChannel.getIdleTimeout()"], ["void", "org.eclipse.jetty.server.HttpChannel.setIdleTimeout(long)"], ["org.eclipse.jetty.io.ByteBufferPool", "org.eclipse.jetty.server.HttpChannel.getByteBufferPool()"], ["org.eclipse.jetty.server.HttpConfiguration", "org.eclipse.jetty.server.HttpChannel.getHttpConfiguration()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.isOptimizedForDirectBuffers()"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.HttpChannel.getServer()"], ["org.eclipse.jetty.server.Request", "org.eclipse.jetty.server.HttpChannel.getRequest()"], ["org.eclipse.jetty.server.Response", "org.eclipse.jetty.server.HttpChannel.getResponse()"], ["org.eclipse.jetty.io.Connection", "org.eclipse.jetty.server.HttpChannel.getConnection()"], ["org.eclipse.jetty.io.EndPoint", "org.eclipse.jetty.server.HttpChannel.getEndPoint()"], ["java.net.InetSocketAddress", "org.eclipse.jetty.server.HttpChannel.getLocalAddress()"], ["java.net.InetSocketAddress", "org.eclipse.jetty.server.HttpChannel.getRemoteAddress()"], ["void", "org.eclipse.jetty.server.HttpChannel.continue100(int)"], ["void", "org.eclipse.jetty.server.HttpChannel.recycle()"], ["void", "org.eclipse.jetty.server.HttpChannel.onAsyncWaitForContent()"], ["void", "org.eclipse.jetty.server.HttpChannel.onBlockWaitForContent()"], ["void", "org.eclipse.jetty.server.HttpChannel.onBlockWaitForContentFailure(java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.HttpChannel.run()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.handle()"], ["void", "org.eclipse.jetty.server.HttpChannel.sendResponseAndComplete()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.isExpecting100Continue()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.isExpecting102Processing()"], ["java.lang.String", "org.eclipse.jetty.server.HttpChannel.toString()"], ["void", "org.eclipse.jetty.server.HttpChannel.onRequest(org.eclipse.jetty.http.MetaData$Request)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.onContent(org.eclipse.jetty.server.HttpInput$Content)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.onContentComplete()"], ["void", "org.eclipse.jetty.server.HttpChannel.onTrailers(org.eclipse.jetty.http.HttpFields)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.onRequestComplete()"], ["void", "org.eclipse.jetty.server.HttpChannel.onCompleted()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.onEarlyEOF()"], ["void", "org.eclipse.jetty.server.HttpChannel.onBadMessage(org.eclipse.jetty.http.BadMessageException)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.sendResponse(org.eclipse.jetty.http.MetaData$Response, java.nio.ByteBuffer, boolean, org.eclipse.jetty.util.Callback)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.sendResponse(org.eclipse.jetty.http.MetaData$Response, java.nio.ByteBuffer, boolean)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.isCommitted()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.isRequestCompleted()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.isResponseCompleted()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.isPersistent()"], ["void", "org.eclipse.jetty.server.HttpChannel.write(java.nio.ByteBuffer, boolean, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpChannel.resetBuffer()"], ["org.eclipse.jetty.server.HttpOutput$Interceptor", "org.eclipse.jetty.server.HttpChannel.getNextInterceptor()"], ["org.eclipse.jetty.util.thread.Scheduler", "org.eclipse.jetty.server.HttpChannel.getScheduler()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.useDirectBuffers()"], ["void", "org.eclipse.jetty.server.HttpChannel.abort(java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.DebugListener$1.onTimeout(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.DebugListener$1.onStartAsync(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.DebugListener$1.onError(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.DebugListener$1.onComplete(javax.servlet.AsyncEvent)"], ["org.eclipse.jetty.server.CustomRequestLog", "org.eclipse.jetty.server.CustomRequestLog(org.eclipse.jetty.server.RequestLog$Writer, java.lang.String)"], ["org.eclipse.jetty.server.CustomRequestLog", "org.eclipse.jetty.server.CustomRequestLog(java.lang.String)"], ["org.eclipse.jetty.server.CustomRequestLog", "org.eclipse.jetty.server.CustomRequestLog(java.lang.String, java.lang.String)"], ["org.eclipse.jetty.server.RequestLog$Writer", "org.eclipse.jetty.server.CustomRequestLog.getWriter()"], ["void", "org.eclipse.jetty.server.CustomRequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)"], ["void", "org.eclipse.jetty.server.CustomRequestLog.setIgnorePaths(java.lang.String[])"], ["java.lang.String[]", "org.eclipse.jetty.server.CustomRequestLog.getIgnorePaths()"], ["java.lang.String", "org.eclipse.jetty.server.CustomRequestLog.getFormatString()"], ["void", "org.eclipse.jetty.server.AsyncContextState$1.run()"], ["org.eclipse.jetty.server.resource.ByteBufferRangeWriter", "org.eclipse.jetty.server.resource.ByteBufferRangeWriter(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.resource.ByteBufferRangeWriter.close()"], ["void", "org.eclipse.jetty.server.resource.ByteBufferRangeWriter.writeTo(java.io.OutputStream, long, long)"], ["org.eclipse.jetty.server.ConnectorStatistics", "org.eclipse.jetty.server.ConnectorStatistics()"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.onOpened(org.eclipse.jetty.io.Connection)"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.onClosed(org.eclipse.jetty.io.Connection)"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getBytesIn()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getBytesOut()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getConnections()"], ["long", "org.eclipse.jetty.server.ConnectorStatistics.getConnectionDurationMax()"], ["double", "org.eclipse.jetty.server.ConnectorStatistics.getConnectionDurationMean()"], ["double", "org.eclipse.jetty.server.ConnectorStatistics.getConnectionDurationStdDev()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesIn()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesInPerConnectionMax()"], ["double", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesInPerConnectionMean()"], ["double", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesInPerConnectionStdDev()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getConnectionsOpen()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getConnectionsOpenMax()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesOut()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesOutPerConnectionMax()"], ["double", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesOutPerConnectionMean()"], ["double", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesOutPerConnectionStdDev()"], ["long", "org.eclipse.jetty.server.ConnectorStatistics.getStartedMillis()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesInPerSecond()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesOutPerSecond()"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.doStart()"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.doStop()"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.reset()"], ["java.lang.String", "org.eclipse.jetty.server.ConnectorStatistics.dump()"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.dump(java.lang.Appendable, java.lang.String)"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.addToAllConnectors(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.LocalConnector$LocalEndPoint", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint(org.eclipse.jetty.server.LocalConnector)"], ["void", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.onClose()"], ["void", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.doShutdownOutput()"], ["void", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.waitUntilClosed()"], ["void", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.waitUntilClosedOrIdleFor(long, java.util.concurrent.TimeUnit)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.getResponseData()"], ["java.lang.String", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.getResponse()"], ["java.lang.String", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.getResponse(boolean, long, java.util.concurrent.TimeUnit)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.waitForResponse(boolean, long, java.util.concurrent.TimeUnit)"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.session.SessionHandler$1.getSession(java.lang.String)"], ["java.util.Enumeration", "org.eclipse.jetty.server.session.SessionHandler$1.getIds()"], ["org.eclipse.jetty.server.session.SessionHandler$CookieConfig", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig(org.eclipse.jetty.server.session.SessionHandler)"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.getComment()"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.getDomain()"], ["int", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.getMaxAge()"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.getName()"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.getPath()"], ["boolean", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.isHttpOnly()"], ["boolean", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.isSecure()"], ["void", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.setComment(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.setDomain(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.setHttpOnly(boolean)"], ["void", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.setMaxAge(int)"], ["void", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.setName(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.setPath(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.SessionHandler$CookieConfig.setSecure(boolean)"], ["org.eclipse.jetty.server.session.NullSessionCacheFactory", "org.eclipse.jetty.server.session.NullSessionCacheFactory()"], ["int", "org.eclipse.jetty.server.session.NullSessionCacheFactory.getEvictionPolicy()"], ["void", "org.eclipse.jetty.server.session.NullSessionCacheFactory.setEvictionPolicy(int)"], ["boolean", "org.eclipse.jetty.server.session.NullSessionCacheFactory.isSaveOnInactiveEvict()"], ["void", "org.eclipse.jetty.server.session.NullSessionCacheFactory.setSaveOnInactiveEvict(boolean)"], ["org.eclipse.jetty.server.session.SessionCache", "org.eclipse.jetty.server.session.NullSessionCacheFactory.getSessionCache(org.eclipse.jetty.server.session.SessionHandler)"], ["org.eclipse.jetty.server.session.FileSessionDataStore", "org.eclipse.jetty.server.session.FileSessionDataStore()"], ["void", "org.eclipse.jetty.server.session.FileSessionDataStore.initialize(org.eclipse.jetty.server.session.SessionContext)"], ["java.io.File", "org.eclipse.jetty.server.session.FileSessionDataStore.getStoreDir()"], ["void", "org.eclipse.jetty.server.session.FileSessionDataStore.setStoreDir(java.io.File)"], ["boolean", "org.eclipse.jetty.server.session.FileSessionDataStore.isDeleteUnrestorableFiles()"], ["void", "org.eclipse.jetty.server.session.FileSessionDataStore.setDeleteUnrestorableFiles(boolean)"], ["boolean", "org.eclipse.jetty.server.session.FileSessionDataStore.delete(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.session.FileSessionDataStore.deleteFile(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.FileSessionDataStore.sweepDisk()"], ["void", "org.eclipse.jetty.server.session.FileSessionDataStore.sweepFile(long, java.nio.file.Path)"], ["org.eclipse.jetty.server.session.SessionData", "org.eclipse.jetty.server.session.FileSessionDataStore.doLoad(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.FileSessionDataStore.doStore(java.lang.String, org.eclipse.jetty.server.session.SessionData, long)"], ["void", "org.eclipse.jetty.server.session.FileSessionDataStore.initializeStore()"], ["boolean", "org.eclipse.jetty.server.session.FileSessionDataStore.isPassivating()"], ["boolean", "org.eclipse.jetty.server.session.FileSessionDataStore.exists(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.FileSessionDataStore.toString()"], ["org.eclipse.jetty.server.handler.HotSwapHandler", "org.eclipse.jetty.server.handler.HotSwapHandler()"], ["org.eclipse.jetty.server.Handler", "org.eclipse.jetty.server.handler.HotSwapHandler.getHandler()"], ["org.eclipse.jetty.server.Handler[]", "org.eclipse.jetty.server.handler.HotSwapHandler.getHandlers()"], ["void", "org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)"], ["void", "org.eclipse.jetty.server.handler.HotSwapHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.HotSwapHandler.destroy()"], ["java.lang.ClassLoader", "org.eclipse.jetty.server.handler.ContextHandler$Caller.getCallerClassLoader(int)"], ["org.eclipse.jetty.server.handler.ThreadLimitHandler", "org.eclipse.jetty.server.handler.ThreadLimitHandler()"], ["org.eclipse.jetty.server.handler.ThreadLimitHandler", "org.eclipse.jetty.server.handler.ThreadLimitHandler(java.lang.String)"], ["org.eclipse.jetty.server.handler.ThreadLimitHandler", "org.eclipse.jetty.server.handler.ThreadLimitHandler(java.lang.String, boolean)"], ["boolean", "org.eclipse.jetty.server.handler.ThreadLimitHandler.isEnabled()"], ["void", "org.eclipse.jetty.server.handler.ThreadLimitHandler.setEnabled(boolean)"], ["int", "org.eclipse.jetty.server.handler.ThreadLimitHandler.getThreadLimit()"], ["void", "org.eclipse.jetty.server.handler.ThreadLimitHandler.setThreadLimit(int)"], ["void", "org.eclipse.jetty.server.handler.ThreadLimitHandler.include(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ThreadLimitHandler.exclude(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ThreadLimitHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.gzip.GzipHandler", "org.eclipse.jetty.server.handler.gzip.GzipHandler()"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.addExcludedAgentPatterns(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.addExcludedMethods(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setDispatcherTypes(java.util.EnumSet<javax.servlet.DispatcherType>)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setDispatcherTypes(javax.servlet.DispatcherType...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.addExcludedMimeTypes(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.addExcludedPaths(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.addIncludedAgentPatterns(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.addIncludedMethods(java.lang.String...)"], ["boolean", "org.eclipse.jetty.server.handler.gzip.GzipHandler.isSyncFlush()"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setSyncFlush(boolean)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.addIncludedMimeTypes(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.addIncludedPaths(java.lang.String...)"], ["boolean", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getCheckGzExists()"], ["int", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getCompressionLevel()"], ["java.util.zip.Deflater", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getDeflater(org.eclipse.jetty.server.Request, long)"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getExcludedAgentPatterns()"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getExcludedMethods()"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getExcludedMimeTypes()"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getExcludedPaths()"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getIncludedAgentPatterns()"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getIncludedMethods()"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getIncludedMimeTypes()"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getIncludedPaths()"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getMethods()"], ["int", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getMinGzipSize()"], ["int", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getInflateBufferSize()"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setInflateBufferSize(int)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["boolean", "org.eclipse.jetty.server.handler.gzip.GzipHandler.isMimeTypeGzipable(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.recycle(java.util.zip.Deflater)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setCheckGzExists(boolean)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setCompressionLevel(int)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setExcludedAgentPatterns(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setExcludedMethods(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setExcludedMimeTypes(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setExcludedPaths(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setIncludedAgentPatterns(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setIncludedMethods(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setIncludedMimeTypes(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setIncludedPaths(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setMinGzipSize(int)"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setIncludedMethodList(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getIncludedMethodList()"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setExcludedMethodList(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getExcludedMethodList()"], ["int", "org.eclipse.jetty.server.handler.gzip.GzipHandler.getDeflaterPoolCapacity()"], ["void", "org.eclipse.jetty.server.handler.gzip.GzipHandler.setDeflaterPoolCapacity(int)"], ["java.lang.String", "org.eclipse.jetty.server.handler.gzip.GzipHandler.toString()"], ["org.eclipse.jetty.server.handler.ContextHandler$StaticContext", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext()"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getContext(java.lang.String)"], ["int", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getMajorVersion()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getMimeType(java.lang.String)"], ["int", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getMinorVersion()"], ["javax.servlet.RequestDispatcher", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getNamedDispatcher(java.lang.String)"], ["javax.servlet.RequestDispatcher", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getRequestDispatcher(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getRealPath(java.lang.String)"], ["java.net.URL", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getResource(java.lang.String)"], ["java.io.InputStream", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getResourceAsStream(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getServerInfo()"], ["javax.servlet.Servlet", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getServlet(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.log(java.lang.Exception, java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.log(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.log(java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getInitParameter(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getServletContextName()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getContextPath()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.setInitParameter(java.lang.String, java.lang.String)"], ["javax.servlet.FilterRegistration$Dynamic", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.addFilter(java.lang.String, java.lang.Class<? extends javax.servlet.Filter>)"], ["javax.servlet.FilterRegistration$Dynamic", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.addFilter(java.lang.String, javax.servlet.Filter)"], ["javax.servlet.FilterRegistration$Dynamic", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.addFilter(java.lang.String, java.lang.String)"], ["javax.servlet.ServletRegistration$Dynamic", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.addServlet(java.lang.String, java.lang.Class<? extends javax.servlet.Servlet>)"], ["javax.servlet.ServletRegistration$Dynamic", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.addServlet(java.lang.String, javax.servlet.Servlet)"], ["javax.servlet.ServletRegistration$Dynamic", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.addServlet(java.lang.String, java.lang.String)"], ["javax.servlet.FilterRegistration", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getFilterRegistration(java.lang.String)"], ["java.util.Map<java.lang.String, ? extends javax.servlet.FilterRegistration>", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getFilterRegistrations()"], ["javax.servlet.ServletRegistration", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getServletRegistration(java.lang.String)"], ["java.util.Map<java.lang.String, ? extends javax.servlet.ServletRegistration>", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getServletRegistrations()"], ["javax.servlet.SessionCookieConfig", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getSessionCookieConfig()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.setSessionTrackingModes(java.util.Set<javax.servlet.SessionTrackingMode>)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.addListener(java.lang.String)"], ["<T extends java.util.EventListener> void", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.addListener(T)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.addListener(java.lang.Class<? extends java.util.EventListener>)"], ["<T extends java.util.EventListener> T", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.createListener(java.lang.Class<T>)"], ["<T extends javax.servlet.Servlet> T", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.createServlet(java.lang.Class<T>)"], ["<T extends javax.servlet.Filter> T", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.createFilter(java.lang.Class<T>)"], ["java.lang.ClassLoader", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getClassLoader()"], ["int", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getEffectiveMajorVersion()"], ["int", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getEffectiveMinorVersion()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.setEffectiveMajorVersion(int)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.setEffectiveMinorVersion(int)"], ["javax.servlet.descriptor.JspConfigDescriptor", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getJspConfigDescriptor()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.declareRoles(java.lang.String...)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$StaticContext.getVirtualServerName()"], ["org.eclipse.jetty.server.handler.HandlerList", "org.eclipse.jetty.server.handler.HandlerList()"], ["org.eclipse.jetty.server.handler.HandlerList", "org.eclipse.jetty.server.handler.HandlerList(org.eclipse.jetty.server.Handler...)"], ["void", "org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.BufferedResponseHandler$BufferedInterceptor", "org.eclipse.jetty.server.handler.BufferedResponseHandler$BufferedInterceptor(org.eclipse.jetty.server.handler.BufferedResponseHandler, org.eclipse.jetty.server.HttpChannel, org.eclipse.jetty.server.HttpOutput$Interceptor)"], ["void", "org.eclipse.jetty.server.handler.BufferedResponseHandler$BufferedInterceptor.resetBuffer()"], ["void", "org.eclipse.jetty.server.handler.BufferedResponseHandler$BufferedInterceptor.write(java.nio.ByteBuffer, boolean, org.eclipse.jetty.util.Callback)"], ["org.eclipse.jetty.server.HttpOutput$Interceptor", "org.eclipse.jetty.server.handler.BufferedResponseHandler$BufferedInterceptor.getNextInterceptor()"], ["boolean", "org.eclipse.jetty.server.handler.BufferedResponseHandler$BufferedInterceptor.isOptimizedForDirectBuffers()"], ["void", "org.eclipse.jetty.server.HttpChannel$Send100Callback.succeeded()"], ["org.eclipse.jetty.server.SslConnectionFactory", "org.eclipse.jetty.server.SslConnectionFactory()"], ["org.eclipse.jetty.server.SslConnectionFactory", "org.eclipse.jetty.server.SslConnectionFactory(java.lang.String)"], ["org.eclipse.jetty.server.SslConnectionFactory", "org.eclipse.jetty.server.SslConnectionFactory(org.eclipse.jetty.util.ssl.SslContextFactory, java.lang.String)"], ["org.eclipse.jetty.util.ssl.SslContextFactory", "org.eclipse.jetty.server.SslConnectionFactory.getSslContextFactory()"], ["void", "org.eclipse.jetty.server.SslConnectionFactory.setDirectBuffersForEncryption(boolean)"], ["void", "org.eclipse.jetty.server.SslConnectionFactory.setDirectBuffersForDecryption(boolean)"], ["boolean", "org.eclipse.jetty.server.SslConnectionFactory.isDirectBuffersForDecryption()"], ["boolean", "org.eclipse.jetty.server.SslConnectionFactory.isDirectBuffersForEncryption()"], ["java.lang.String", "org.eclipse.jetty.server.SslConnectionFactory.getNextProtocol()"], ["org.eclipse.jetty.server.ConnectionFactory$Detecting$Detection", "org.eclipse.jetty.server.SslConnectionFactory.detect(java.nio.ByteBuffer)"], ["org.eclipse.jetty.io.Connection", "org.eclipse.jetty.server.SslConnectionFactory.newConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint)"], ["java.lang.String", "org.eclipse.jetty.server.SslConnectionFactory.toString()"], ["void", "org.eclipse.jetty.server.HttpChannelState$2.run()"], ["java.lang.String", "org.eclipse.jetty.server.HttpChannelState$2.toString()"], ["org.eclipse.jetty.util.thread.Invocable$InvocationType", "org.eclipse.jetty.server.HttpOutput$ChannelWriteCB.getInvocationType()"], ["void", "org.eclipse.jetty.server.HttpOutput$ChannelWriteCB.onCompleteFailure(java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.server.Authentication$1.toString()"], ["org.eclipse.jetty.server.AsyncContextEvent", "org.eclipse.jetty.server.AsyncContextEvent(org.eclipse.jetty.server.handler.ContextHandler$Context, org.eclipse.jetty.server.AsyncContextState, org.eclipse.jetty.server.HttpChannelState, org.eclipse.jetty.server.Request, javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.AsyncContextEvent.getSuspendedContext()"], ["org.eclipse.jetty.server.handler.ContextHandler$Context", "org.eclipse.jetty.server.AsyncContextEvent.getContext()"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.AsyncContextEvent.getDispatchContext()"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.AsyncContextEvent.getServletContext()"], ["java.lang.String", "org.eclipse.jetty.server.AsyncContextEvent.getPath()"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.setTimeoutTask(org.eclipse.jetty.util.thread.Scheduler$Task)"], ["boolean", "org.eclipse.jetty.server.AsyncContextEvent.hasTimeoutTask()"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.cancelTimeoutTask()"], ["javax.servlet.AsyncContext", "org.eclipse.jetty.server.AsyncContextEvent.getAsyncContext()"], ["java.lang.Throwable", "org.eclipse.jetty.server.AsyncContextEvent.getThrowable()"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.setDispatchContext(javax.servlet.ServletContext)"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.setDispatchPath(java.lang.String)"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.completed()"], ["org.eclipse.jetty.server.HttpChannelState", "org.eclipse.jetty.server.AsyncContextEvent.getHttpChannelState()"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.run()"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.addThrowable(java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.server.HttpInput$4.toString()"], ["org.eclipse.jetty.server.NetworkTrafficServerConnector", "org.eclipse.jetty.server.NetworkTrafficServerConnector(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.NetworkTrafficServerConnector", "org.eclipse.jetty.server.NetworkTrafficServerConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["org.eclipse.jetty.server.NetworkTrafficServerConnector", "org.eclipse.jetty.server.NetworkTrafficServerConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory)"], ["org.eclipse.jetty.server.NetworkTrafficServerConnector", "org.eclipse.jetty.server.NetworkTrafficServerConnector(org.eclipse.jetty.server.Server, java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, org.eclipse.jetty.io.ByteBufferPool, int, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.NetworkTrafficServerConnector", "org.eclipse.jetty.server.NetworkTrafficServerConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["void", "org.eclipse.jetty.server.NetworkTrafficServerConnector.addNetworkTrafficListener(org.eclipse.jetty.io.NetworkTrafficListener)"], ["void", "org.eclipse.jetty.server.NetworkTrafficServerConnector.removeNetworkTrafficListener(org.eclipse.jetty.io.NetworkTrafficListener)"], ["void", "org.eclipse.jetty.server.HttpChannelState$1.run()"], ["java.lang.String", "org.eclipse.jetty.server.HttpChannelState$1.toString()"], ["org.eclipse.jetty.server.ShutdownMonitor", "org.eclipse.jetty.server.ShutdownMonitor.getInstance()"], ["void", "org.eclipse.jetty.server.ShutdownMonitor.register(org.eclipse.jetty.util.component.LifeCycle...)"], ["void", "org.eclipse.jetty.server.ShutdownMonitor.deregister(org.eclipse.jetty.util.component.LifeCycle)"], ["boolean", "org.eclipse.jetty.server.ShutdownMonitor.isRegistered(org.eclipse.jetty.util.component.LifeCycle)"], ["java.lang.String", "org.eclipse.jetty.server.ShutdownMonitor.getKey()"], ["int", "org.eclipse.jetty.server.ShutdownMonitor.getPort()"], ["boolean", "org.eclipse.jetty.server.ShutdownMonitor.isExitVm()"], ["void", "org.eclipse.jetty.server.ShutdownMonitor.setDebug(boolean)"], ["void", "org.eclipse.jetty.server.ShutdownMonitor.setExitVm(boolean)"], ["void", "org.eclipse.jetty.server.ShutdownMonitor.setKey(java.lang.String)"], ["void", "org.eclipse.jetty.server.ShutdownMonitor.setPort(int)"], ["java.lang.String", "org.eclipse.jetty.server.ShutdownMonitor.toString()"], ["java.lang.Object", "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()"], ["void", "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.clearAttributes()"], ["void", "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.removeAttribute(java.lang.String)"], ["org.eclipse.jetty.server.MultiPartFormDataCompliance[]", "org.eclipse.jetty.server.MultiPartFormDataCompliance.values()"], ["org.eclipse.jetty.server.MultiPartFormDataCompliance", "org.eclipse.jetty.server.MultiPartFormDataCompliance.valueOf(java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpChannel$SendCallback$1.succeeded()"], ["void", "org.eclipse.jetty.server.HttpChannel$SendCallback$1.failed(java.lang.Throwable)"], ["org.eclipse.jetty.server.ClassLoaderDump", "org.eclipse.jetty.server.ClassLoaderDump(java.lang.ClassLoader)"], ["java.lang.String", "org.eclipse.jetty.server.ClassLoaderDump.dump()"], ["void", "org.eclipse.jetty.server.ClassLoaderDump.dump(java.lang.Appendable, java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpOutput$WriteCompleteCB.succeeded()"], ["void", "org.eclipse.jetty.server.HttpOutput$WriteCompleteCB.failed(java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.HttpConnection$AsyncReadCallback.succeeded()"], ["void", "org.eclipse.jetty.server.HttpConnection$AsyncReadCallback.failed(java.lang.Throwable)"], ["org.eclipse.jetty.server.resource.InputStreamRangeWriter", "org.eclipse.jetty.server.resource.InputStreamRangeWriter(org.eclipse.jetty.server.resource.InputStreamRangeWriter$InputStreamSupplier)"], ["void", "org.eclipse.jetty.server.resource.InputStreamRangeWriter.close()"], ["void", "org.eclipse.jetty.server.resource.InputStreamRangeWriter.writeTo(java.io.OutputStream, long, long)"], ["org.eclipse.jetty.server.ServletRequestHttpWrapper", "org.eclipse.jetty.server.ServletRequestHttpWrapper(javax.servlet.ServletRequest)"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getAuthType()"], ["javax.servlet.http.Cookie[]", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getCookies()"], ["long", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getDateHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getHeader(java.lang.String)"], ["int", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getIntHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getMethod()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getPathInfo()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getPathTranslated()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getContextPath()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getQueryString()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getRemoteUser()"], ["boolean", "org.eclipse.jetty.server.ServletRequestHttpWrapper.isUserInRole(java.lang.String)"], ["java.security.Principal", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getUserPrincipal()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getRequestedSessionId()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getRequestURI()"], ["java.lang.StringBuffer", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getRequestURL()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getServletPath()"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getSession(boolean)"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getSession()"], ["boolean", "org.eclipse.jetty.server.ServletRequestHttpWrapper.isRequestedSessionIdValid()"], ["boolean", "org.eclipse.jetty.server.ServletRequestHttpWrapper.isRequestedSessionIdFromCookie()"], ["boolean", "org.eclipse.jetty.server.ServletRequestHttpWrapper.isRequestedSessionIdFromURL()"], ["boolean", "org.eclipse.jetty.server.ServletRequestHttpWrapper.isRequestedSessionIdFromUrl()"], ["boolean", "org.eclipse.jetty.server.ServletRequestHttpWrapper.authenticate(javax.servlet.http.HttpServletResponse)"], ["javax.servlet.http.Part", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getPart(java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletRequestHttpWrapper.login(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletRequestHttpWrapper.logout()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.changeSessionId()"], ["<T extends javax.servlet.http.HttpUpgradeHandler> T", "org.eclipse.jetty.server.ServletRequestHttpWrapper.upgrade(java.lang.Class<T>)"], ["org.eclipse.jetty.server.Server$DateField", "org.eclipse.jetty.server.Server$DateField(long, org.eclipse.jetty.http.HttpField)"], ["org.eclipse.jetty.server.QuietServletException", "org.eclipse.jetty.server.QuietServletException()"], ["org.eclipse.jetty.server.QuietServletException", "org.eclipse.jetty.server.QuietServletException(java.lang.String, java.lang.Throwable)"], ["org.eclipse.jetty.server.QuietServletException", "org.eclipse.jetty.server.QuietServletException(java.lang.String)"], ["org.eclipse.jetty.server.QuietServletException", "org.eclipse.jetty.server.QuietServletException(java.lang.Throwable)"], ["org.eclipse.jetty.server.session.AbstractSessionDataStore", "org.eclipse.jetty.server.session.AbstractSessionDataStore()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionDataStore.initialize(org.eclipse.jetty.server.session.SessionContext)"], ["org.eclipse.jetty.server.session.SessionData", "org.eclipse.jetty.server.session.AbstractSessionDataStore.load(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionDataStore.store(java.lang.String, org.eclipse.jetty.server.session.SessionData)"], ["org.eclipse.jetty.server.session.SessionData", "org.eclipse.jetty.server.session.AbstractSessionDataStore.newSessionData(java.lang.String, long, long, long, long)"], ["int", "org.eclipse.jetty.server.session.AbstractSessionDataStore.getGracePeriodSec()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionDataStore.setGracePeriodSec(int)"], ["int", "org.eclipse.jetty.server.session.AbstractSessionDataStore.getSavePeriodSec()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionDataStore.setSavePeriodSec(int)"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionDataStore.toString()"], ["org.eclipse.jetty.server.session.AbstractSessionCacheFactory", "org.eclipse.jetty.server.session.AbstractSessionCacheFactory()"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionCacheFactory.isFlushOnResponseCommit()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCacheFactory.setFlushOnResponseCommit(boolean)"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionCacheFactory.isSaveOnCreate()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCacheFactory.setSaveOnCreate(boolean)"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionCacheFactory.isRemoveUnloadableSessions()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCacheFactory.setRemoveUnloadableSessions(boolean)"], ["int", "org.eclipse.jetty.server.session.AbstractSessionCacheFactory.getEvictionPolicy()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCacheFactory.setEvictionPolicy(int)"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionCacheFactory.isSaveOnInactiveEvict()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionCacheFactory.setSaveOnInactiveEvict(boolean)"], ["boolean", "org.eclipse.jetty.server.session.Session$1.hasMoreElements()"], ["java.lang.String", "org.eclipse.jetty.server.session.Session$1.nextElement()"], ["java.lang.Object", "org.eclipse.jetty.server.session.Session$1.nextElement()"], ["org.eclipse.jetty.server.session.CachingSessionDataStore", "org.eclipse.jetty.server.session.CachingSessionDataStore(org.eclipse.jetty.server.session.SessionDataMap, org.eclipse.jetty.server.session.SessionDataStore)"], ["org.eclipse.jetty.server.session.SessionDataStore", "org.eclipse.jetty.server.session.CachingSessionDataStore.getSessionStore()"], ["org.eclipse.jetty.server.session.SessionDataMap", "org.eclipse.jetty.server.session.CachingSessionDataStore.getSessionDataMap()"], ["org.eclipse.jetty.server.session.SessionData", "org.eclipse.jetty.server.session.CachingSessionDataStore.load(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.session.CachingSessionDataStore.delete(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.CachingSessionDataStore.store(java.lang.String, org.eclipse.jetty.server.session.SessionData)"], ["boolean", "org.eclipse.jetty.server.session.CachingSessionDataStore.isPassivating()"], ["boolean", "org.eclipse.jetty.server.session.CachingSessionDataStore.exists(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.CachingSessionDataStore.initialize(org.eclipse.jetty.server.session.SessionContext)"], ["org.eclipse.jetty.server.session.SessionData", "org.eclipse.jetty.server.session.CachingSessionDataStore.newSessionData(java.lang.String, long, long, long, long)"], ["void", "org.eclipse.jetty.server.session.SessionData.serializeAttributes(org.eclipse.jetty.server.session.SessionData, java.io.ObjectOutputStream)"], ["void", "org.eclipse.jetty.server.session.SessionData.deserializeAttributes(org.eclipse.jetty.server.session.SessionData, java.io.ObjectInputStream)"], ["org.eclipse.jetty.server.session.SessionData", "org.eclipse.jetty.server.session.SessionData(java.lang.String, java.lang.String, java.lang.String, long, long, long, long)"], ["org.eclipse.jetty.server.session.SessionData", "org.eclipse.jetty.server.session.SessionData(java.lang.String, java.lang.String, java.lang.String, long, long, long, long, java.util.Map<java.lang.String, java.lang.Object>)"], ["void", "org.eclipse.jetty.server.session.SessionData.copy(org.eclipse.jetty.server.session.SessionData)"], ["long", "org.eclipse.jetty.server.session.SessionData.getLastSaved()"], ["void", "org.eclipse.jetty.server.session.SessionData.setLastSaved(long)"], ["boolean", "org.eclipse.jetty.server.session.SessionData.isDirty()"], ["void", "org.eclipse.jetty.server.session.SessionData.setDirty(boolean)"], ["boolean", "org.eclipse.jetty.server.session.SessionData.isMetaDataDirty()"], ["void", "org.eclipse.jetty.server.session.SessionData.setMetaDataDirty(boolean)"], ["java.lang.Object", "org.eclipse.jetty.server.session.SessionData.getAttribute(java.lang.String)"], ["java.lang.Object", "org.eclipse.jetty.server.session.SessionData.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.session.SessionData.setDirty(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.SessionData.clean()"], ["void", "org.eclipse.jetty.server.session.SessionData.putAllAttributes(java.util.Map<java.lang.String, java.lang.Object>)"], ["void", "org.eclipse.jetty.server.session.SessionData.clearAllAttributes()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.eclipse.jetty.server.session.SessionData.getAllAttributes()"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionData.getId()"], ["void", "org.eclipse.jetty.server.session.SessionData.setId(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionData.getContextPath()"], ["void", "org.eclipse.jetty.server.session.SessionData.setContextPath(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionData.getVhost()"], ["void", "org.eclipse.jetty.server.session.SessionData.setVhost(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionData.getLastNode()"], ["void", "org.eclipse.jetty.server.session.SessionData.setLastNode(java.lang.String)"], ["long", "org.eclipse.jetty.server.session.SessionData.getExpiry()"], ["void", "org.eclipse.jetty.server.session.SessionData.setExpiry(long)"], ["long", "org.eclipse.jetty.server.session.SessionData.calcExpiry()"], ["long", "org.eclipse.jetty.server.session.SessionData.calcExpiry(long)"], ["void", "org.eclipse.jetty.server.session.SessionData.calcAndSetExpiry(long)"], ["void", "org.eclipse.jetty.server.session.SessionData.calcAndSetExpiry()"], ["long", "org.eclipse.jetty.server.session.SessionData.getCreated()"], ["void", "org.eclipse.jetty.server.session.SessionData.setCreated(long)"], ["long", "org.eclipse.jetty.server.session.SessionData.getCookieSet()"], ["void", "org.eclipse.jetty.server.session.SessionData.setCookieSet(long)"], ["long", "org.eclipse.jetty.server.session.SessionData.getAccessed()"], ["void", "org.eclipse.jetty.server.session.SessionData.setAccessed(long)"], ["long", "org.eclipse.jetty.server.session.SessionData.getLastAccessed()"], ["void", "org.eclipse.jetty.server.session.SessionData.setLastAccessed(long)"], ["long", "org.eclipse.jetty.server.session.SessionData.getMaxInactiveMs()"], ["void", "org.eclipse.jetty.server.session.SessionData.setMaxInactiveMs(long)"], ["boolean", "org.eclipse.jetty.server.session.SessionData.isExpiredAt(long)"], ["java.lang.String", "org.eclipse.jetty.server.session.SessionData.toString()"], ["org.eclipse.jetty.server.session.Session$SessionInactivityTimer", "org.eclipse.jetty.server.session.Session$SessionInactivityTimer(org.eclipse.jetty.server.session.Session)"], ["void", "org.eclipse.jetty.server.session.Session$SessionInactivityTimer.schedule()"], ["void", "org.eclipse.jetty.server.session.Session$SessionInactivityTimer.schedule(long)"], ["void", "org.eclipse.jetty.server.session.Session$SessionInactivityTimer.cancel()"], ["void", "org.eclipse.jetty.server.session.Session$SessionInactivityTimer.destroy()"]]}