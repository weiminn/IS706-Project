{"docker-java-3.0.14.jar": [["org.apache.http.impl.io.ChunkedInputStream", "org.apache.http.impl.io.ChunkedInputStream(org.apache.http.io.SessionInputBuffer, org.apache.http.config.MessageConstraints)"], ["org.apache.http.impl.io.ChunkedInputStream", "org.apache.http.impl.io.ChunkedInputStream(org.apache.http.io.SessionInputBuffer)"], ["int", "org.apache.http.impl.io.ChunkedInputStream.available()"], ["int", "org.apache.http.impl.io.ChunkedInputStream.read()"], ["int", "org.apache.http.impl.io.ChunkedInputStream.read(byte[], int, int)"], ["int", "org.apache.http.impl.io.ChunkedInputStream.read(byte[])"], ["void", "org.apache.http.impl.io.ChunkedInputStream.close()"], ["org.apache.http.Header[]", "org.apache.http.impl.io.ChunkedInputStream.getFooters()"], ["com.github.dockerjava.jaxrs.CopyFileFromContainerCmdExec", "com.github.dockerjava.jaxrs.CopyFileFromContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.ExecCreateCmdExec", "com.github.dockerjava.jaxrs.ExecCreateCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.RestartContainerCmdExec", "com.github.dockerjava.jaxrs.RestartContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.UpdateContainerCmdExec", "com.github.dockerjava.jaxrs.UpdateContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.ListNetworksCmdExec", "com.github.dockerjava.jaxrs.ListNetworksCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.KillContainerCmdExec", "com.github.dockerjava.jaxrs.KillContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.AttachContainerCmdExec", "com.github.dockerjava.jaxrs.AttachContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.InspectImageCmdExec", "com.github.dockerjava.jaxrs.InspectImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.UnixConnectionSocketFactory", "com.github.dockerjava.jaxrs.UnixConnectionSocketFactory(java.net.URI)"], ["java.net.URI", "com.github.dockerjava.jaxrs.UnixConnectionSocketFactory.sanitizeUri(java.net.URI)"], ["java.net.Socket", "com.github.dockerjava.jaxrs.UnixConnectionSocketFactory.createSocket(org.apache.http.protocol.HttpContext)"], ["java.net.Socket", "com.github.dockerjava.jaxrs.UnixConnectionSocketFactory.connectSocket(int, java.net.Socket, org.apache.http.HttpHost, java.net.InetSocketAddress, java.net.InetSocketAddress, org.apache.http.protocol.HttpContext)"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$2.run()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$3.run()"], ["com.github.dockerjava.jaxrs.InspectContainerCmdExec", "com.github.dockerjava.jaxrs.InspectContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.ContainerDiffCmdExec", "com.github.dockerjava.jaxrs.ContainerDiffCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.AbstrSyncDockerCmdExec", "com.github.dockerjava.jaxrs.AbstrSyncDockerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["RES_T", "com.github.dockerjava.jaxrs.AbstrSyncDockerCmdExec.exec(CMD_T)"], ["com.github.dockerjava.jaxrs.LoadImageCmdExec", "com.github.dockerjava.jaxrs.LoadImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.ExecStartCmdExec", "com.github.dockerjava.jaxrs.ExecStartCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.filter.LoggingFilter", "com.github.dockerjava.jaxrs.filter.LoggingFilter()"], ["com.github.dockerjava.jaxrs.filter.LoggingFilter", "com.github.dockerjava.jaxrs.filter.LoggingFilter(org.slf4j.Logger, java.lang.Boolean)"], ["com.github.dockerjava.jaxrs.filter.LoggingFilter", "com.github.dockerjava.jaxrs.filter.LoggingFilter(org.slf4j.Logger, int)"], ["void", "com.github.dockerjava.jaxrs.filter.LoggingFilter.filter(javax.ws.rs.client.ClientRequestContext)"], ["void", "com.github.dockerjava.jaxrs.filter.LoggingFilter.filter(javax.ws.rs.client.ClientRequestContext, javax.ws.rs.client.ClientResponseContext)"], ["void", "com.github.dockerjava.jaxrs.filter.LoggingFilter.filter(javax.ws.rs.container.ContainerRequestContext)"], ["void", "com.github.dockerjava.jaxrs.filter.LoggingFilter.filter(javax.ws.rs.container.ContainerRequestContext, javax.ws.rs.container.ContainerResponseContext)"], ["void", "com.github.dockerjava.jaxrs.filter.LoggingFilter.aroundWriteTo(javax.ws.rs.ext.WriterInterceptorContext)"], ["com.github.dockerjava.jaxrs.filter.SelectiveLoggingFilter", "com.github.dockerjava.jaxrs.filter.SelectiveLoggingFilter(org.slf4j.Logger, java.lang.Boolean)"], ["void", "com.github.dockerjava.jaxrs.filter.SelectiveLoggingFilter.filter(javax.ws.rs.client.ClientRequestContext)"], ["com.github.dockerjava.jaxrs.filter.FollowRedirectsFilter", "com.github.dockerjava.jaxrs.filter.FollowRedirectsFilter()"], ["void", "com.github.dockerjava.jaxrs.filter.FollowRedirectsFilter.filter(javax.ws.rs.client.ClientRequestContext, javax.ws.rs.client.ClientResponseContext)"], ["com.github.dockerjava.jaxrs.filter.ResponseStatusExceptionFilter", "com.github.dockerjava.jaxrs.filter.ResponseStatusExceptionFilter()"], ["void", "com.github.dockerjava.jaxrs.filter.ResponseStatusExceptionFilter.filter(javax.ws.rs.client.ClientRequestContext, javax.ws.rs.client.ClientResponseContext)"], ["com.github.dockerjava.jaxrs.StopContainerCmdExec", "com.github.dockerjava.jaxrs.StopContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.CreateImageCmdExec", "com.github.dockerjava.jaxrs.CreateImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.async.POSTCallbackNotifier", "com.github.dockerjava.jaxrs.async.POSTCallbackNotifier(com.github.dockerjava.core.async.ResponseStreamProcessor<T>, com.github.dockerjava.api.async.ResultCallback<T>, javax.ws.rs.client.Invocation$Builder, javax.ws.rs.client.Entity<?>)"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$1.run()"], ["com.github.dockerjava.jaxrs.EventsCmdExec", "com.github.dockerjava.jaxrs.EventsCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.ConnectToNetworkCmdExec", "com.github.dockerjava.jaxrs.ConnectToNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.InspectExecCmdExec", "com.github.dockerjava.jaxrs.InspectExecCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.DisconnectFromNetworkCmdExec", "com.github.dockerjava.jaxrs.DisconnectFromNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.SaveImageCmdExec", "com.github.dockerjava.jaxrs.SaveImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.LogContainerCmdExec", "com.github.dockerjava.jaxrs.LogContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.util.WrappedResponseInputStream", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream(javax.ws.rs.core.Response)"], ["int", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.read()"], ["int", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.hashCode()"], ["int", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.read(byte[])"], ["boolean", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.equals(java.lang.Object)"], ["int", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.read(byte[], int, int)"], ["long", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.skip(long)"], ["int", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.available()"], ["void", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.close()"], ["void", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.mark(int)"], ["void", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.reset()"], ["boolean", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.markSupported()"], ["boolean", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.isClosed()"], ["com.github.dockerjava.jaxrs.RemoveVolumeCmdExec", "com.github.dockerjava.jaxrs.RemoveVolumeCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.AbstrDockerCmdExec", "com.github.dockerjava.jaxrs.AbstrDockerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.RemoveImageCmdExec", "com.github.dockerjava.jaxrs.RemoveImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.InfoCmdExec", "com.github.dockerjava.jaxrs.InfoCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.CopyArchiveToContainerCmdExec", "com.github.dockerjava.jaxrs.CopyArchiveToContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.VersionCmdExec", "com.github.dockerjava.jaxrs.VersionCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$8.run()"], ["com.github.dockerjava.jaxrs.SearchImagesCmdExec", "com.github.dockerjava.jaxrs.SearchImagesCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.TopContainerCmdExec", "com.github.dockerjava.jaxrs.TopContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.InspectNetworkCmdExec", "com.github.dockerjava.jaxrs.InspectNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.CommitCmdExec", "com.github.dockerjava.jaxrs.CommitCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.AuthCmdExec", "com.github.dockerjava.jaxrs.AuthCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.StartContainerCmdExec", "com.github.dockerjava.jaxrs.StartContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.TagImageCmdExec", "com.github.dockerjava.jaxrs.TagImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.WaitContainerCmdExec", "com.github.dockerjava.jaxrs.WaitContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.CreateVolumeCmdExec", "com.github.dockerjava.jaxrs.CreateVolumeCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.model.Image", "com.github.dockerjava.api.model.Image()"], ["java.lang.String", "com.github.dockerjava.api.model.Image.getId()"], ["java.lang.String[]", "com.github.dockerjava.api.model.Image.getRepoTags()"], ["java.lang.String", "com.github.dockerjava.api.model.Image.getParentId()"], ["java.lang.Long", "com.github.dockerjava.api.model.Image.getCreated()"], ["java.lang.Long", "com.github.dockerjava.api.model.Image.getSize()"], ["java.lang.Long", "com.github.dockerjava.api.model.Image.getVirtualSize()"], ["java.lang.String", "com.github.dockerjava.api.model.Image.toString()"], ["com.github.dockerjava.api.model.Network$ContainerNetworkConfig", "com.github.dockerjava.api.model.Network$ContainerNetworkConfig()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$ContainerNetworkConfig.getEndpointId()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$ContainerNetworkConfig.getMacAddress()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$ContainerNetworkConfig.getIpv4Address()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$ContainerNetworkConfig.getIpv6Address()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$ContainerNetworkConfig.toString()"], ["com.github.dockerjava.api.model.Binds$Deserializer", "com.github.dockerjava.api.model.Binds$Deserializer()"], ["com.github.dockerjava.api.model.Binds", "com.github.dockerjava.api.model.Binds$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["java.lang.Object", "com.github.dockerjava.api.model.Binds$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.dockerjava.api.model.AuthResponse", "com.github.dockerjava.api.model.AuthResponse()"], ["java.lang.String", "com.github.dockerjava.api.model.AuthResponse.getStatus()"], ["java.lang.String", "com.github.dockerjava.api.model.AuthResponse.getIdentityToken()"], ["com.github.dockerjava.api.model.NetworkSettings", "com.github.dockerjava.api.model.NetworkSettings()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getIpAddress()"], ["java.lang.Integer", "com.github.dockerjava.api.model.NetworkSettings.getIpPrefixLen()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getGateway()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getBridge()"], ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>", "com.github.dockerjava.api.model.NetworkSettings.getPortMapping()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getMacAddress()"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.api.model.NetworkSettings.getPorts()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getEndpointID()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getIpV6Gateway()"], ["java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork>", "com.github.dockerjava.api.model.NetworkSettings.getNetworks()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getSandboxId()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getSandboxKey()"], ["java.lang.Object", "com.github.dockerjava.api.model.NetworkSettings.getSecondaryIPAddresses()"], ["java.lang.Object", "com.github.dockerjava.api.model.NetworkSettings.getSecondaryIPv6Addresses()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.NetworkSettings.getHairpinMode()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getLinkLocalIPv6Address()"], ["java.lang.Integer", "com.github.dockerjava.api.model.NetworkSettings.getLinkLocalIPv6PrefixLen()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getGlobalIPv6Address()"], ["java.lang.Integer", "com.github.dockerjava.api.model.NetworkSettings.getGlobalIPv6PrefixLen()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.toString()"], ["com.github.dockerjava.api.model.ContainerNetworkSettings", "com.github.dockerjava.api.model.ContainerNetworkSettings()"], ["java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork>", "com.github.dockerjava.api.model.ContainerNetworkSettings.getNetworks()"], ["com.github.dockerjava.api.model.ContainerNetworkSettings", "com.github.dockerjava.api.model.ContainerNetworkSettings.withNetworks(java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork>)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetworkSettings.toString()"], ["boolean", "com.github.dockerjava.api.model.ContainerNetworkSettings.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.ContainerNetworkSettings.hashCode()"], ["com.github.dockerjava.api.model.Identifier", "com.github.dockerjava.api.model.Identifier(com.github.dockerjava.api.model.Repository, java.lang.String)"], ["com.github.dockerjava.api.model.Identifier", "com.github.dockerjava.api.model.Identifier.fromCompoundString(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Identifier.toString()"], ["com.github.dockerjava.api.model.ResponseItem$AuxDetail", "com.github.dockerjava.api.model.ResponseItem$AuxDetail()"], ["java.lang.Integer", "com.github.dockerjava.api.model.ResponseItem$AuxDetail.getSize()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem$AuxDetail.getTag()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem$AuxDetail.getDigest()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem$AuxDetail.toString()"], ["com.github.dockerjava.api.model.Links", "com.github.dockerjava.api.model.Links(com.github.dockerjava.api.model.Link...)"], ["com.github.dockerjava.api.model.Links", "com.github.dockerjava.api.model.Links(java.util.List<com.github.dockerjava.api.model.Link>)"], ["com.github.dockerjava.api.model.Link[]", "com.github.dockerjava.api.model.Links.getLinks()"], ["com.github.dockerjava.api.model.Link", "com.github.dockerjava.api.model.Link(java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Link.getName()"], ["java.lang.String", "com.github.dockerjava.api.model.Link.getAlias()"], ["com.github.dockerjava.api.model.Link", "com.github.dockerjava.api.model.Link.parse(java.lang.String)"], ["boolean", "com.github.dockerjava.api.model.Link.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Link.hashCode()"], ["java.lang.String", "com.github.dockerjava.api.model.Link.toString()"], ["com.github.dockerjava.api.model.Ulimit", "com.github.dockerjava.api.model.Ulimit()"], ["com.github.dockerjava.api.model.Ulimit", "com.github.dockerjava.api.model.Ulimit(java.lang.String, int, int)"], ["java.lang.String", "com.github.dockerjava.api.model.Ulimit.getName()"], ["java.lang.Integer", "com.github.dockerjava.api.model.Ulimit.getSoft()"], ["java.lang.Integer", "com.github.dockerjava.api.model.Ulimit.getHard()"], ["boolean", "com.github.dockerjava.api.model.Ulimit.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Ulimit.hashCode()"], ["com.github.dockerjava.api.model.Statistics", "com.github.dockerjava.api.model.Statistics()"], ["java.util.Map<java.lang.String, java.lang.Object>", "com.github.dockerjava.api.model.Statistics.getNetworks()"], ["java.util.Map<java.lang.String, java.lang.Object>", "com.github.dockerjava.api.model.Statistics.getNetwork()"], ["java.util.Map<java.lang.String, java.lang.Object>", "com.github.dockerjava.api.model.Statistics.getCpuStats()"], ["java.util.Map<java.lang.String, java.lang.Object>", "com.github.dockerjava.api.model.Statistics.getMemoryStats()"], ["java.util.Map<java.lang.String, java.lang.Object>", "com.github.dockerjava.api.model.Statistics.getBlkioStats()"], ["java.lang.String", "com.github.dockerjava.api.model.Statistics.toString()"], ["com.github.dockerjava.api.model.VolumeBinds$Serializer", "com.github.dockerjava.api.model.VolumeBinds$Serializer()"], ["void", "com.github.dockerjava.api.model.VolumeBinds$Serializer.serialize(com.github.dockerjava.api.model.VolumeBinds, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.dockerjava.api.model.VolumeBinds$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.dockerjava.api.model.InternetProtocol[]", "com.github.dockerjava.api.model.InternetProtocol.values()"], ["com.github.dockerjava.api.model.InternetProtocol", "com.github.dockerjava.api.model.InternetProtocol.valueOf(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.InternetProtocol.toString()"], ["com.github.dockerjava.api.model.InternetProtocol", "com.github.dockerjava.api.model.InternetProtocol.parse(java.lang.String)"], ["com.github.dockerjava.api.model.VolumeRW$Deserializer", "com.github.dockerjava.api.model.VolumeRW$Deserializer()"], ["com.github.dockerjava.api.model.VolumeRW", "com.github.dockerjava.api.model.VolumeRW$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["java.lang.Object", "com.github.dockerjava.api.model.VolumeRW$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.dockerjava.api.model.VolumesRW$Deserializer", "com.github.dockerjava.api.model.VolumesRW$Deserializer()"], ["com.github.dockerjava.api.model.VolumesRW", "com.github.dockerjava.api.model.VolumesRW$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["java.lang.Object", "com.github.dockerjava.api.model.VolumesRW$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.dockerjava.api.model.VolumeBinds", "com.github.dockerjava.api.model.VolumeBinds(com.github.dockerjava.api.model.VolumeBind...)"], ["com.github.dockerjava.api.model.VolumeBind[]", "com.github.dockerjava.api.model.VolumeBinds.getBinds()"], ["com.github.dockerjava.api.model.Ports$Deserializer", "com.github.dockerjava.api.model.Ports$Deserializer()"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.api.model.Ports$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["java.lang.Object", "com.github.dockerjava.api.model.Ports$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.api.model.LogConfig(com.github.dockerjava.api.model.LogConfig$LoggingType, java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.api.model.LogConfig(com.github.dockerjava.api.model.LogConfig$LoggingType)"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.api.model.LogConfig()"], ["com.github.dockerjava.api.model.LogConfig$LoggingType", "com.github.dockerjava.api.model.LogConfig.getType()"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.api.model.LogConfig.setType(com.github.dockerjava.api.model.LogConfig$LoggingType)"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.LogConfig.getConfig()"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.api.model.LogConfig.setConfig(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.model.HealthCheck", "com.github.dockerjava.api.model.HealthCheck()"], ["java.lang.Long", "com.github.dockerjava.api.model.HealthCheck.getInterval()"], ["java.lang.Long", "com.github.dockerjava.api.model.HealthCheck.getTimeout()"], ["com.github.dockerjava.api.model.Volumes$Deserializer", "com.github.dockerjava.api.model.Volumes$Deserializer()"], ["com.github.dockerjava.api.model.Volumes", "com.github.dockerjava.api.model.Volumes$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["java.lang.Object", "com.github.dockerjava.api.model.Volumes$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.dockerjava.api.model.Binds", "com.github.dockerjava.api.model.Binds(com.github.dockerjava.api.model.Bind...)"], ["com.github.dockerjava.api.model.Bind[]", "com.github.dockerjava.api.model.Binds.getBinds()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig()"], ["com.github.dockerjava.api.model.ExposedPort[]", "com.github.dockerjava.api.model.ContainerConfig.getExposedPorts()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getAttachStderr()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withAttachStderr(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getAttachStdin()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withAttachStdin(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getAttachStdout()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withAttachStdout(java.lang.Boolean)"], ["java.lang.String[]", "com.github.dockerjava.api.model.ContainerConfig.getCmd()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withCmd(java.lang.String[])"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.getDomainName()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withDomainName(java.lang.String)"], ["java.lang.String[]", "com.github.dockerjava.api.model.ContainerConfig.getEntrypoint()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withEntrypoint(java.lang.String[])"], ["java.lang.String[]", "com.github.dockerjava.api.model.ContainerConfig.getEnv()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withEnv(java.lang.String[])"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withExposedPorts(com.github.dockerjava.api.model.ExposedPorts)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.getHostName()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withHostName(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.getImage()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withImage(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.ContainerConfig.getLabels()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withLabels(java.util.Map<java.lang.String, java.lang.String>)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.getMacAddress()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withMacAddress(java.lang.String)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getNetworkDisabled()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withNetworkDisabled(java.lang.Boolean)"], ["java.lang.String[]", "com.github.dockerjava.api.model.ContainerConfig.getOnBuild()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withOnBuild(java.lang.String[])"], ["java.lang.String[]", "com.github.dockerjava.api.model.ContainerConfig.getPortSpecs()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withPortSpecs(java.lang.String[])"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getStdInOnce()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withStdInOnce(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getStdinOpen()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withStdinOpen(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getTty()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withTty(java.lang.Boolean)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.getUser()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withUser(java.lang.String)"], ["java.util.Map<java.lang.String, ?>", "com.github.dockerjava.api.model.ContainerConfig.getVolumes()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withVolumes(java.util.Map<java.lang.String, ?>)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.getWorkingDir()"], ["com.github.dockerjava.api.model.HealthCheck", "com.github.dockerjava.api.model.ContainerConfig.getHealthcheck()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withWorkingDir(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.toString()"], ["boolean", "com.github.dockerjava.api.model.ContainerConfig.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.ContainerConfig.hashCode()"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.api.model.Ports()"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.api.model.Ports(com.github.dockerjava.api.model.ExposedPort, com.github.dockerjava.api.model.Ports$Binding)"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.api.model.Ports(com.github.dockerjava.api.model.PortBinding...)"], ["void", "com.github.dockerjava.api.model.Ports.bind(com.github.dockerjava.api.model.ExposedPort, com.github.dockerjava.api.model.Ports$Binding)"], ["void", "com.github.dockerjava.api.model.Ports.add(com.github.dockerjava.api.model.PortBinding...)"], ["java.lang.String", "com.github.dockerjava.api.model.Ports.toString()"], ["java.util.Map<com.github.dockerjava.api.model.ExposedPort, com.github.dockerjava.api.model.Ports$Binding[]>", "com.github.dockerjava.api.model.Ports.getBindings()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event(java.lang.String, java.lang.String, java.lang.String, java.lang.Long)"], ["java.lang.String", "com.github.dockerjava.api.model.Event.getStatus()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withStatus(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Event.getId()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Event.getFrom()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withFrom(java.lang.String)"], ["java.lang.Long", "com.github.dockerjava.api.model.Event.getTime()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withTime(java.lang.Long)"], ["java.lang.Long", "com.github.dockerjava.api.model.Event.getTimeNano()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withTimenano(java.lang.Long)"], ["com.github.dockerjava.api.model.Node", "com.github.dockerjava.api.model.Event.getNode()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withNode(com.github.dockerjava.api.model.Node)"], ["com.github.dockerjava.api.model.EventType", "com.github.dockerjava.api.model.Event.getType()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withType(com.github.dockerjava.api.model.EventType)"], ["java.lang.String", "com.github.dockerjava.api.model.Event.getAction()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withAction(java.lang.String)"], ["com.github.dockerjava.api.model.EventActor", "com.github.dockerjava.api.model.Event.getActor()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withEventActor(com.github.dockerjava.api.model.EventActor)"], ["java.lang.String", "com.github.dockerjava.api.model.Event.toString()"], ["boolean", "com.github.dockerjava.api.model.Event.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Event.hashCode()"], ["com.github.dockerjava.api.model.ExposedPort$Deserializer", "com.github.dockerjava.api.model.ExposedPort$Deserializer()"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["java.lang.Object", "com.github.dockerjava.api.model.ExposedPort$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.dockerjava.api.model.StreamType[]", "com.github.dockerjava.api.model.StreamType.values()"], ["com.github.dockerjava.api.model.StreamType", "com.github.dockerjava.api.model.StreamType.valueOf(java.lang.String)"], ["com.github.dockerjava.api.model.PortBinding", "com.github.dockerjava.api.model.PortBinding(com.github.dockerjava.api.model.Ports$Binding, com.github.dockerjava.api.model.ExposedPort)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.PortBinding.getBinding()"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.PortBinding.getExposedPort()"], ["com.github.dockerjava.api.model.PortBinding", "com.github.dockerjava.api.model.PortBinding.parse(java.lang.String)"], ["boolean", "com.github.dockerjava.api.model.PortBinding.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.PortBinding.hashCode()"], ["com.github.dockerjava.api.model.VolumeRW$Serializer", "com.github.dockerjava.api.model.VolumeRW$Serializer()"], ["void", "com.github.dockerjava.api.model.VolumeRW$Serializer.serialize(com.github.dockerjava.api.model.VolumeRW, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.dockerjava.api.model.VolumeRW$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.dockerjava.api.command.GraphDriver", "com.github.dockerjava.api.command.GraphDriver()"], ["com.github.dockerjava.api.command.GraphData", "com.github.dockerjava.api.command.GraphDriver.getData()"], ["com.github.dockerjava.api.command.GraphDriver", "com.github.dockerjava.api.command.GraphDriver.withData(com.github.dockerjava.api.command.GraphData)"], ["java.lang.String", "com.github.dockerjava.api.command.GraphDriver.getName()"], ["com.github.dockerjava.api.command.GraphDriver", "com.github.dockerjava.api.command.GraphDriver.withName(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.GraphDriver.toString()"], ["boolean", "com.github.dockerjava.api.command.GraphDriver.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.command.GraphDriver.hashCode()"], ["com.github.dockerjava.api.command.ExecCreateCmdResponse", "com.github.dockerjava.api.command.ExecCreateCmdResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.ExecCreateCmdResponse.getId()"], ["java.lang.String", "com.github.dockerjava.api.command.ExecCreateCmdResponse.toString()"], ["com.github.dockerjava.api.command.InspectExecResponse$Container", "com.github.dockerjava.api.command.InspectExecResponse$Container(com.github.dockerjava.api.command.InspectExecResponse)"], ["com.github.dockerjava.api.model.NetworkSettings", "com.github.dockerjava.api.command.InspectExecResponse$Container.getNetworkSettings()"], ["void", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXOutputStream.write(int)"], ["void", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXOutputStream.write(byte[], int, int)"], ["void", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXOutputStream.close()"], ["com.github.dockerjava.jaxrs.ApacheUnixSocket", "com.github.dockerjava.jaxrs.ApacheUnixSocket()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.connect(java.net.SocketAddress)"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.connect(java.net.SocketAddress, int)"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.bind(java.net.SocketAddress)"], ["java.net.InetAddress", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getInetAddress()"], ["java.net.InetAddress", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getLocalAddress()"], ["int", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getPort()"], ["int", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getLocalPort()"], ["java.net.SocketAddress", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getRemoteSocketAddress()"], ["java.net.SocketAddress", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getLocalSocketAddress()"], ["java.nio.channels.SocketChannel", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getChannel()"], ["java.io.InputStream", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getInputStream()"], ["java.io.OutputStream", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getOutputStream()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setTcpNoDelay(boolean)"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getTcpNoDelay()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setSoLinger(boolean, int)"], ["int", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getSoLinger()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.sendUrgentData(int)"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setOOBInline(boolean)"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getOOBInline()"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.void setSoTimeout(int)"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.int getSoTimeout()"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.void setSendBufferSize(int)"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.int getSendBufferSize()"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.void setReceiveBufferSize(int)"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.int getReceiveBufferSize()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setKeepAlive(boolean)"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getKeepAlive()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setTrafficClass(int)"], ["int", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getTrafficClass()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setReuseAddress(boolean)"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getReuseAddress()"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.void close()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.shutdownInput()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.shutdownOutput()"], ["java.lang.String", "com.github.dockerjava.jaxrs.ApacheUnixSocket.toString()"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.isConnected()"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.isBound()"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.isClosed()"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.isInputShutdown()"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.isOutputShutdown()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setPerformancePreferences(int, int, int)"], ["com.github.dockerjava.jaxrs.DockerCmdExecFactoryImpl", "com.github.dockerjava.jaxrs.DockerCmdExecFactoryImpl()"], ["com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["java.lang.Void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec.exec(CMD_T, com.github.dockerjava.api.async.ResultCallback<A_RES_T>)"], ["java.lang.Void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec.exec(com.github.dockerjava.api.command.DockerCmd, com.github.dockerjava.api.async.ResultCallback)"], ["com.github.dockerjava.jaxrs.PullImageCmdExec", "com.github.dockerjava.jaxrs.PullImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.RenameContainerCmdExec", "com.github.dockerjava.jaxrs.RenameContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.RemoveContainerCmdExec", "com.github.dockerjava.jaxrs.RemoveContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.model.Network$Ipam$Config", "com.github.dockerjava.api.model.Network$Ipam$Config()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$Ipam$Config.getSubnet()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$Ipam$Config.getIpRange()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$Ipam$Config.getGateway()"], ["com.github.dockerjava.api.model.Network$Ipam$Config", "com.github.dockerjava.api.model.Network$Ipam$Config.withSubnet(java.lang.String)"], ["com.github.dockerjava.api.model.Network$Ipam$Config", "com.github.dockerjava.api.model.Network$Ipam$Config.withIpRange(java.lang.String)"], ["com.github.dockerjava.api.model.Network$Ipam$Config", "com.github.dockerjava.api.model.Network$Ipam$Config.withGateway(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Network$Ipam$Config.getNetworkID()"], ["void", "com.github.dockerjava.api.model.Network$Ipam$Config.setNetworkID(java.lang.String)"], ["com.github.dockerjava.api.model.ExposedPort$Serializer", "com.github.dockerjava.api.model.ExposedPort$Serializer()"], ["void", "com.github.dockerjava.api.model.ExposedPort$Serializer.serialize(com.github.dockerjava.api.model.ExposedPort, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.dockerjava.api.model.ExposedPort$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.dockerjava.api.model.LogConfig$LoggingType$Deserializer", "com.github.dockerjava.api.model.LogConfig$LoggingType$Deserializer()"], ["com.github.dockerjava.api.model.LogConfig$LoggingType", "com.github.dockerjava.api.model.LogConfig$LoggingType$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["java.lang.Object", "com.github.dockerjava.api.model.LogConfig$LoggingType$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withAliases(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withAliases(java.lang.String...)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getEndpointId()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withEndpointId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getGateway()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withGateway(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getGlobalIPv6Address()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withGlobalIPv6Address(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.api.model.ContainerNetwork.getGlobalIPv6PrefixLen()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withGlobalIPv6PrefixLen(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getIpAddress()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withIpv4Address(java.lang.String)"], ["com.github.dockerjava.api.model.ContainerNetwork$Ipam", "com.github.dockerjava.api.model.ContainerNetwork.getIpamConfig()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withIpamConfig(com.github.dockerjava.api.model.ContainerNetwork$Ipam)"], ["java.lang.Integer", "com.github.dockerjava.api.model.ContainerNetwork.getIpPrefixLen()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withIpPrefixLen(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getIpV6Gateway()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withIpV6Gateway(java.lang.String)"], ["com.github.dockerjava.api.model.Link[]", "com.github.dockerjava.api.model.ContainerNetwork.getLinks()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withLinks(java.util.List<com.github.dockerjava.api.model.Link>)"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withLinks(com.github.dockerjava.api.model.Link...)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getMacAddress()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withMacAddress(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getNetworkID()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withNetworkID(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.toString()"], ["boolean", "com.github.dockerjava.api.model.ContainerNetwork.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.ContainerNetwork.hashCode()"], ["com.github.dockerjava.api.model.PullResponseItem", "com.github.dockerjava.api.model.PullResponseItem()"], ["boolean", "com.github.dockerjava.api.model.PullResponseItem.isPullSuccessIndicated()"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort(int, com.github.dockerjava.api.model.InternetProtocol)"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort(int)"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort(java.lang.String, int)"], ["com.github.dockerjava.api.model.InternetProtocol", "com.github.dockerjava.api.model.ExposedPort.getProtocol()"], ["java.lang.String", "com.github.dockerjava.api.model.ExposedPort.getScheme()"], ["int", "com.github.dockerjava.api.model.ExposedPort.getPort()"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort.tcp(int)"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort.udp(int)"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort.parse(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ExposedPort.toString()"], ["boolean", "com.github.dockerjava.api.model.ExposedPort.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.ExposedPort.hashCode()"], ["com.github.dockerjava.api.model.WaitResponse", "com.github.dockerjava.api.model.WaitResponse()"], ["java.lang.Integer", "com.github.dockerjava.api.model.WaitResponse.getStatusCode()"], ["com.github.dockerjava.api.model.Network", "com.github.dockerjava.api.model.Network()"], ["java.lang.String", "com.github.dockerjava.api.model.Network.getId()"], ["java.lang.String", "com.github.dockerjava.api.model.Network.getName()"], ["java.lang.String", "com.github.dockerjava.api.model.Network.getScope()"], ["java.lang.String", "com.github.dockerjava.api.model.Network.getDriver()"], ["com.github.dockerjava.api.model.Network$Ipam", "com.github.dockerjava.api.model.Network.getIpam()"], ["java.util.Map<java.lang.String, com.github.dockerjava.api.model.Network$ContainerNetworkConfig>", "com.github.dockerjava.api.model.Network.getContainers()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.Network.getOptions()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Network.isAttachable()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.Network.getLabels()"], ["java.lang.String", "com.github.dockerjava.api.model.Network.toString()"], ["com.github.dockerjava.api.model.ExposedPorts$Deserializer", "com.github.dockerjava.api.model.ExposedPorts$Deserializer()"], ["com.github.dockerjava.api.model.ExposedPorts", "com.github.dockerjava.api.model.ExposedPorts$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["java.lang.Object", "com.github.dockerjava.api.model.ExposedPorts$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.dockerjava.api.model.PushResponseItem", "com.github.dockerjava.api.model.PushResponseItem()"], ["com.github.dockerjava.api.model.Volumes", "com.github.dockerjava.api.model.Volumes(com.github.dockerjava.api.model.Volume...)"], ["com.github.dockerjava.api.model.Volumes", "com.github.dockerjava.api.model.Volumes(java.util.List<com.github.dockerjava.api.model.Volume>)"], ["com.github.dockerjava.api.model.Volume[]", "com.github.dockerjava.api.model.Volumes.getVolumes()"], ["com.github.dockerjava.api.model.SELContext[]", "com.github.dockerjava.api.model.SELContext.values()"], ["com.github.dockerjava.api.model.SELContext", "com.github.dockerjava.api.model.SELContext.valueOf(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.SELContext.toString()"], ["com.github.dockerjava.api.model.SELContext", "com.github.dockerjava.api.model.SELContext.fromString(java.lang.String)"], ["com.github.dockerjava.api.model.Network$Ipam", "com.github.dockerjava.api.model.Network$Ipam()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$Ipam.getDriver()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.Network$Ipam.getOptions()"], ["com.github.dockerjava.api.model.Network$Ipam", "com.github.dockerjava.api.model.Network$Ipam.withConfig(java.util.List<com.github.dockerjava.api.model.Network$Ipam$Config>)"], ["com.github.dockerjava.api.model.Network$Ipam", "com.github.dockerjava.api.model.Network$Ipam.withConfig(com.github.dockerjava.api.model.Network$Ipam$Config...)"], ["java.lang.String", "com.github.dockerjava.api.model.Network$Ipam.toString()"], ["com.github.dockerjava.api.model.SearchItem", "com.github.dockerjava.api.model.SearchItem()"], ["java.lang.Integer", "com.github.dockerjava.api.model.SearchItem.getStarCount()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.SearchItem.isOfficial()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.SearchItem.isTrusted()"], ["java.lang.String", "com.github.dockerjava.api.model.SearchItem.getName()"], ["java.lang.String", "com.github.dockerjava.api.model.SearchItem.getDescription()"], ["java.lang.String", "com.github.dockerjava.api.model.SearchItem.toString()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.RestartPolicy()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.RestartPolicy.noRestart()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.RestartPolicy.alwaysRestart()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.RestartPolicy.onFailureRestart(int)"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.RestartPolicy.unlessStoppedRestart()"], ["java.lang.Integer", "com.github.dockerjava.api.model.RestartPolicy.getMaximumRetryCount()"], ["java.lang.String", "com.github.dockerjava.api.model.RestartPolicy.getName()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.RestartPolicy.parse(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.RestartPolicy.toString()"], ["boolean", "com.github.dockerjava.api.model.RestartPolicy.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.RestartPolicy.hashCode()"], ["com.github.dockerjava.api.model.DriverStatus", "com.github.dockerjava.api.model.DriverStatus()"], ["java.lang.String", "com.github.dockerjava.api.model.DriverStatus.getRootDir()"], ["java.lang.Integer", "com.github.dockerjava.api.model.DriverStatus.getDirs()"], ["java.lang.String", "com.github.dockerjava.api.model.DriverStatus.toString()"], ["com.github.dockerjava.api.model.UpdateContainerResponse", "com.github.dockerjava.api.model.UpdateContainerResponse()"], ["com.github.dockerjava.api.model.EventActor", "com.github.dockerjava.api.model.EventActor()"], ["java.lang.String", "com.github.dockerjava.api.model.EventActor.getId()"], ["com.github.dockerjava.api.model.EventActor", "com.github.dockerjava.api.model.EventActor.withId(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.EventActor.getAttributes()"], ["com.github.dockerjava.api.model.EventActor", "com.github.dockerjava.api.model.EventActor.withAttributes(java.util.Map<java.lang.String, java.lang.String>)"], ["java.lang.String", "com.github.dockerjava.api.model.EventActor.toString()"], ["boolean", "com.github.dockerjava.api.model.EventActor.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.EventActor.hashCode()"], ["com.github.dockerjava.api.model.LogConfig$LoggingType$Serializer", "com.github.dockerjava.api.model.LogConfig$LoggingType$Serializer()"], ["void", "com.github.dockerjava.api.model.LogConfig$LoggingType$Serializer.serialize(com.github.dockerjava.api.model.LogConfig$LoggingType, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.dockerjava.api.model.LogConfig$LoggingType$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.dockerjava.api.model.InfoRegistryConfig", "com.github.dockerjava.api.model.InfoRegistryConfig()"], ["java.util.Map<java.lang.String, com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig>", "com.github.dockerjava.api.model.InfoRegistryConfig.getIndexConfigs()"], ["com.github.dockerjava.api.model.InfoRegistryConfig", "com.github.dockerjava.api.model.InfoRegistryConfig.withIndexConfigs(java.util.Map<java.lang.String, com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig>)"], ["com.github.dockerjava.api.model.InfoRegistryConfig", "com.github.dockerjava.api.model.InfoRegistryConfig.withInsecureRegistryCIDRs(java.util.List<java.lang.String>)"], ["java.lang.Object", "com.github.dockerjava.api.model.InfoRegistryConfig.getMirrors()"], ["com.github.dockerjava.api.model.InfoRegistryConfig", "com.github.dockerjava.api.model.InfoRegistryConfig.withMirrors(java.lang.Object)"], ["java.lang.String", "com.github.dockerjava.api.model.InfoRegistryConfig.toString()"], ["boolean", "com.github.dockerjava.api.model.InfoRegistryConfig.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.InfoRegistryConfig.hashCode()"], ["com.github.dockerjava.api.model.LxcConf", "com.github.dockerjava.api.model.LxcConf(java.lang.String, java.lang.String)"], ["com.github.dockerjava.api.model.LxcConf", "com.github.dockerjava.api.model.LxcConf()"], ["java.lang.String", "com.github.dockerjava.api.model.LxcConf.getKey()"], ["com.github.dockerjava.api.model.LxcConf", "com.github.dockerjava.api.model.LxcConf.setKey(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.LxcConf.getValue()"], ["com.github.dockerjava.api.model.LxcConf", "com.github.dockerjava.api.model.LxcConf.setValue(java.lang.String)"], ["com.github.dockerjava.api.model.VolumesRW$Serializer", "com.github.dockerjava.api.model.VolumesRW$Serializer()"], ["void", "com.github.dockerjava.api.model.VolumesRW$Serializer.serialize(com.github.dockerjava.api.model.VolumesRW, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.dockerjava.api.model.VolumesRW$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig()"], ["com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.withMirrors(java.util.List<java.lang.String>)"], ["java.lang.String", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.getName()"], ["com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.withName(java.lang.String)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.getOfficial()"], ["com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.withOfficial(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.getSecure()"], ["com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.withSecure(java.lang.Boolean)"], ["java.lang.String", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.toString()"], ["boolean", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.hashCode()"], ["com.github.dockerjava.api.model.Node", "com.github.dockerjava.api.model.Node()"], ["java.lang.String", "com.github.dockerjava.api.model.Node.getName()"], ["java.lang.String", "com.github.dockerjava.api.model.Node.getId()"], ["java.lang.String", "com.github.dockerjava.api.model.Node.getAddr()"], ["java.lang.String", "com.github.dockerjava.api.model.Node.getIp()"], ["com.github.dockerjava.api.model.VolumesFrom$Deserializer", "com.github.dockerjava.api.model.VolumesFrom$Deserializer()"], ["com.github.dockerjava.api.model.VolumesFrom", "com.github.dockerjava.api.model.VolumesFrom$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["java.lang.Object", "com.github.dockerjava.api.model.VolumesFrom$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.dockerjava.api.command.InspectContainerResponse", "com.github.dockerjava.api.command.InspectContainerResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getId()"], ["java.lang.Integer", "com.github.dockerjava.api.command.InspectContainerResponse.getSizeRootFs()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getCreated()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getPath()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getProcessLabel()"], ["java.lang.String[]", "com.github.dockerjava.api.command.InspectContainerResponse.getArgs()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.command.InspectContainerResponse.getConfig()"], ["com.github.dockerjava.api.command.InspectContainerResponse$ContainerState", "com.github.dockerjava.api.command.InspectContainerResponse.getState()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getImageId()"], ["com.github.dockerjava.api.model.NetworkSettings", "com.github.dockerjava.api.command.InspectContainerResponse.getNetworkSettings()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getResolvConfPath()"], ["com.github.dockerjava.api.model.VolumeBind[]", "com.github.dockerjava.api.command.InspectContainerResponse.getVolumes()"], ["com.github.dockerjava.api.model.VolumeRW[]", "com.github.dockerjava.api.command.InspectContainerResponse.getVolumesRW()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getHostnamePath()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getHostsPath()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getLogPath()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getName()"], ["java.lang.Integer", "com.github.dockerjava.api.command.InspectContainerResponse.getRestartCount()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getDriver()"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.command.InspectContainerResponse.getHostConfig()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getExecDriver()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getMountLabel()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.toString()"], ["com.github.dockerjava.api.command.HealthState", "com.github.dockerjava.api.command.HealthState()"], ["java.lang.String", "com.github.dockerjava.api.command.HealthState.getStatus()"], ["java.lang.Integer", "com.github.dockerjava.api.command.HealthState.getFailingStreak()"], ["io.netty.handler.codec.http.HttpRequest", "com.github.dockerjava.netty.InvocationBuilder$3.getHttpRequest(java.lang.String)"], ["io.netty.channel.epoll.EpollDomainSocketChannel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$UnixDomainSocketInitializer$1.newChannel()"], ["io.netty.channel.Channel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$UnixDomainSocketInitializer$1.newChannel()"], ["void", "com.github.dockerjava.netty.InvocationBuilder$5.operationComplete(io.netty.util.concurrent.Future<? super java.lang.Void>)"], ["io.netty.channel.EventLoopGroup", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$InetSocketInitializer.init(io.netty.bootstrap.Bootstrap, com.github.dockerjava.core.DockerClientConfig)"], ["io.netty.channel.socket.DuplexChannel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$InetSocketInitializer.connect(io.netty.bootstrap.Bootstrap)"], ["com.github.dockerjava.netty.handler.HttpResponseHandler", "com.github.dockerjava.netty.handler.HttpResponseHandler(com.github.dockerjava.netty.handler.HttpRequestProvider, com.github.dockerjava.api.async.ResultCallback<?>)"], ["com.github.dockerjava.netty.handler.FramedResponseStreamHandler", "com.github.dockerjava.netty.handler.FramedResponseStreamHandler(com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>)"], ["void", "com.github.dockerjava.netty.handler.FramedResponseStreamHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable)"], ["com.github.dockerjava.netty.handler.JsonRequestHandler", "com.github.dockerjava.netty.handler.JsonRequestHandler()"], ["io.netty.channel.socket.nio.NioSocketChannel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$InetSocketInitializer$1.newChannel()"], ["io.netty.channel.Channel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$InetSocketInitializer$1.newChannel()"], ["com.github.dockerjava.netty.InvocationBuilder$AsyncResultCallback", "com.github.dockerjava.netty.InvocationBuilder$AsyncResultCallback()"], ["void", "com.github.dockerjava.netty.InvocationBuilder$AsyncResultCallback.onNext(A_RES_T)"], ["void", "com.github.dockerjava.netty.InvocationBuilder$AsyncResultCallback.close()"], ["A_RES_T", "com.github.dockerjava.netty.InvocationBuilder$AsyncResultCallback.awaitResult()"], ["com.github.dockerjava.netty.WebTarget", "com.github.dockerjava.netty.WebTarget(com.github.dockerjava.netty.ChannelProvider)"], ["com.github.dockerjava.netty.WebTarget", "com.github.dockerjava.netty.WebTarget.path(java.lang.String...)"], ["com.github.dockerjava.netty.InvocationBuilder", "com.github.dockerjava.netty.WebTarget.request()"], ["com.github.dockerjava.netty.WebTarget", "com.github.dockerjava.netty.WebTarget.resolveTemplate(java.lang.String, java.lang.Object)"], ["com.github.dockerjava.netty.WebTarget", "com.github.dockerjava.netty.WebTarget.queryParam(java.lang.String, java.lang.Object)"], ["com.github.dockerjava.netty.WebTarget", "com.github.dockerjava.netty.WebTarget.queryParamsSet(java.lang.String, java.util.Set<?>)"], ["com.github.dockerjava.netty.WebTarget", "com.github.dockerjava.netty.WebTarget.queryParamsJsonMap(java.lang.String, java.util.Map<java.lang.String, java.lang.String>)"], ["boolean", "com.github.dockerjava.netty.WebTarget.equals(java.lang.Object)"], ["int", "com.github.dockerjava.netty.WebTarget.hashCode()"], ["io.netty.handler.codec.http.HttpRequest", "com.github.dockerjava.netty.InvocationBuilder$2.getHttpRequest(java.lang.String)"], ["io.netty.handler.codec.http.HttpRequest", "com.github.dockerjava.netty.InvocationBuilder$1.getHttpRequest(java.lang.String)"], ["com.github.dockerjava.netty.InvocationBuilder$ResponseCallback", "com.github.dockerjava.netty.InvocationBuilder$ResponseCallback(com.github.dockerjava.netty.InvocationBuilder)"], ["T", "com.github.dockerjava.netty.InvocationBuilder$ResponseCallback.awaitResult()"], ["void", "com.github.dockerjava.netty.InvocationBuilder$ResponseCallback.onNext(T)"], ["com.github.dockerjava.netty.exec.ListImagesCmdExec", "com.github.dockerjava.netty.exec.ListImagesCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.ListContainersCmdExec", "com.github.dockerjava.netty.exec.ListContainersCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.RestartContainerCmdExec", "com.github.dockerjava.netty.exec.RestartContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.ListNetworksCmdExec", "com.github.dockerjava.netty.exec.ListNetworksCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.InspectImageCmdExec", "com.github.dockerjava.netty.exec.InspectImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.InspectContainerCmdExec", "com.github.dockerjava.netty.exec.InspectContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.AbstrSyncDockerCmdExec", "com.github.dockerjava.netty.exec.AbstrSyncDockerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["RES_T", "com.github.dockerjava.netty.exec.AbstrSyncDockerCmdExec.exec(CMD_T)"], ["com.github.dockerjava.netty.exec.ExecStartCmdExec", "com.github.dockerjava.netty.exec.ExecStartCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.CreateContainerCmdExec", "com.github.dockerjava.netty.exec.CreateContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.RemoveNetworkCmdExec", "com.github.dockerjava.netty.exec.RemoveNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec$1.close()"], ["void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec$1.onStart(java.io.Closeable)"], ["void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec$1.onNext(A_RES_T)"], ["void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec$1.onError(java.lang.Throwable)"], ["void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec$1.onComplete()"], ["com.github.dockerjava.netty.exec.InspectExecCmdExec", "com.github.dockerjava.netty.exec.InspectExecCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.PingCmdExec", "com.github.dockerjava.netty.exec.PingCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.LogContainerCmdExec", "com.github.dockerjava.netty.exec.LogContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.RemoveVolumeCmdExec", "com.github.dockerjava.netty.exec.RemoveVolumeCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.AbstrDockerCmdExec", "com.github.dockerjava.netty.exec.AbstrDockerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.PauseContainerCmdExec", "com.github.dockerjava.netty.exec.PauseContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.CreateVolumeCmdExec", "com.github.dockerjava.netty.exec.CreateVolumeCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.MediaType[]", "com.github.dockerjava.netty.MediaType.values()"], ["com.github.dockerjava.netty.MediaType", "com.github.dockerjava.netty.MediaType.valueOf(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.netty.MediaType.getMediaType()"], ["com.github.dockerjava.netty.InvocationBuilder", "com.github.dockerjava.netty.InvocationBuilder(com.github.dockerjava.netty.ChannelProvider, java.lang.String)"], ["com.github.dockerjava.netty.InvocationBuilder", "com.github.dockerjava.netty.InvocationBuilder.accept(com.github.dockerjava.netty.MediaType)"], ["com.github.dockerjava.netty.InvocationBuilder", "com.github.dockerjava.netty.InvocationBuilder.header(java.lang.String, java.lang.String)"], ["void", "com.github.dockerjava.netty.InvocationBuilder.delete()"], ["void", "com.github.dockerjava.netty.InvocationBuilder.get(com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>)"], ["<T> T", "com.github.dockerjava.netty.InvocationBuilder.get(com.fasterxml.jackson.core.type.TypeReference<T>)"], ["<T> void", "com.github.dockerjava.netty.InvocationBuilder.get(com.fasterxml.jackson.core.type.TypeReference<T>, com.github.dockerjava.api.async.ResultCallback<T>)"], ["java.io.InputStream", "com.github.dockerjava.netty.InvocationBuilder.post(java.lang.Object)"], ["void", "com.github.dockerjava.netty.InvocationBuilder.post(java.lang.Object, java.io.InputStream, com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>)"], ["<T> T", "com.github.dockerjava.netty.InvocationBuilder.post(java.lang.Object, com.fasterxml.jackson.core.type.TypeReference<T>)"], ["<T> void", "com.github.dockerjava.netty.InvocationBuilder.post(java.lang.Object, com.fasterxml.jackson.core.type.TypeReference<T>, com.github.dockerjava.api.async.ResultCallback<T>)"], ["<T> T", "com.github.dockerjava.netty.InvocationBuilder.post(com.fasterxml.jackson.core.type.TypeReference<T>, java.io.InputStream)"], ["<T> void", "com.github.dockerjava.netty.InvocationBuilder.post(com.fasterxml.jackson.core.type.TypeReference<T>, com.github.dockerjava.api.async.ResultCallback<T>, java.io.InputStream)"], ["void", "com.github.dockerjava.netty.InvocationBuilder.postStream(java.io.InputStream)"], ["java.io.InputStream", "com.github.dockerjava.netty.InvocationBuilder.get()"], ["void", "com.github.dockerjava.netty.InvocationBuilder.put(java.io.InputStream, com.github.dockerjava.netty.MediaType)"], ["java.lang.String", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add$1.apply(java.lang.String)"], ["java.lang.Object", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add$1.apply(java.lang.Object)"], ["java.security.cert.X509Certificate[]", "com.github.dockerjava.core.KeystoreSSLConfig$1.getAcceptedIssuers()"], ["void", "com.github.dockerjava.core.KeystoreSSLConfig$1.checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)"], ["void", "com.github.dockerjava.core.KeystoreSSLConfig$1.checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)"], ["com.github.dockerjava.core.command.PullImageResultCallback", "com.github.dockerjava.core.command.PullImageResultCallback()"], ["void", "com.github.dockerjava.core.command.PullImageResultCallback.onNext(com.github.dockerjava.api.model.PullResponseItem)"], ["void", "com.github.dockerjava.core.command.PullImageResultCallback.awaitSuccess()"], ["void", "com.github.dockerjava.core.command.PullImageResultCallback.onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.ConnectToNetworkCmdImpl", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.ConnectToNetworkCmd, java.lang.Void>)"], ["java.lang.String", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl.getNetworkId()"], ["java.lang.String", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl.getContainerId()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl.getContainerConfig()"], ["com.github.dockerjava.api.command.ConnectToNetworkCmd", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl.withNetworkId(java.lang.String)"], ["com.github.dockerjava.api.command.ConnectToNetworkCmd", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.ConnectToNetworkCmd", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl.withContainerNetwork(com.github.dockerjava.api.model.ContainerNetwork)"], ["com.github.dockerjava.core.command.EventsCmdImpl", "com.github.dockerjava.core.command.EventsCmdImpl(com.github.dockerjava.api.command.EventsCmd$Exec)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withSince(java.lang.String)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withUntil(java.lang.String)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withContainerFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withImageFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withEventFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withLabelFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withLabelFilter(java.util.Map<java.lang.String, java.lang.String>)"], ["java.lang.String", "com.github.dockerjava.core.command.EventsCmdImpl.getSince()"], ["java.lang.String", "com.github.dockerjava.core.command.EventsCmdImpl.getUntil()"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.core.command.EventsCmdImpl.getFilters()"], ["com.github.dockerjava.core.command.ExecStartResultCallback", "com.github.dockerjava.core.command.ExecStartResultCallback(java.io.OutputStream, java.io.OutputStream)"], ["com.github.dockerjava.core.command.ExecStartResultCallback", "com.github.dockerjava.core.command.ExecStartResultCallback()"], ["void", "com.github.dockerjava.core.command.ExecStartResultCallback.onNext(com.github.dockerjava.api.model.Frame)"], ["void", "com.github.dockerjava.core.command.ExecStartResultCallback.onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.ContainerDiffCmdImpl", "com.github.dockerjava.core.command.ContainerDiffCmdImpl(com.github.dockerjava.api.command.ContainerDiffCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.ContainerDiffCmdImpl.getContainerId()"], ["com.github.dockerjava.core.command.ContainerDiffCmdImpl", "com.github.dockerjava.core.command.ContainerDiffCmdImpl.withContainerId(java.lang.String)"], ["java.lang.Object", "com.github.dockerjava.core.command.ContainerDiffCmdImpl.exec()"], ["com.github.dockerjava.api.command.ContainerDiffCmd", "com.github.dockerjava.core.command.ContainerDiffCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.core.command.LogContainerResultCallback", "com.github.dockerjava.core.command.LogContainerResultCallback()"], ["void", "com.github.dockerjava.core.command.LogContainerResultCallback.onNext(com.github.dockerjava.api.model.Frame)"], ["void", "com.github.dockerjava.core.command.LogContainerResultCallback.onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.InspectExecCmdImpl", "com.github.dockerjava.core.command.InspectExecCmdImpl(com.github.dockerjava.api.command.InspectExecCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.InspectExecCmdImpl.getExecId()"], ["com.github.dockerjava.api.command.InspectExecCmd", "com.github.dockerjava.core.command.InspectExecCmdImpl.withExecId(java.lang.String)"], ["com.github.dockerjava.api.command.InspectExecResponse", "com.github.dockerjava.core.command.InspectExecCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.InspectExecCmdImpl.exec()"], ["com.github.dockerjava.core.command.InpectNetworkCmdImpl", "com.github.dockerjava.core.command.InpectNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.InspectNetworkCmd, com.github.dockerjava.api.model.Network>)"], ["java.lang.String", "com.github.dockerjava.core.command.InpectNetworkCmdImpl.getNetworkId()"], ["com.github.dockerjava.api.command.InspectNetworkCmd", "com.github.dockerjava.core.command.InpectNetworkCmdImpl.withNetworkId(java.lang.String)"], ["com.github.dockerjava.api.model.Network", "com.github.dockerjava.core.command.InpectNetworkCmdImpl.exec()"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl(com.github.dockerjava.api.command.BuildImageCmd$Exec)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl(com.github.dockerjava.api.command.BuildImageCmd$Exec, java.io.File)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl(com.github.dockerjava.api.command.BuildImageCmd$Exec, java.io.InputStream)"], ["java.lang.String", "com.github.dockerjava.core.command.BuildImageCmdImpl.getTag()"], ["java.net.URI", "com.github.dockerjava.core.command.BuildImageCmdImpl.getRemote()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.BuildImageCmdImpl.hasNoCacheEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.BuildImageCmdImpl.hasRemoveEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.BuildImageCmdImpl.isForcerm()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.BuildImageCmdImpl.isQuiet()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.BuildImageCmdImpl.hasPullEnabled()"], ["java.lang.String", "com.github.dockerjava.core.command.BuildImageCmdImpl.getPathToDockerfile()"], ["java.lang.Long", "com.github.dockerjava.core.command.BuildImageCmdImpl.getMemory()"], ["java.lang.Long", "com.github.dockerjava.core.command.BuildImageCmdImpl.getMemswap()"], ["java.lang.String", "com.github.dockerjava.core.command.BuildImageCmdImpl.getCpushares()"], ["java.lang.String", "com.github.dockerjava.core.command.BuildImageCmdImpl.getCpusetcpus()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.BuildImageCmdImpl.getBuildArgs()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.BuildImageCmdImpl.getLabels()"], ["com.github.dockerjava.api.model.AuthConfigurations", "com.github.dockerjava.core.command.BuildImageCmdImpl.getBuildAuthConfigs()"], ["java.io.InputStream", "com.github.dockerjava.core.command.BuildImageCmdImpl.getTarInputStream()"], ["java.lang.Long", "com.github.dockerjava.core.command.BuildImageCmdImpl.getShmsize()"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withTag(java.lang.String)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withTags(java.util.Set<java.lang.String>)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withCacheFrom(java.util.Set<java.lang.String>)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withRemote(java.net.URI)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withNoCache(java.lang.Boolean)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withRemove(java.lang.Boolean)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withForcerm(java.lang.Boolean)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withQuiet(java.lang.Boolean)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withPull(java.lang.Boolean)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withMemory(java.lang.Long)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withMemswap(java.lang.Long)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withCpushares(java.lang.String)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withCpusetcpus(java.lang.String)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withBuildArg(java.lang.String, java.lang.String)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withBaseDirectory(java.io.File)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withDockerfile(java.io.File)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withDockerfilePath(java.lang.String)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withTarInputStream(java.io.InputStream)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withBuildAuthConfigs(com.github.dockerjava.api.model.AuthConfigurations)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withShmsize(java.lang.Long)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withLabels(java.util.Map<java.lang.String, java.lang.String>)"], ["void", "com.github.dockerjava.core.command.BuildImageCmdImpl.close()"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withTarInputStream(java.io.InputStream)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withPull(java.lang.Boolean)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withQuiet(java.lang.Boolean)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withRemove(java.lang.Boolean)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withNoCache(java.lang.Boolean)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withDockerfile(java.io.File)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withTag(java.lang.String)"], ["com.github.dockerjava.core.command.CreateNetworkCmdImpl", "com.github.dockerjava.core.command.CreateNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.CreateNetworkCmd, com.github.dockerjava.api.command.CreateNetworkResponse>)"], ["java.lang.String", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getName()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getDriver()"], ["com.github.dockerjava.api.model.Network$Ipam", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getIpam()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getOptions()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getCheckDuplicate()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getInternal()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getEnableIPv6()"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withName(java.lang.String)"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withDriver(java.lang.String)"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withIpam(com.github.dockerjava.api.model.Network$Ipam)"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withOptions(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withCheckDuplicate(boolean)"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withInternal(boolean)"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withEnableIpv6(boolean)"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getAttachable()"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withAttachable(java.lang.Boolean)"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getLabels()"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withLabels(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.core.command.AbstrAsyncDockerCmd", "com.github.dockerjava.core.command.AbstrAsyncDockerCmd(com.github.dockerjava.api.command.DockerCmdAsyncExec<CMD_T, A_RES_T>)"], ["<T extends com.github.dockerjava.api.async.ResultCallback<A_RES_T>> T", "com.github.dockerjava.core.command.AbstrAsyncDockerCmd.exec(T)"], ["void", "com.github.dockerjava.core.command.AbstrAsyncDockerCmd.close()"], ["com.github.dockerjava.core.command.ListImagesCmdImpl", "com.github.dockerjava.core.command.ListImagesCmdImpl(com.github.dockerjava.api.command.ListImagesCmd$Exec)"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.core.command.ListImagesCmdImpl.getFilters()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ListImagesCmdImpl.hasShowAllEnabled()"], ["com.github.dockerjava.api.command.ListImagesCmd", "com.github.dockerjava.core.command.ListImagesCmdImpl.withShowAll(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ListImagesCmd", "com.github.dockerjava.core.command.ListImagesCmdImpl.withDanglingFilter(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ListImagesCmd", "com.github.dockerjava.core.command.ListImagesCmdImpl.withLabelFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.ListImagesCmd", "com.github.dockerjava.core.command.ListImagesCmdImpl.withLabelFilter(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.command.ListImagesCmd", "com.github.dockerjava.core.command.ListImagesCmdImpl.withImageNameFilter(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.ListImagesCmdImpl.getImageNameFilter()"], ["java.lang.String", "com.github.dockerjava.core.command.ListImagesCmdImpl.toString()"], ["com.github.dockerjava.core.command.ListVolumesCmdImpl", "com.github.dockerjava.core.command.ListVolumesCmdImpl(com.github.dockerjava.api.command.ListVolumesCmd$Exec)"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.core.command.ListVolumesCmdImpl.getFilters()"], ["com.github.dockerjava.api.command.ListVolumesCmd", "com.github.dockerjava.core.command.ListVolumesCmdImpl.withDanglingFilter(java.lang.Boolean)"], ["com.github.dockerjava.core.command.PauseContainerCmdImpl", "com.github.dockerjava.core.command.PauseContainerCmdImpl(com.github.dockerjava.api.command.PauseContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.PauseContainerCmdImpl.getContainerId()"], ["com.github.dockerjava.api.command.PauseContainerCmd", "com.github.dockerjava.core.command.PauseContainerCmdImpl.withContainerId(java.lang.String)"], ["java.lang.Void", "com.github.dockerjava.core.command.PauseContainerCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.PauseContainerCmdImpl.exec()"], ["com.github.dockerjava.core.command.PushImageResultCallback", "com.github.dockerjava.core.command.PushImageResultCallback()"], ["void", "com.github.dockerjava.core.command.PushImageResultCallback.onNext(com.github.dockerjava.api.model.PushResponseItem)"], ["void", "com.github.dockerjava.core.command.PushImageResultCallback.awaitSuccess()"], ["void", "com.github.dockerjava.core.command.PushImageResultCallback.onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.ExecCreateCmdImpl", "com.github.dockerjava.core.command.ExecCreateCmdImpl(com.github.dockerjava.api.command.ExecCreateCmd$Exec, java.lang.String)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withAttachStdin(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withAttachStdout(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withAttachStderr(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withTty(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withUser(java.lang.String)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withCmd(java.lang.String...)"], ["java.lang.String", "com.github.dockerjava.core.command.ExecCreateCmdImpl.getContainerId()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ExecCreateCmdImpl.hasAttachStdinEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ExecCreateCmdImpl.hasAttachStdoutEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ExecCreateCmdImpl.hasAttachStderrEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ExecCreateCmdImpl.hasTtyEnabled()"], ["java.lang.String", "com.github.dockerjava.core.command.ExecCreateCmdImpl.getUser()"], ["com.github.dockerjava.api.command.ExecCreateCmdResponse", "com.github.dockerjava.core.command.ExecCreateCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.ExecCreateCmdImpl.exec()"], ["com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl(com.github.dockerjava.api.command.CopyArchiveFromContainerCmd$Exec, java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.getContainerId()"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.getResource()"], ["com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.withResource(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.getHostPath()"], ["com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.withHostPath(java.lang.String)"], ["java.io.InputStream", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.exec()"], ["com.github.dockerjava.api.command.CopyArchiveFromContainerCmd", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.withResource(java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveFromContainerCmd", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.withHostPath(java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveFromContainerCmd", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.DisconnectFromNetworkCmd, java.lang.Void>)"], ["java.lang.String", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl.getNetworkId()"], ["java.lang.String", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl.getContainerId()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl.getForce()"], ["com.github.dockerjava.api.command.DisconnectFromNetworkCmd", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl.withNetworkId(java.lang.String)"], ["com.github.dockerjava.api.command.DisconnectFromNetworkCmd", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.DisconnectFromNetworkCmd", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl.withForce(java.lang.Boolean)"], ["com.github.dockerjava.core.command.InspectContainerCmdImpl", "com.github.dockerjava.core.command.InspectContainerCmdImpl(com.github.dockerjava.api.command.InspectContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.InspectContainerCmdImpl.getContainerId()"], ["com.github.dockerjava.api.command.InspectContainerCmd", "com.github.dockerjava.core.command.InspectContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.InspectContainerCmd", "com.github.dockerjava.core.command.InspectContainerCmdImpl.withSize(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.core.command.InspectContainerCmdImpl.getSize()"], ["com.github.dockerjava.api.command.InspectContainerResponse", "com.github.dockerjava.core.command.InspectContainerCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.InspectContainerCmdImpl.exec()"], ["com.github.dockerjava.core.command.BuildImageResultCallback", "com.github.dockerjava.core.command.BuildImageResultCallback()"], ["void", "com.github.dockerjava.core.command.BuildImageResultCallback.onNext(com.github.dockerjava.api.model.BuildResponseItem)"], ["java.lang.String", "com.github.dockerjava.core.command.BuildImageResultCallback.awaitImageId()"], ["java.lang.String", "com.github.dockerjava.core.command.BuildImageResultCallback.awaitImageId(long, java.util.concurrent.TimeUnit)"], ["void", "com.github.dockerjava.core.command.BuildImageResultCallback.onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.FrameReader", "com.github.dockerjava.core.command.FrameReader(java.io.InputStream)"], ["com.github.dockerjava.api.model.Frame", "com.github.dockerjava.core.command.FrameReader.readFrame()"], ["void", "com.github.dockerjava.core.command.FrameReader.close()"], ["com.github.dockerjava.core.DockerClientImpl", "com.github.dockerjava.core.DockerClientImpl.getInstance()"], ["com.github.dockerjava.core.DockerClientImpl", "com.github.dockerjava.core.DockerClientImpl.getInstance(com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.core.DockerClientImpl", "com.github.dockerjava.core.DockerClientImpl.getInstance(java.lang.String)"], ["com.github.dockerjava.core.DockerClientImpl", "com.github.dockerjava.core.DockerClientImpl.withDockerCmdExecFactory(com.github.dockerjava.api.command.DockerCmdExecFactory)"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.core.DockerClientImpl.authConfig()"], ["com.github.dockerjava.api.command.AuthCmd", "com.github.dockerjava.core.DockerClientImpl.authCmd()"], ["com.github.dockerjava.api.command.InfoCmd", "com.github.dockerjava.core.DockerClientImpl.infoCmd()"], ["com.github.dockerjava.api.command.PingCmd", "com.github.dockerjava.core.DockerClientImpl.pingCmd()"], ["com.github.dockerjava.api.command.VersionCmd", "com.github.dockerjava.core.DockerClientImpl.versionCmd()"], ["com.github.dockerjava.api.command.PullImageCmd", "com.github.dockerjava.core.DockerClientImpl.pullImageCmd(java.lang.String)"], ["com.github.dockerjava.api.command.PushImageCmd", "com.github.dockerjava.core.DockerClientImpl.pushImageCmd(java.lang.String)"], ["com.github.dockerjava.api.command.PushImageCmd", "com.github.dockerjava.core.DockerClientImpl.pushImageCmd(com.github.dockerjava.api.model.Identifier)"], ["com.github.dockerjava.api.command.SaveImageCmd", "com.github.dockerjava.core.DockerClientImpl.saveImageCmd(java.lang.String)"], ["com.github.dockerjava.api.command.CreateImageCmd", "com.github.dockerjava.core.DockerClientImpl.createImageCmd(java.lang.String, java.io.InputStream)"], ["com.github.dockerjava.api.command.LoadImageCmd", "com.github.dockerjava.core.DockerClientImpl.loadImageCmd(java.io.InputStream)"], ["com.github.dockerjava.api.command.SearchImagesCmd", "com.github.dockerjava.core.DockerClientImpl.searchImagesCmd(java.lang.String)"], ["com.github.dockerjava.api.command.RemoveImageCmd", "com.github.dockerjava.core.DockerClientImpl.removeImageCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ListImagesCmd", "com.github.dockerjava.core.DockerClientImpl.listImagesCmd()"], ["com.github.dockerjava.api.command.InspectImageCmd", "com.github.dockerjava.core.DockerClientImpl.inspectImageCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.DockerClientImpl.listContainersCmd()"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.DockerClientImpl.createContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.StartContainerCmd", "com.github.dockerjava.core.DockerClientImpl.startContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.InspectContainerCmd", "com.github.dockerjava.core.DockerClientImpl.inspectContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.DockerClientImpl.execCreateCmd(java.lang.String)"], ["com.github.dockerjava.api.command.RemoveContainerCmd", "com.github.dockerjava.core.DockerClientImpl.removeContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.WaitContainerCmd", "com.github.dockerjava.core.DockerClientImpl.waitContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.DockerClientImpl.attachContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ExecStartCmd", "com.github.dockerjava.core.DockerClientImpl.execStartCmd(java.lang.String)"], ["com.github.dockerjava.api.command.InspectExecCmd", "com.github.dockerjava.core.DockerClientImpl.inspectExecCmd(java.lang.String)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.DockerClientImpl.logContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.CopyFileFromContainerCmd", "com.github.dockerjava.core.DockerClientImpl.copyFileFromContainerCmd(java.lang.String, java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveFromContainerCmd", "com.github.dockerjava.core.DockerClientImpl.copyArchiveFromContainerCmd(java.lang.String, java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.DockerClientImpl.copyArchiveToContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ContainerDiffCmd", "com.github.dockerjava.core.DockerClientImpl.containerDiffCmd(java.lang.String)"], ["com.github.dockerjava.api.command.StopContainerCmd", "com.github.dockerjava.core.DockerClientImpl.stopContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.KillContainerCmd", "com.github.dockerjava.core.DockerClientImpl.killContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.DockerClientImpl.updateContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.RenameContainerCmd", "com.github.dockerjava.core.DockerClientImpl.renameContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.RestartContainerCmd", "com.github.dockerjava.core.DockerClientImpl.restartContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.DockerClientImpl.commitCmd(java.lang.String)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.DockerClientImpl.buildImageCmd()"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.DockerClientImpl.buildImageCmd(java.io.File)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.DockerClientImpl.buildImageCmd(java.io.InputStream)"], ["com.github.dockerjava.api.command.TopContainerCmd", "com.github.dockerjava.core.DockerClientImpl.topContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.TagImageCmd", "com.github.dockerjava.core.DockerClientImpl.tagImageCmd(java.lang.String, java.lang.String, java.lang.String)"], ["com.github.dockerjava.api.command.PauseContainerCmd", "com.github.dockerjava.core.DockerClientImpl.pauseContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.UnpauseContainerCmd", "com.github.dockerjava.core.DockerClientImpl.unpauseContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.DockerClientImpl.eventsCmd()"], ["com.github.dockerjava.api.command.StatsCmd", "com.github.dockerjava.core.DockerClientImpl.statsCmd(java.lang.String)"], ["com.github.dockerjava.api.command.CreateVolumeCmd", "com.github.dockerjava.core.DockerClientImpl.createVolumeCmd()"], ["com.github.dockerjava.api.command.InspectVolumeCmd", "com.github.dockerjava.core.DockerClientImpl.inspectVolumeCmd(java.lang.String)"], ["com.github.dockerjava.api.command.RemoveVolumeCmd", "com.github.dockerjava.core.DockerClientImpl.removeVolumeCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ListVolumesCmd", "com.github.dockerjava.core.DockerClientImpl.listVolumesCmd()"], ["com.github.dockerjava.api.command.ListNetworksCmd", "com.github.dockerjava.core.DockerClientImpl.listNetworksCmd()"], ["com.github.dockerjava.api.command.InspectNetworkCmd", "com.github.dockerjava.core.DockerClientImpl.inspectNetworkCmd()"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.DockerClientImpl.createNetworkCmd()"], ["com.github.dockerjava.api.command.RemoveNetworkCmd", "com.github.dockerjava.core.DockerClientImpl.removeNetworkCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ConnectToNetworkCmd", "com.github.dockerjava.core.DockerClientImpl.connectToNetworkCmd()"], ["com.github.dockerjava.api.command.DisconnectFromNetworkCmd", "com.github.dockerjava.core.DockerClientImpl.disconnectFromNetworkCmd()"], ["void", "com.github.dockerjava.core.DockerClientImpl.close()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$5.run()"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig()"], ["com.github.dockerjava.api.model.Bind[]", "com.github.dockerjava.api.model.HostConfig.getBinds()"], ["java.lang.Integer", "com.github.dockerjava.api.model.HostConfig.getBlkioWeight()"], ["com.github.dockerjava.api.model.Capability[]", "com.github.dockerjava.api.model.HostConfig.getCapAdd()"], ["com.github.dockerjava.api.model.Capability[]", "com.github.dockerjava.api.model.HostConfig.getCapDrop()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getContainerIDFile()"], ["java.lang.Integer", "com.github.dockerjava.api.model.HostConfig.getCpuPeriod()"], ["java.lang.Integer", "com.github.dockerjava.api.model.HostConfig.getCpuShares()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getCpusetCpus()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getCpusetMems()"], ["com.github.dockerjava.api.model.Device[]", "com.github.dockerjava.api.model.HostConfig.getDevices()"], ["java.lang.String[]", "com.github.dockerjava.api.model.HostConfig.getDns()"], ["java.lang.String[]", "com.github.dockerjava.api.model.HostConfig.getDnsSearch()"], ["java.lang.String[]", "com.github.dockerjava.api.model.HostConfig.getExtraHosts()"], ["com.github.dockerjava.api.model.Link[]", "com.github.dockerjava.api.model.HostConfig.getLinks()"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.api.model.HostConfig.getLogConfig()"], ["com.github.dockerjava.api.model.LxcConf[]", "com.github.dockerjava.api.model.HostConfig.getLxcConf()"], ["java.lang.Long", "com.github.dockerjava.api.model.HostConfig.getMemory()"], ["java.lang.Long", "com.github.dockerjava.api.model.HostConfig.getMemorySwap()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getNetworkMode()"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.api.model.HostConfig.getPortBindings()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.HostConfig.getRestartPolicy()"], ["com.github.dockerjava.api.model.Ulimit[]", "com.github.dockerjava.api.model.HostConfig.getUlimits()"], ["com.github.dockerjava.api.model.VolumesFrom[]", "com.github.dockerjava.api.model.HostConfig.getVolumesFrom()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getPidMode()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.HostConfig.getOomScoreAdj()"], ["java.lang.Integer", "com.github.dockerjava.api.model.HostConfig.getCpuQuota()"], ["java.lang.Long", "com.github.dockerjava.api.model.HostConfig.getKernelMemory()"], ["java.lang.Long", "com.github.dockerjava.api.model.HostConfig.getMemoryReservation()"], ["java.lang.Integer", "com.github.dockerjava.api.model.HostConfig.getMemorySwappiness()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.HostConfig.getOomKillDisable()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getCgroupParent()"], ["java.lang.Long", "com.github.dockerjava.api.model.HostConfig.getShmSize()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getVolumeDriver()"], ["java.lang.Long", "com.github.dockerjava.api.model.HostConfig.getPidsLimit()"], ["boolean", "com.github.dockerjava.api.model.HostConfig.isUserDefinedNetwork()"], ["void", "com.github.dockerjava.api.model.HostConfig.setBinds(com.github.dockerjava.api.model.Bind...)"], ["void", "com.github.dockerjava.api.model.HostConfig.setLinks(com.github.dockerjava.api.model.Link...)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBinds(com.github.dockerjava.api.model.Binds)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBlkioDeviceReadBps(java.util.List<java.lang.Object>)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBlkioDeviceReadIOps(java.util.List<java.lang.Object>)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBlkioDeviceWriteBps(java.util.List<java.lang.Object>)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBlkioDeviceWriteIOps(java.util.List<java.lang.Object>)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBlkioWeight(java.lang.Integer)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBlkioWeightDevice(java.util.List<java.lang.Object>)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCapAdd(com.github.dockerjava.api.model.Capability[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCapDrop(com.github.dockerjava.api.model.Capability[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCgroupParent(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withContainerIDFile(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCpuPeriod(java.lang.Integer)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCpuQuota(java.lang.Integer)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCpusetCpus(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCpusetMems(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCpuShares(java.lang.Integer)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withDevices(com.github.dockerjava.api.model.Device[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withDns(java.lang.String[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withDnsSearch(java.lang.String[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withExtraHosts(java.lang.String[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withKernelMemory(java.lang.Long)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withLinks(com.github.dockerjava.api.model.Links)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withLogConfig(com.github.dockerjava.api.model.LogConfig)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withLxcConf(com.github.dockerjava.api.model.LxcConf[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withMemory(java.lang.Long)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withMemoryReservation(java.lang.Long)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withMemorySwap(java.lang.Long)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withMemorySwappiness(java.lang.Integer)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withNetworkMode(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withOomKillDisable(java.lang.Boolean)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withOomScoreAdj(java.lang.Boolean)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withPidMode(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withPortBindings(com.github.dockerjava.api.model.Ports)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.HostConfig.getPrivileged()"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withPrivileged(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.HostConfig.getPublishAllPorts()"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withPublishAllPorts(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.HostConfig.getReadonlyRootfs()"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withReadonlyRootfs(java.lang.Boolean)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withRestartPolicy(com.github.dockerjava.api.model.RestartPolicy)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withSecurityOpts(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withShmSize(java.lang.Long)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withUlimits(com.github.dockerjava.api.model.Ulimit[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withVolumeDriver(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withVolumesFrom(com.github.dockerjava.api.model.VolumesFrom[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withPidsLimit(java.lang.Long)"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.toString()"], ["boolean", "com.github.dockerjava.api.model.HostConfig.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.HostConfig.hashCode()"], ["com.github.dockerjava.api.model.ContainerNetwork$Ipam", "com.github.dockerjava.api.model.ContainerNetwork$Ipam()"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork$Ipam.getIpv4Address()"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork$Ipam.getIpv6Address()"], ["com.github.dockerjava.api.model.ContainerNetwork$Ipam", "com.github.dockerjava.api.model.ContainerNetwork$Ipam.withIpv4Address(java.lang.String)"], ["com.github.dockerjava.api.model.ContainerNetwork$Ipam", "com.github.dockerjava.api.model.ContainerNetwork$Ipam.withIpv6Address(java.lang.String)"], ["com.github.dockerjava.api.model.Version", "com.github.dockerjava.api.model.Version()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getVersion()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getGitCommit()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getGoVersion()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getKernelVersion()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getArch()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getOperatingSystem()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getApiVersion()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getBuildTime()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Version.getExperimental()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.toString()"], ["boolean", "com.github.dockerjava.api.model.Version.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Version.hashCode()"], ["com.github.dockerjava.api.exception.NotAcceptableException", "com.github.dockerjava.api.exception.NotAcceptableException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.NotAcceptableException", "com.github.dockerjava.api.exception.NotAcceptableException(java.lang.String)"], ["com.github.dockerjava.api.exception.NotAcceptableException", "com.github.dockerjava.api.exception.NotAcceptableException(java.lang.Throwable)"], ["com.github.dockerjava.api.exception.UnauthorizedException", "com.github.dockerjava.api.exception.UnauthorizedException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.UnauthorizedException", "com.github.dockerjava.api.exception.UnauthorizedException(java.lang.String)"], ["com.github.dockerjava.api.exception.UnauthorizedException", "com.github.dockerjava.api.exception.UnauthorizedException(java.lang.Throwable)"], ["com.github.dockerjava.api.exception.ConflictException", "com.github.dockerjava.api.exception.ConflictException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.ConflictException", "com.github.dockerjava.api.exception.ConflictException(java.lang.String)"], ["com.github.dockerjava.api.exception.ConflictException", "com.github.dockerjava.api.exception.ConflictException(java.lang.Throwable)"], ["com.github.dockerjava.api.exception.BadRequestException", "com.github.dockerjava.api.exception.BadRequestException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.BadRequestException", "com.github.dockerjava.api.exception.BadRequestException(java.lang.String)"], ["com.github.dockerjava.api.exception.BadRequestException", "com.github.dockerjava.api.exception.BadRequestException(java.lang.Throwable)"], ["com.github.dockerjava.api.exception.NotModifiedException", "com.github.dockerjava.api.exception.NotModifiedException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.NotModifiedException", "com.github.dockerjava.api.exception.NotModifiedException(java.lang.String)"], ["com.github.dockerjava.api.exception.NotModifiedException", "com.github.dockerjava.api.exception.NotModifiedException(java.lang.Throwable)"], ["com.github.dockerjava.api.exception.DockerClientException", "com.github.dockerjava.api.exception.DockerClientException(java.lang.String)"], ["com.github.dockerjava.api.exception.DockerClientException", "com.github.dockerjava.api.exception.DockerClientException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.NotFoundException", "com.github.dockerjava.api.exception.NotFoundException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.NotFoundException", "com.github.dockerjava.api.exception.NotFoundException(java.lang.String)"], ["com.github.dockerjava.api.exception.NotFoundException", "com.github.dockerjava.api.exception.NotFoundException(java.lang.Throwable)"], ["java.lang.String", "org.newsclub.net.unix.AFUNIXSocketImpl.toString()"], ["java.lang.Object", "org.newsclub.net.unix.AFUNIXSocketImpl.getOption(int)"], ["void", "org.newsclub.net.unix.AFUNIXSocketImpl.setOption(int, java.lang.Object)"], ["com.github.dockerjava.api.model.PropagationMode[]", "com.github.dockerjava.api.model.PropagationMode.values()"], ["com.github.dockerjava.api.model.PropagationMode", "com.github.dockerjava.api.model.PropagationMode.valueOf(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.PropagationMode.toString()"], ["com.github.dockerjava.api.model.PropagationMode", "com.github.dockerjava.api.model.PropagationMode.fromString(java.lang.String)"], ["com.github.dockerjava.api.model.Volume", "com.github.dockerjava.api.model.Volume(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Volume.getPath()"], ["java.lang.String", "com.github.dockerjava.api.model.Volume.toString()"], ["boolean", "com.github.dockerjava.api.model.Volume.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Volume.hashCode()"], ["com.github.dockerjava.api.model.Links$Deserializer", "com.github.dockerjava.api.model.Links$Deserializer()"], ["com.github.dockerjava.api.model.Links", "com.github.dockerjava.api.model.Links$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["java.lang.Object", "com.github.dockerjava.api.model.Links$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.dockerjava.api.model.VolumesFrom$Serializer", "com.github.dockerjava.api.model.VolumesFrom$Serializer()"], ["void", "com.github.dockerjava.api.model.VolumesFrom$Serializer.serialize(com.github.dockerjava.api.model.VolumesFrom, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.dockerjava.api.model.VolumesFrom$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.dockerjava.api.model.VolumeBind", "com.github.dockerjava.api.model.VolumeBind(java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.VolumeBind.getContainerPath()"], ["java.lang.String", "com.github.dockerjava.api.model.VolumeBind.getHostPath()"], ["java.lang.String", "com.github.dockerjava.api.model.VolumeBind.toString()"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume)"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, java.lang.Boolean)"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode)"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode, com.github.dockerjava.api.model.SELContext)"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode, com.github.dockerjava.api.model.SELContext, java.lang.Boolean)"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode, com.github.dockerjava.api.model.SELContext, java.lang.Boolean, com.github.dockerjava.api.model.PropagationMode)"], ["java.lang.String", "com.github.dockerjava.api.model.Bind.getPath()"], ["com.github.dockerjava.api.model.Volume", "com.github.dockerjava.api.model.Bind.getVolume()"], ["com.github.dockerjava.api.model.AccessMode", "com.github.dockerjava.api.model.Bind.getAccessMode()"], ["com.github.dockerjava.api.model.SELContext", "com.github.dockerjava.api.model.Bind.getSecMode()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Bind.getNoCopy()"], ["com.github.dockerjava.api.model.PropagationMode", "com.github.dockerjava.api.model.Bind.getPropagationMode()"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind.parse(java.lang.String)"], ["boolean", "com.github.dockerjava.api.model.Bind.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Bind.hashCode()"], ["java.lang.String", "com.github.dockerjava.api.model.Bind.toString()"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.bindPortSpec(java.lang.String)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.bindIp(java.lang.String)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.bindIpAndPort(java.lang.String, int)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.bindIpAndPortRange(java.lang.String, int, int)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.bindPortRange(int, int)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.bindPort(int)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.empty()"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding(java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Ports$Binding.getHostIp()"], ["java.lang.String", "com.github.dockerjava.api.model.Ports$Binding.getHostPortSpec()"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.parse(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Ports$Binding.toString()"], ["boolean", "com.github.dockerjava.api.model.Ports$Binding.equals(java.lang.Object)"], ["com.github.dockerjava.api.command.CreateNetworkResponse", "com.github.dockerjava.api.command.CreateNetworkResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateNetworkResponse.getId()"], ["java.lang.String[]", "com.github.dockerjava.api.command.CreateNetworkResponse.getWarnings()"], ["void", "com.github.dockerjava.api.command.CreateNetworkResponse.setId(java.lang.String)"], ["void", "com.github.dockerjava.api.command.CreateNetworkResponse.setWarnings(java.lang.String[])"], ["java.lang.String", "com.github.dockerjava.api.command.CreateNetworkResponse.toString()"], ["com.github.dockerjava.api.command.ListVolumesResponse", "com.github.dockerjava.api.command.ListVolumesResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.ListVolumesResponse.toString()"], ["com.github.dockerjava.api.command.InspectExecResponse", "com.github.dockerjava.api.command.InspectExecResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse.getId()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse.isOpenStdin()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse.isOpenStderr()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse.isOpenStdout()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse.isRunning()"], ["java.lang.Integer", "com.github.dockerjava.api.command.InspectExecResponse.getExitCode()"], ["com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig", "com.github.dockerjava.api.command.InspectExecResponse.getProcessConfig()"], ["com.github.dockerjava.api.command.InspectExecResponse$Container", "com.github.dockerjava.api.command.InspectExecResponse.getContainer()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse.getCanRemove()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse.getContainerID()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse.getDetachKeys()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse.toString()"], ["com.github.dockerjava.api.command.CreateVolumeResponse", "com.github.dockerjava.api.command.CreateVolumeResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateVolumeResponse.getName()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateVolumeResponse.getDriver()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateVolumeResponse.getMountpoint()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateVolumeResponse.toString()"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.getName()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.getSource()"], ["com.github.dockerjava.api.model.Volume", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.getDestination()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.getDriver()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.getMode()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.getRW()"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.withDestination(com.github.dockerjava.api.model.Volume)"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.withDriver(java.lang.String)"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.withMode(java.lang.String)"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.withName(java.lang.String)"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.withRw(java.lang.Boolean)"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.withSource(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.toString()"], ["boolean", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.hashCode()"], ["com.github.dockerjava.api.command.InspectContainerResponse$ContainerState", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState(com.github.dockerjava.api.command.InspectContainerResponse)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getStatus()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getRunning()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getPaused()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getRestarting()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getOOMKilled()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getDead()"], ["java.lang.Integer", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getPid()"], ["java.lang.Integer", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getExitCode()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getError()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getStartedAt()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getFinishedAt()"], ["com.github.dockerjava.api.command.HealthState", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getHealth()"], ["boolean", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.hashCode()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.toString()"], ["com.github.dockerjava.api.command.CreateImageResponse", "com.github.dockerjava.api.command.CreateImageResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateImageResponse.getId()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateImageResponse.toString()"], ["com.github.dockerjava.api.command.InspectVolumeResponse", "com.github.dockerjava.api.command.InspectVolumeResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectVolumeResponse.getName()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectVolumeResponse.getDriver()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectVolumeResponse.getMountpoint()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectVolumeResponse.toString()"], ["void", "org.newsclub.net.unix.AFUNIXSocketImpl$Lenient.setOption(int, java.lang.Object)"], ["java.lang.Object", "org.newsclub.net.unix.AFUNIXSocketImpl$Lenient.getOption(int)"], ["com.github.dockerjava.api.model.ErrorResponse", "com.github.dockerjava.api.model.ErrorResponse()"], ["com.github.dockerjava.api.model.ErrorDetail", "com.github.dockerjava.api.model.ErrorResponse.getErrorDetail()"], ["java.lang.String", "com.github.dockerjava.api.model.ErrorResponse.getError()"], ["com.github.dockerjava.api.model.ErrorDetail", "com.github.dockerjava.api.model.ErrorDetail()"], ["java.lang.String", "com.github.dockerjava.api.model.ErrorDetail.getMessage()"], ["com.github.dockerjava.api.model.Capability[]", "com.github.dockerjava.api.model.Capability.values()"], ["com.github.dockerjava.api.model.Capability", "com.github.dockerjava.api.model.Capability.valueOf(java.lang.String)"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig()"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.getUsername()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig.withUsername(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.getPassword()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig.withPassword(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.getEmail()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig.withEmail(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.getRegistryAddress()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig.withRegistryAddress(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.getAuth()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig.withAuth(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.getRegistrytoken()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig.withRegistrytoken(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.toString()"], ["int", "com.github.dockerjava.api.model.AuthConfig.hashCode()"], ["boolean", "com.github.dockerjava.api.model.AuthConfig.equals(java.lang.Object)"], ["com.github.dockerjava.api.model.Frame", "com.github.dockerjava.api.model.Frame(com.github.dockerjava.api.model.StreamType, byte[])"], ["com.github.dockerjava.api.model.StreamType", "com.github.dockerjava.api.model.Frame.getStreamType()"], ["byte[]", "com.github.dockerjava.api.model.Frame.getPayload()"], ["java.lang.String", "com.github.dockerjava.api.model.Frame.toString()"], ["boolean", "com.github.dockerjava.api.model.Frame.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Frame.hashCode()"], ["com.github.dockerjava.api.model.ExposedPorts$Serializer", "com.github.dockerjava.api.model.ExposedPorts$Serializer()"], ["void", "com.github.dockerjava.api.model.ExposedPorts$Serializer.serialize(com.github.dockerjava.api.model.ExposedPorts, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.dockerjava.api.model.ExposedPorts$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.dockerjava.api.model.VolumeBinds$Deserializer", "com.github.dockerjava.api.model.VolumeBinds$Deserializer()"], ["com.github.dockerjava.api.model.VolumeBinds", "com.github.dockerjava.api.model.VolumeBinds$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["java.lang.Object", "com.github.dockerjava.api.model.VolumeBinds$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.dockerjava.api.model.ResponseItem$ErrorDetail", "com.github.dockerjava.api.model.ResponseItem$ErrorDetail()"], ["java.lang.Integer", "com.github.dockerjava.api.model.ResponseItem$ErrorDetail.getCode()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem$ErrorDetail.getMessage()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem$ErrorDetail.toString()"], ["com.github.dockerjava.api.model.VolumesFrom", "com.github.dockerjava.api.model.VolumesFrom(java.lang.String)"], ["com.github.dockerjava.api.model.VolumesFrom", "com.github.dockerjava.api.model.VolumesFrom(java.lang.String, com.github.dockerjava.api.model.AccessMode)"], ["java.lang.String", "com.github.dockerjava.api.model.VolumesFrom.getContainer()"], ["com.github.dockerjava.api.model.AccessMode", "com.github.dockerjava.api.model.VolumesFrom.getAccessMode()"], ["com.github.dockerjava.api.model.VolumesFrom", "com.github.dockerjava.api.model.VolumesFrom.parse(java.lang.String)"], ["boolean", "com.github.dockerjava.api.model.VolumesFrom.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.VolumesFrom.hashCode()"], ["java.lang.String", "com.github.dockerjava.api.model.VolumesFrom.toString()"], ["com.github.dockerjava.api.model.Volumes$Serializer", "com.github.dockerjava.api.model.Volumes$Serializer()"], ["void", "com.github.dockerjava.api.model.Volumes$Serializer.serialize(com.github.dockerjava.api.model.Volumes, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.dockerjava.api.model.Volumes$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.dockerjava.api.model.AuthConfigurations", "com.github.dockerjava.api.model.AuthConfigurations()"], ["void", "com.github.dockerjava.api.model.AuthConfigurations.addConfig(com.github.dockerjava.api.model.AuthConfig)"], ["java.util.Map<java.lang.String, com.github.dockerjava.api.model.AuthConfig>", "com.github.dockerjava.api.model.AuthConfigurations.getConfigs()"], ["com.github.dockerjava.api.model.ResponseItem", "com.github.dockerjava.api.model.ResponseItem()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.getStream()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.getStatus()"], ["com.github.dockerjava.api.model.ResponseItem$ProgressDetail", "com.github.dockerjava.api.model.ResponseItem.getProgressDetail()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.getProgress()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.getId()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.getFrom()"], ["java.lang.Long", "com.github.dockerjava.api.model.ResponseItem.getTime()"], ["com.github.dockerjava.api.model.ResponseItem$ErrorDetail", "com.github.dockerjava.api.model.ResponseItem.getErrorDetail()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.getError()"], ["com.github.dockerjava.api.model.ResponseItem$AuxDetail", "com.github.dockerjava.api.model.ResponseItem.getAux()"], ["boolean", "com.github.dockerjava.api.model.ResponseItem.isErrorIndicated()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.toString()"], ["com.github.dockerjava.api.model.VolumeRW", "com.github.dockerjava.api.model.VolumeRW(com.github.dockerjava.api.model.Volume)"], ["com.github.dockerjava.api.model.VolumeRW", "com.github.dockerjava.api.model.VolumeRW(com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode)"], ["com.github.dockerjava.api.model.Volume", "com.github.dockerjava.api.model.VolumeRW.getVolume()"], ["com.github.dockerjava.api.model.AccessMode", "com.github.dockerjava.api.model.VolumeRW.getAccessMode()"], ["java.lang.String", "com.github.dockerjava.api.model.VolumeRW.toString()"], ["boolean", "com.github.dockerjava.api.model.VolumeRW.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.VolumeRW.hashCode()"], ["com.github.dockerjava.api.model.Binds$Serializer", "com.github.dockerjava.api.model.Binds$Serializer()"], ["void", "com.github.dockerjava.api.model.Binds$Serializer.serialize(com.github.dockerjava.api.model.Binds, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.dockerjava.api.model.Binds$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.dockerjava.api.exception.DockerException", "com.github.dockerjava.api.exception.DockerException(java.lang.String, int)"], ["com.github.dockerjava.api.exception.DockerException", "com.github.dockerjava.api.exception.DockerException(java.lang.String, int, java.lang.Throwable)"], ["int", "com.github.dockerjava.api.exception.DockerException.getHttpStatus()"], ["com.github.dockerjava.api.exception.InternalServerErrorException", "com.github.dockerjava.api.exception.InternalServerErrorException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.InternalServerErrorException", "com.github.dockerjava.api.exception.InternalServerErrorException(java.lang.String)"], ["com.github.dockerjava.api.exception.InternalServerErrorException", "com.github.dockerjava.api.exception.InternalServerErrorException(java.lang.Throwable)"], ["com.github.dockerjava.api.command.HealthStateLog", "com.github.dockerjava.api.command.HealthStateLog()"], ["java.lang.String", "com.github.dockerjava.api.command.HealthStateLog.getStart()"], ["java.lang.String", "com.github.dockerjava.api.command.HealthStateLog.getEnd()"], ["java.lang.Integer", "com.github.dockerjava.api.command.HealthStateLog.getExitCode()"], ["java.lang.String", "com.github.dockerjava.api.command.HealthStateLog.getOutput()"], ["com.github.dockerjava.netty.exec.PushImageCmdExec", "com.github.dockerjava.netty.exec.PushImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.TopContainerCmdExec", "com.github.dockerjava.netty.exec.TopContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.StartContainerCmdExec", "com.github.dockerjava.netty.exec.StartContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.PullImageCmdExec", "com.github.dockerjava.netty.exec.PullImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.CopyArchiveFromContainerCmdExec", "com.github.dockerjava.netty.exec.CopyArchiveFromContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.RemoveContainerCmdExec", "com.github.dockerjava.netty.exec.RemoveContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.netty.InvocationBuilder$7.operationComplete(io.netty.channel.ChannelFuture)"], ["void", "com.github.dockerjava.netty.InvocationBuilder$7.operationComplete(io.netty.util.concurrent.Future)"], ["io.netty.handler.codec.http.HttpRequest", "com.github.dockerjava.netty.InvocationBuilder$4.getHttpRequest(java.lang.String)"], ["com.github.dockerjava.core.NameParser$HostnameReposName", "com.github.dockerjava.core.NameParser$HostnameReposName(java.lang.String, java.lang.String)"], ["boolean", "com.github.dockerjava.core.NameParser$HostnameReposName.equals(java.lang.Object)"], ["java.lang.String", "com.github.dockerjava.core.NameParser$HostnameReposName.toString()"], ["com.github.dockerjava.core.exception.InvalidRepositoryNameException", "com.github.dockerjava.core.exception.InvalidRepositoryNameException()"], ["com.github.dockerjava.core.exception.InvalidRepositoryNameException", "com.github.dockerjava.core.exception.InvalidRepositoryNameException(java.lang.String)"], ["com.github.dockerjava.core.GoLangFileMatch$RangeParseState[]", "com.github.dockerjava.core.GoLangFileMatch$RangeParseState.values()"], ["com.github.dockerjava.core.GoLangFileMatch$RangeParseState", "com.github.dockerjava.core.GoLangFileMatch$RangeParseState.valueOf(java.lang.String)"], ["com.github.dockerjava.core.KeystoreSSLConfig", "com.github.dockerjava.core.KeystoreSSLConfig(java.security.KeyStore, java.lang.String)"], ["com.github.dockerjava.core.KeystoreSSLConfig", "com.github.dockerjava.core.KeystoreSSLConfig(java.io.File, java.lang.String)"], ["javax.net.ssl.SSLContext", "com.github.dockerjava.core.KeystoreSSLConfig.getSSLContext()"], ["boolean", "com.github.dockerjava.core.KeystoreSSLConfig.equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.KeystoreSSLConfig.hashCode()"], ["java.lang.String", "com.github.dockerjava.core.KeystoreSSLConfig.toString()"], ["com.github.dockerjava.core.async.FrameStreamProcessor", "com.github.dockerjava.core.async.FrameStreamProcessor()"], ["void", "com.github.dockerjava.core.async.FrameStreamProcessor.processResponseStream(java.io.InputStream, com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>)"], ["com.github.dockerjava.core.async.ResultCallbackTemplate", "com.github.dockerjava.core.async.ResultCallbackTemplate()"], ["void", "com.github.dockerjava.core.async.ResultCallbackTemplate.onStart(java.io.Closeable)"], ["void", "com.github.dockerjava.core.async.ResultCallbackTemplate.onError(java.lang.Throwable)"], ["void", "com.github.dockerjava.core.async.ResultCallbackTemplate.onComplete()"], ["void", "com.github.dockerjava.core.async.ResultCallbackTemplate.close()"], ["RC_T", "com.github.dockerjava.core.async.ResultCallbackTemplate.awaitCompletion()"], ["boolean", "com.github.dockerjava.core.async.ResultCallbackTemplate.awaitCompletion(long, java.util.concurrent.TimeUnit)"], ["RC_T", "com.github.dockerjava.core.async.ResultCallbackTemplate.awaitStarted()"], ["boolean", "com.github.dockerjava.core.async.ResultCallbackTemplate.awaitStarted(long, java.util.concurrent.TimeUnit)"], ["boolean", "com.github.dockerjava.core.RemoteApiVersion$1.isGreaterOrEqual(com.github.dockerjava.core.RemoteApiVersion)"], ["java.lang.String", "com.github.dockerjava.core.RemoteApiVersion$1.toString()"], ["java.lang.String", "com.github.dockerjava.core.RemoteApiVersion$1.asWebPathPart()"], ["java.lang.String", "com.github.dockerjava.core.util.FiltersEncoder.jsonEncode(java.util.Map<java.lang.String, java.util.List<java.lang.String>>)"], ["com.github.dockerjava.core.util.TarDirWalker", "com.github.dockerjava.core.util.TarDirWalker(java.nio.file.Path, org.apache.commons.compress.archivers.tar.TarArchiveOutputStream)"], ["java.nio.file.FileVisitResult", "com.github.dockerjava.core.util.TarDirWalker.preVisitDirectory(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes)"], ["java.nio.file.FileVisitResult", "com.github.dockerjava.core.util.TarDirWalker.visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes)"], ["java.nio.file.FileVisitResult", "com.github.dockerjava.core.util.TarDirWalker.visitFileFailed(java.nio.file.Path, java.io.IOException)"], ["java.nio.file.FileVisitResult", "com.github.dockerjava.core.util.TarDirWalker.visitFileFailed(java.lang.Object, java.io.IOException)"], ["java.nio.file.FileVisitResult", "com.github.dockerjava.core.util.TarDirWalker.visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes)"], ["java.nio.file.FileVisitResult", "com.github.dockerjava.core.util.TarDirWalker.preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes)"], ["boolean", "com.github.dockerjava.core.util.CertificateUtils.verifyCertificatesExist(java.lang.String)"], ["java.security.KeyStore", "com.github.dockerjava.core.util.CertificateUtils.createKeyStore(java.lang.String, java.lang.String)"], ["java.security.PrivateKey", "com.github.dockerjava.core.util.CertificateUtils.loadPrivateKey(java.io.Reader)"], ["java.security.PrivateKey", "com.github.dockerjava.core.util.CertificateUtils.guessKey(byte[])"], ["java.security.PrivateKey", "com.github.dockerjava.core.util.CertificateUtils.loadPrivateKey(java.lang.String)"], ["java.security.KeyStore", "com.github.dockerjava.core.util.CertificateUtils.createTrustStore(java.lang.String)"], ["java.security.KeyStore", "com.github.dockerjava.core.util.CertificateUtils.createTrustStore(java.io.Reader)"], ["com.github.dockerjava.core.dockerfile.Dockerfile", "com.github.dockerjava.core.dockerfile.Dockerfile(java.io.File, java.io.File)"], ["com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult", "com.github.dockerjava.core.dockerfile.Dockerfile.parse()"], ["java.io.InputStream", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult.buildDockerFolderTar()"], ["java.io.InputStream", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult.buildDockerFolderTar(java.io.File)"], ["java.lang.String", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult.toString()"], ["com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult(com.github.dockerjava.core.dockerfile.Dockerfile)"], ["java.lang.String", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Env.toString()"], ["com.github.dockerjava.core.command.RemoveImageCmdImpl", "com.github.dockerjava.core.command.RemoveImageCmdImpl(com.github.dockerjava.api.command.RemoveImageCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.RemoveImageCmdImpl.getImageId()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.RemoveImageCmdImpl.hasForceEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.RemoveImageCmdImpl.hasNoPruneEnabled()"], ["com.github.dockerjava.api.command.RemoveImageCmd", "com.github.dockerjava.core.command.RemoveImageCmdImpl.withImageId(java.lang.String)"], ["com.github.dockerjava.api.command.RemoveImageCmd", "com.github.dockerjava.core.command.RemoveImageCmdImpl.withForce(java.lang.Boolean)"], ["com.github.dockerjava.api.command.RemoveImageCmd", "com.github.dockerjava.core.command.RemoveImageCmdImpl.withNoPrune(java.lang.Boolean)"], ["java.lang.Void", "com.github.dockerjava.core.command.RemoveImageCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.RemoveImageCmdImpl.exec()"], ["com.github.dockerjava.core.command.CreateContainerCmdImpl", "com.github.dockerjava.core.command.CreateContainerCmdImpl(com.github.dockerjava.api.command.CreateContainerCmd$Exec, java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerResponse", "com.github.dockerjava.core.command.CreateContainerCmdImpl.exec()"], ["com.github.dockerjava.api.model.Bind[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getBinds()"], ["java.lang.Integer", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getBlkioWeight()"], ["com.github.dockerjava.api.model.Capability[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCapAdd()"], ["com.github.dockerjava.api.model.Capability[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCapDrop()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCmd()"], ["java.lang.Integer", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCpuPeriod()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCpusetCpus()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCpusetMems()"], ["java.lang.Integer", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCpuShares()"], ["com.github.dockerjava.api.model.Device[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getDevices()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getDns()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getDnsSearch()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getDomainName()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getEntrypoint()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getEnv()"], ["com.github.dockerjava.api.model.ExposedPort[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getExposedPorts()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getStopSignal()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getExtraHosts()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getHostName()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getImage()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getIpv4Address()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getIpv6Address()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getLabels()"], ["com.github.dockerjava.api.model.Link[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getLinks()"], ["com.github.dockerjava.api.model.LxcConf[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getLxcConf()"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getLogConfig()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getMacAddress()"], ["java.lang.Long", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getMemory()"], ["java.lang.Long", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getMemorySwap()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getName()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getNetworkMode()"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getPortBindings()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getPortSpecs()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getRestartPolicy()"], ["com.github.dockerjava.api.model.Ulimit[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getUlimits()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getUser()"], ["com.github.dockerjava.api.model.Volume[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getVolumes()"], ["com.github.dockerjava.api.model.VolumesFrom[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getVolumesFrom()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getWorkingDir()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isAttachStderr()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isAttachStdin()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isAttachStdout()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isNetworkDisabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getOomKillDisable()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getPrivileged()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getPublishAllPorts()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getReadonlyRootfs()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isStdInOnce()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isStdinOpen()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isTty()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getPidMode()"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getHostConfig()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCgroupParent()"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withAliases(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withAliases(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withAttachStderr(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withAttachStdin(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withAttachStdout(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withBinds(com.github.dockerjava.api.model.Bind...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withBinds(java.util.List<com.github.dockerjava.api.model.Bind>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withBlkioWeight(java.lang.Integer)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCapAdd(com.github.dockerjava.api.model.Capability...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCapAdd(java.util.List<com.github.dockerjava.api.model.Capability>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCapDrop(com.github.dockerjava.api.model.Capability...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCapDrop(java.util.List<com.github.dockerjava.api.model.Capability>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCmd(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCmd(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withContainerIDFile(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCpuPeriod(java.lang.Integer)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCpusetCpus(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCpusetMems(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCpuShares(java.lang.Integer)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDevices(com.github.dockerjava.api.model.Device...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDevices(java.util.List<com.github.dockerjava.api.model.Device>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDns(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDns(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDnsSearch(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDnsSearch(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDomainName(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withEntrypoint(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withEntrypoint(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withEnv(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withEnv(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withExposedPorts(com.github.dockerjava.api.model.ExposedPort...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withStopSignal(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withExposedPorts(java.util.List<com.github.dockerjava.api.model.ExposedPort>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withExtraHosts(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withExtraHosts(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withHostName(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withImage(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withIpv4Address(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withIpv6Address(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withLabels(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withLinks(com.github.dockerjava.api.model.Link...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withLinks(java.util.List<com.github.dockerjava.api.model.Link>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withLxcConf(com.github.dockerjava.api.model.LxcConf...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withLxcConf(java.util.List<com.github.dockerjava.api.model.LxcConf>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withLogConfig(com.github.dockerjava.api.model.LogConfig)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withMacAddress(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withMemory(java.lang.Long)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withMemorySwap(java.lang.Long)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withName(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withNetworkDisabled(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withNetworkMode(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withOomKillDisable(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPortBindings(com.github.dockerjava.api.model.PortBinding...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPortBindings(java.util.List<com.github.dockerjava.api.model.PortBinding>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPortBindings(com.github.dockerjava.api.model.Ports)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPortSpecs(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPortSpecs(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPrivileged(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPublishAllPorts(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withReadonlyRootfs(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withRestartPolicy(com.github.dockerjava.api.model.RestartPolicy)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withStdInOnce(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withStdinOpen(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withTty(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withUlimits(com.github.dockerjava.api.model.Ulimit...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withUlimits(java.util.List<com.github.dockerjava.api.model.Ulimit>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withUser(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withVolumes(com.github.dockerjava.api.model.Volume...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withVolumes(java.util.List<com.github.dockerjava.api.model.Volume>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withVolumesFrom(com.github.dockerjava.api.model.VolumesFrom...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withVolumesFrom(java.util.List<com.github.dockerjava.api.model.VolumesFrom>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withWorkingDir(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCgroupParent(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPidMode(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withHostConfig(com.github.dockerjava.api.model.HostConfig)"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.toString()"], ["boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.command.CreateContainerCmdImpl.hashCode()"], ["java.lang.Object", "com.github.dockerjava.core.command.CreateContainerCmdImpl.exec()"], ["com.github.dockerjava.core.command.RemoveVolumeCmdImpl", "com.github.dockerjava.core.command.RemoveVolumeCmdImpl(com.github.dockerjava.api.command.RemoveVolumeCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.RemoveVolumeCmdImpl.getName()"], ["com.github.dockerjava.api.command.RemoveVolumeCmd", "com.github.dockerjava.core.command.RemoveVolumeCmdImpl.withName(java.lang.String)"], ["java.lang.Void", "com.github.dockerjava.core.command.RemoveVolumeCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.RemoveVolumeCmdImpl.exec()"], ["com.github.dockerjava.core.command.EventsResultCallback", "com.github.dockerjava.core.command.EventsResultCallback()"], ["void", "com.github.dockerjava.core.command.EventsResultCallback.onNext(com.github.dockerjava.api.model.Event)"], ["void", "com.github.dockerjava.core.command.EventsResultCallback.onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.LoadImageCmdImpl", "com.github.dockerjava.core.command.LoadImageCmdImpl(com.github.dockerjava.api.command.LoadImageCmd$Exec, java.io.InputStream)"], ["java.io.InputStream", "com.github.dockerjava.core.command.LoadImageCmdImpl.getImageStream()"], ["com.github.dockerjava.core.command.LoadImageCmdImpl", "com.github.dockerjava.core.command.LoadImageCmdImpl.withImageStream(java.io.InputStream)"], ["com.github.dockerjava.api.command.LoadImageCmd", "com.github.dockerjava.core.command.LoadImageCmdImpl.withImageStream(java.io.InputStream)"], ["com.github.dockerjava.core.command.RestartContainerCmdImpl", "com.github.dockerjava.core.command.RestartContainerCmdImpl(com.github.dockerjava.api.command.RestartContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.RestartContainerCmdImpl.getContainerId()"], ["java.lang.Integer", "com.github.dockerjava.core.command.RestartContainerCmdImpl.getTimeout()"], ["com.github.dockerjava.api.command.RestartContainerCmd", "com.github.dockerjava.core.command.RestartContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.RestartContainerCmd", "com.github.dockerjava.core.command.RestartContainerCmdImpl.withtTimeout(java.lang.Integer)"], ["java.lang.Void", "com.github.dockerjava.core.command.RestartContainerCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.RestartContainerCmdImpl.exec()"], ["com.github.dockerjava.core.command.StatsCmdImpl", "com.github.dockerjava.core.command.StatsCmdImpl(com.github.dockerjava.api.command.StatsCmd$Exec, java.lang.String)"], ["com.github.dockerjava.api.command.StatsCmd", "com.github.dockerjava.core.command.StatsCmdImpl.withContainerId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.StatsCmdImpl.getContainerId()"], ["com.github.dockerjava.core.command.SaveImageCmdImpl", "com.github.dockerjava.core.command.SaveImageCmdImpl(com.github.dockerjava.api.command.SaveImageCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.SaveImageCmdImpl.getName()"], ["java.lang.String", "com.github.dockerjava.core.command.SaveImageCmdImpl.getTag()"], ["com.github.dockerjava.api.command.SaveImageCmd", "com.github.dockerjava.core.command.SaveImageCmdImpl.withName(java.lang.String)"], ["com.github.dockerjava.api.command.SaveImageCmd", "com.github.dockerjava.core.command.SaveImageCmdImpl.withTag(java.lang.String)"], ["java.io.InputStream", "com.github.dockerjava.core.command.SaveImageCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.SaveImageCmdImpl.exec()"], ["com.github.dockerjava.core.command.UnpauseContainerCmdImpl", "com.github.dockerjava.core.command.UnpauseContainerCmdImpl(com.github.dockerjava.api.command.UnpauseContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.UnpauseContainerCmdImpl.getContainerId()"], ["com.github.dockerjava.api.command.UnpauseContainerCmd", "com.github.dockerjava.core.command.UnpauseContainerCmdImpl.withContainerId(java.lang.String)"], ["java.lang.Void", "com.github.dockerjava.core.command.UnpauseContainerCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.UnpauseContainerCmdImpl.exec()"], ["com.github.dockerjava.core.command.CreateVolumeCmdImpl", "com.github.dockerjava.core.command.CreateVolumeCmdImpl(com.github.dockerjava.api.command.CreateVolumeCmd$Exec)"], ["java.lang.String", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.getName()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.getDriver()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.getDriverOpts()"], ["com.github.dockerjava.core.command.CreateVolumeCmdImpl", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.withName(java.lang.String)"], ["com.github.dockerjava.core.command.CreateVolumeCmdImpl", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.withDriver(java.lang.String)"], ["com.github.dockerjava.api.command.CreateVolumeCmd", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.withDriverOpts(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.command.CreateVolumeCmd", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.withDriver(java.lang.String)"], ["com.github.dockerjava.api.command.CreateVolumeCmd", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.withName(java.lang.String)"], ["com.github.dockerjava.core.command.TopContainerCmdImpl", "com.github.dockerjava.core.command.TopContainerCmdImpl(com.github.dockerjava.api.command.TopContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.TopContainerCmdImpl.getContainerId()"], ["java.lang.String", "com.github.dockerjava.core.command.TopContainerCmdImpl.getPsArgs()"], ["com.github.dockerjava.api.command.TopContainerCmd", "com.github.dockerjava.core.command.TopContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.TopContainerCmd", "com.github.dockerjava.core.command.TopContainerCmdImpl.withPsArgs(java.lang.String)"], ["com.github.dockerjava.api.command.TopContainerResponse", "com.github.dockerjava.core.command.TopContainerCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.TopContainerCmdImpl.exec()"], ["com.github.dockerjava.core.command.InspectVolumeCmdImpl", "com.github.dockerjava.core.command.InspectVolumeCmdImpl(com.github.dockerjava.api.command.InspectVolumeCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.InspectVolumeCmdImpl.getName()"], ["com.github.dockerjava.api.command.InspectVolumeCmd", "com.github.dockerjava.core.command.InspectVolumeCmdImpl.withName(java.lang.String)"], ["com.github.dockerjava.api.command.InspectVolumeResponse", "com.github.dockerjava.core.command.InspectVolumeCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.InspectVolumeCmdImpl.exec()"], ["com.github.dockerjava.core.command.WaitContainerResultCallback", "com.github.dockerjava.core.command.WaitContainerResultCallback()"], ["void", "com.github.dockerjava.core.command.WaitContainerResultCallback.onNext(com.github.dockerjava.api.model.WaitResponse)"], ["java.lang.Integer", "com.github.dockerjava.core.command.WaitContainerResultCallback.awaitStatusCode()"], ["java.lang.Integer", "com.github.dockerjava.core.command.WaitContainerResultCallback.awaitStatusCode(long, java.util.concurrent.TimeUnit)"], ["void", "com.github.dockerjava.core.command.WaitContainerResultCallback.onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.TagImageCmdImpl", "com.github.dockerjava.core.command.TagImageCmdImpl(com.github.dockerjava.api.command.TagImageCmd$Exec, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.TagImageCmdImpl.getImageId()"], ["java.lang.String", "com.github.dockerjava.core.command.TagImageCmdImpl.getRepository()"], ["java.lang.String", "com.github.dockerjava.core.command.TagImageCmdImpl.getTag()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.TagImageCmdImpl.hasForceEnabled()"], ["com.github.dockerjava.api.command.TagImageCmd", "com.github.dockerjava.core.command.TagImageCmdImpl.withImageId(java.lang.String)"], ["com.github.dockerjava.api.command.TagImageCmd", "com.github.dockerjava.core.command.TagImageCmdImpl.withRepository(java.lang.String)"], ["com.github.dockerjava.api.command.TagImageCmd", "com.github.dockerjava.core.command.TagImageCmdImpl.withTag(java.lang.String)"], ["com.github.dockerjava.api.command.TagImageCmd", "com.github.dockerjava.core.command.TagImageCmdImpl.withForce()"], ["com.github.dockerjava.api.command.TagImageCmd", "com.github.dockerjava.core.command.TagImageCmdImpl.withForce(java.lang.Boolean)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl(com.github.dockerjava.api.command.CommitCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getContainerId()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withContainerId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getRepository()"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getTag()"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getMessage()"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getAuthor()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CommitCmdImpl.hasPauseEnabled()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withAttachStderr(java.lang.Boolean)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withAttachStdin(java.lang.Boolean)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withAttachStdout(java.lang.Boolean)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withCmd(java.lang.String...)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withDisableNetwork(java.lang.Boolean)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withAuthor(java.lang.String)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withMessage(java.lang.String)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withTag(java.lang.String)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withRepository(java.lang.String)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withPause(java.lang.Boolean)"], ["java.lang.String[]", "com.github.dockerjava.core.command.CommitCmdImpl.getEnv()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withEnv(java.lang.String...)"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.CommitCmdImpl.getLabels()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withLabels(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.model.ExposedPorts", "com.github.dockerjava.core.command.CommitCmdImpl.getExposedPorts()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withExposedPorts(com.github.dockerjava.api.model.ExposedPorts)"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getHostname()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withHostname(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.core.command.CommitCmdImpl.getMemory()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withMemory(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.core.command.CommitCmdImpl.getMemorySwap()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withMemorySwap(java.lang.Integer)"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CommitCmdImpl.isOpenStdin()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withOpenStdin(java.lang.Boolean)"], ["java.lang.String[]", "com.github.dockerjava.core.command.CommitCmdImpl.getPortSpecs()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withPortSpecs(java.lang.String...)"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CommitCmdImpl.isStdinOnce()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withStdinOnce(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CommitCmdImpl.isTty()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withTty(java.lang.Boolean)"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getUser()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withUser(java.lang.String)"], ["com.github.dockerjava.api.model.Volumes", "com.github.dockerjava.core.command.CommitCmdImpl.getVolumes()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withVolumes(com.github.dockerjava.api.model.Volumes)"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getWorkingDir()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withWorkingDir(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.CommitCmdImpl.exec()"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withWorkingDir(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withVolumes(com.github.dockerjava.api.model.Volumes)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withUser(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withTty(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withTag(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withStdinOnce(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withRepository(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withPortSpecs(java.lang.String[])"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withPause(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withOpenStdin(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withMessage(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withMemorySwap(java.lang.Integer)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withMemory(java.lang.Integer)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withLabels(java.util.Map)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withHostname(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withExposedPorts(com.github.dockerjava.api.model.ExposedPorts)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withEnv(java.lang.String[])"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withDisableNetwork(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withCmd(java.lang.String[])"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withAuthor(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withAttachStdout(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withAttachStdin(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withAttachStderr(java.lang.Boolean)"], ["com.github.dockerjava.core.command.RenameContainerCmdImpl", "com.github.dockerjava.core.command.RenameContainerCmdImpl(com.github.dockerjava.api.command.RenameContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.RenameContainerCmdImpl.getContainerId()"], ["java.lang.String", "com.github.dockerjava.core.command.RenameContainerCmdImpl.getName()"], ["com.github.dockerjava.api.command.RenameContainerCmd", "com.github.dockerjava.core.command.RenameContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.RenameContainerCmd", "com.github.dockerjava.core.command.RenameContainerCmdImpl.withName(java.lang.String)"], ["java.lang.Void", "com.github.dockerjava.core.command.RenameContainerCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.RenameContainerCmdImpl.exec()"], ["com.github.dockerjava.core.command.InspectImageCmdImpl", "com.github.dockerjava.core.command.InspectImageCmdImpl(com.github.dockerjava.api.command.InspectImageCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.InspectImageCmdImpl.getImageId()"], ["com.github.dockerjava.api.command.InspectImageCmd", "com.github.dockerjava.core.command.InspectImageCmdImpl.withImageId(java.lang.String)"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.core.command.InspectImageCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.InspectImageCmdImpl.exec()"], ["com.github.dockerjava.core.command.LogContainerCmdImpl", "com.github.dockerjava.core.command.LogContainerCmdImpl(com.github.dockerjava.api.command.LogContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.LogContainerCmdImpl.getContainerId()"], ["java.lang.Integer", "com.github.dockerjava.core.command.LogContainerCmdImpl.getTail()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.LogContainerCmdImpl.hasFollowStreamEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.LogContainerCmdImpl.hasTimestampsEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.LogContainerCmdImpl.hasStdoutEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.LogContainerCmdImpl.hasStderrEnabled()"], ["java.lang.Integer", "com.github.dockerjava.core.command.LogContainerCmdImpl.getSince()"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withFollowStream(java.lang.Boolean)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withTimestamps(java.lang.Boolean)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withStdOut(java.lang.Boolean)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withStdErr(java.lang.Boolean)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withTailAll()"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withTail(java.lang.Integer)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withSince(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.core.command.LogContainerCmdImpl.toString()"], ["com.github.dockerjava.core.command.ListContainersCmdImpl", "com.github.dockerjava.core.command.ListContainersCmdImpl(com.github.dockerjava.api.command.ListContainersCmd$Exec)"], ["java.lang.Integer", "com.github.dockerjava.core.command.ListContainersCmdImpl.getLimit()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ListContainersCmdImpl.hasShowSizeEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ListContainersCmdImpl.hasShowAllEnabled()"], ["java.lang.String", "com.github.dockerjava.core.command.ListContainersCmdImpl.getSinceId()"], ["java.lang.String", "com.github.dockerjava.core.command.ListContainersCmdImpl.getBeforeId()"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.core.command.ListContainersCmdImpl.getFilters()"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withShowAll(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withShowSize(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withLimit(java.lang.Integer)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withSince(java.lang.String)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withBefore(java.lang.String)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withLabelFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withLabelFilter(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withExitcodeFilter(java.lang.Integer)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withStatusFilter(java.lang.String)"], ["com.github.dockerjava.core.command.RemoveNetworkCmdImpl", "com.github.dockerjava.core.command.RemoveNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.RemoveNetworkCmd, java.lang.Void>, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.RemoveNetworkCmdImpl.getNetworkId()"], ["com.github.dockerjava.api.command.RemoveNetworkCmd", "com.github.dockerjava.core.command.RemoveNetworkCmdImpl.withNetworkId(java.lang.String)"], ["java.lang.Void", "com.github.dockerjava.core.command.RemoveNetworkCmdImpl.exec()"], ["com.github.dockerjava.core.command.KillContainerCmdImpl", "com.github.dockerjava.core.command.KillContainerCmdImpl(com.github.dockerjava.api.command.KillContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.KillContainerCmdImpl.getContainerId()"], ["java.lang.String", "com.github.dockerjava.core.command.KillContainerCmdImpl.getSignal()"], ["com.github.dockerjava.api.command.KillContainerCmd", "com.github.dockerjava.core.command.KillContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.KillContainerCmd", "com.github.dockerjava.core.command.KillContainerCmdImpl.withSignal(java.lang.String)"], ["java.lang.Void", "com.github.dockerjava.core.command.KillContainerCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.KillContainerCmdImpl.exec()"], ["com.github.dockerjava.core.command.AttachContainerResultCallback", "com.github.dockerjava.core.command.AttachContainerResultCallback()"], ["void", "com.github.dockerjava.core.command.AttachContainerResultCallback.onNext(com.github.dockerjava.api.model.Frame)"], ["void", "com.github.dockerjava.core.command.AttachContainerResultCallback.onNext(java.lang.Object)"], ["com.github.dockerjava.core.NameParser$ReposTag", "com.github.dockerjava.core.NameParser.parseRepositoryTag(java.lang.String)"], ["void", "com.github.dockerjava.core.NameParser.validateRepoName(java.lang.String)"], ["com.github.dockerjava.core.NameParser$HostnameReposName", "com.github.dockerjava.core.NameParser.resolveRepositoryName(java.lang.String)"], ["com.github.dockerjava.jaxrs.ListImagesCmdExec", "com.github.dockerjava.jaxrs.ListImagesCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.command.GraphData", "com.github.dockerjava.api.command.GraphData()"], ["java.lang.String", "com.github.dockerjava.api.command.GraphData.getRootDir()"], ["com.github.dockerjava.api.command.GraphData", "com.github.dockerjava.api.command.GraphData.withRootDir(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.GraphData.getDeviceId()"], ["com.github.dockerjava.api.command.GraphData", "com.github.dockerjava.api.command.GraphData.withDeviceId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.GraphData.getDeviceName()"], ["com.github.dockerjava.api.command.GraphData", "com.github.dockerjava.api.command.GraphData.withDeviceName(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.GraphData.getDeviceSize()"], ["com.github.dockerjava.api.command.GraphData", "com.github.dockerjava.api.command.GraphData.withDeviceSize(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.GraphData.toString()"], ["boolean", "com.github.dockerjava.api.command.GraphData.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.command.GraphData.hashCode()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$6.run()"], ["com.github.dockerjava.jaxrs.ListContainersCmdExec", "com.github.dockerjava.jaxrs.ListContainersCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.command.CreateContainerResponse", "com.github.dockerjava.api.command.CreateContainerResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateContainerResponse.getId()"], ["java.lang.String[]", "com.github.dockerjava.api.command.CreateContainerResponse.getWarnings()"], ["void", "com.github.dockerjava.api.command.CreateContainerResponse.setId(java.lang.String)"], ["void", "com.github.dockerjava.api.command.CreateContainerResponse.setWarnings(java.lang.String[])"], ["java.lang.String", "com.github.dockerjava.api.command.CreateContainerResponse.toString()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getArch()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withArch(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getAuthor()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withAuthor(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getComment()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withComment(java.lang.String)"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.command.InspectImageResponse.getConfig()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withConfig(com.github.dockerjava.api.model.ContainerConfig)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getContainer()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withContainer(java.lang.String)"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.command.InspectImageResponse.getContainerConfig()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withContainerConfig(com.github.dockerjava.api.model.ContainerConfig)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getCreated()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withCreated(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getDockerVersion()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withDockerVersion(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getId()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getOs()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withOs(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getParent()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withParent(java.lang.String)"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withRepoTags(java.util.List<java.lang.String>)"], ["java.lang.Long", "com.github.dockerjava.api.command.InspectImageResponse.getSize()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withSize(java.lang.Long)"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withRepoDigests(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.GraphDriver", "com.github.dockerjava.api.command.InspectImageResponse.getGraphDriver()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withGraphDriver(com.github.dockerjava.api.command.GraphDriver)"], ["java.lang.Long", "com.github.dockerjava.api.command.InspectImageResponse.getVirtualSize()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withVirtualSize(java.lang.Long)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.toString()"], ["boolean", "com.github.dockerjava.api.command.InspectImageResponse.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.command.InspectImageResponse.hashCode()"], ["void", "com.github.dockerjava.netty.InvocationBuilder$6.run()"], ["void", "com.github.dockerjava.netty.handler.HttpResponseHandler$1.close()"], ["com.github.dockerjava.netty.handler.JsonResponseCallbackHandler", "com.github.dockerjava.netty.handler.JsonResponseCallbackHandler(com.fasterxml.jackson.core.type.TypeReference<T>, com.github.dockerjava.api.async.ResultCallback<T>)"], ["void", "com.github.dockerjava.netty.handler.JsonResponseCallbackHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable)"], ["com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream()"], ["void", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream.write(io.netty.buffer.ByteBuf)"], ["void", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream.writeComplete()"], ["void", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream.close()"], ["int", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream.available()"], ["int", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream.read()"], ["int", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream.read(byte[], int, int)"], ["com.github.dockerjava.netty.handler.HttpResponseStreamHandler", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler(com.github.dockerjava.api.async.ResultCallback<java.io.InputStream>)"], ["void", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler.channelInactive(io.netty.channel.ChannelHandlerContext)"], ["com.github.dockerjava.netty.handler.HttpConnectionHijackHandler", "com.github.dockerjava.netty.handler.HttpConnectionHijackHandler(com.github.dockerjava.netty.handler.HttpResponseHandler)"], ["void", "com.github.dockerjava.netty.handler.HttpConnectionHijackHandler.upgradeTo(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.FullHttpResponse)"], ["java.lang.CharSequence", "com.github.dockerjava.netty.handler.HttpConnectionHijackHandler.protocol()"], ["void", "com.github.dockerjava.netty.handler.HttpConnectionHijackHandler.awaitUpgrade()"], ["com.github.dockerjava.netty.NettyDockerCmdExecFactory", "com.github.dockerjava.netty.NettyDockerCmdExecFactory()"], ["void", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.init(com.github.dockerjava.core.DockerClientConfig)"], ["javax.net.ssl.SSLParameters", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.enableHostNameVerification(javax.net.ssl.SSLParameters)"], ["com.github.dockerjava.api.command.CopyArchiveFromContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCopyArchiveFromContainerCmdExec()"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCopyArchiveToContainerCmdExec()"], ["com.github.dockerjava.api.command.AuthCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createAuthCmdExec()"], ["com.github.dockerjava.api.command.InfoCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createInfoCmdExec()"], ["com.github.dockerjava.api.command.PingCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createPingCmdExec()"], ["com.github.dockerjava.api.command.VersionCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createVersionCmdExec()"], ["com.github.dockerjava.api.command.PullImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createPullImageCmdExec()"], ["com.github.dockerjava.api.command.PushImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createPushImageCmdExec()"], ["com.github.dockerjava.api.command.SaveImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createSaveImageCmdExec()"], ["com.github.dockerjava.api.command.CreateImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCreateImageCmdExec()"], ["com.github.dockerjava.api.command.LoadImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createLoadImageCmdExec()"], ["com.github.dockerjava.api.command.SearchImagesCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createSearchImagesCmdExec()"], ["com.github.dockerjava.api.command.RemoveImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createRemoveImageCmdExec()"], ["com.github.dockerjava.api.command.ListImagesCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createListImagesCmdExec()"], ["com.github.dockerjava.api.command.InspectImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createInspectImageCmdExec()"], ["com.github.dockerjava.api.command.ListContainersCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createListContainersCmdExec()"], ["com.github.dockerjava.api.command.CreateContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCreateContainerCmdExec()"], ["com.github.dockerjava.api.command.StartContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createStartContainerCmdExec()"], ["com.github.dockerjava.api.command.InspectContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createInspectContainerCmdExec()"], ["com.github.dockerjava.api.command.ExecCreateCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createExecCmdExec()"], ["com.github.dockerjava.api.command.RemoveContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createRemoveContainerCmdExec()"], ["com.github.dockerjava.api.command.WaitContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createWaitContainerCmdExec()"], ["com.github.dockerjava.api.command.AttachContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createAttachContainerCmdExec()"], ["com.github.dockerjava.api.command.ExecStartCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createExecStartCmdExec()"], ["com.github.dockerjava.api.command.InspectExecCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createInspectExecCmdExec()"], ["com.github.dockerjava.api.command.LogContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createLogContainerCmdExec()"], ["com.github.dockerjava.api.command.CopyFileFromContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCopyFileFromContainerCmdExec()"], ["com.github.dockerjava.api.command.StopContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createStopContainerCmdExec()"], ["com.github.dockerjava.api.command.ContainerDiffCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createContainerDiffCmdExec()"], ["com.github.dockerjava.api.command.KillContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createKillContainerCmdExec()"], ["com.github.dockerjava.api.command.UpdateContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createUpdateContainerCmdExec()"], ["com.github.dockerjava.api.command.RenameContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createRenameContainerCmdExec()"], ["com.github.dockerjava.api.command.RestartContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createRestartContainerCmdExec()"], ["com.github.dockerjava.api.command.CommitCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCommitCmdExec()"], ["com.github.dockerjava.api.command.BuildImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createBuildImageCmdExec()"], ["com.github.dockerjava.api.command.TopContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createTopContainerCmdExec()"], ["com.github.dockerjava.api.command.TagImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createTagImageCmdExec()"], ["com.github.dockerjava.api.command.PauseContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createPauseContainerCmdExec()"], ["com.github.dockerjava.api.command.UnpauseContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createUnpauseContainerCmdExec()"], ["com.github.dockerjava.api.command.EventsCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createEventsCmdExec()"], ["com.github.dockerjava.api.command.StatsCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createStatsCmdExec()"], ["com.github.dockerjava.api.command.CreateVolumeCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCreateVolumeCmdExec()"], ["com.github.dockerjava.api.command.InspectVolumeCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createInspectVolumeCmdExec()"], ["com.github.dockerjava.api.command.RemoveVolumeCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createRemoveVolumeCmdExec()"], ["com.github.dockerjava.api.command.ListVolumesCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createListVolumesCmdExec()"], ["com.github.dockerjava.api.command.ListNetworksCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createListNetworksCmdExec()"], ["com.github.dockerjava.api.command.InspectNetworkCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createInspectNetworkCmdExec()"], ["com.github.dockerjava.api.command.CreateNetworkCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCreateNetworkCmdExec()"], ["com.github.dockerjava.api.command.RemoveNetworkCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createRemoveNetworkCmdExec()"], ["com.github.dockerjava.api.command.ConnectToNetworkCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createConnectToNetworkCmdExec()"], ["com.github.dockerjava.api.command.DisconnectFromNetworkCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createDisconnectFromNetworkCmdExec()"], ["void", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.close()"], ["com.github.dockerjava.netty.NettyDockerCmdExecFactory", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.withConnectTimeout(java.lang.Integer)"], ["io.netty.channel.socket.DuplexChannel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$1.getChannel()"], ["com.github.dockerjava.netty.exec.CopyFileFromContainerCmdExec", "com.github.dockerjava.netty.exec.CopyFileFromContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.ExecCreateCmdExec", "com.github.dockerjava.netty.exec.ExecCreateCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.UpdateContainerCmdExec", "com.github.dockerjava.netty.exec.UpdateContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.KillContainerCmdExec", "com.github.dockerjava.netty.exec.KillContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.AttachContainerCmdExec", "com.github.dockerjava.netty.exec.AttachContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.ContainerDiffCmdExec", "com.github.dockerjava.netty.exec.ContainerDiffCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.LoadImageCmdExec", "com.github.dockerjava.netty.exec.LoadImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.StopContainerCmdExec", "com.github.dockerjava.netty.exec.StopContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.CreateImageCmdExec", "com.github.dockerjava.netty.exec.CreateImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.EventsCmdExec", "com.github.dockerjava.netty.exec.EventsCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.ConnectToNetworkCmdExec", "com.github.dockerjava.netty.exec.ConnectToNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.ListVolumesCmdExec", "com.github.dockerjava.netty.exec.ListVolumesCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.DisconnectFromNetworkCmdExec", "com.github.dockerjava.netty.exec.DisconnectFromNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.SaveImageCmdExec", "com.github.dockerjava.netty.exec.SaveImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.StatsCmdExec", "com.github.dockerjava.netty.exec.StatsCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.BuildImageCmdExec", "com.github.dockerjava.netty.exec.BuildImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.CreateNetworkCmdExec", "com.github.dockerjava.netty.exec.CreateNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.RemoveImageCmdExec", "com.github.dockerjava.netty.exec.RemoveImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.InfoCmdExec", "com.github.dockerjava.netty.exec.InfoCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.netty.exec.InfoCmdExec.exec(com.github.dockerjava.api.command.InfoCmd)"], ["java.lang.Object", "com.github.dockerjava.netty.exec.InfoCmdExec.exec(com.github.dockerjava.api.command.DockerCmd)"], ["com.github.dockerjava.netty.exec.CopyArchiveToContainerCmdExec", "com.github.dockerjava.netty.exec.CopyArchiveToContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.VersionCmdExec", "com.github.dockerjava.netty.exec.VersionCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.AuthCmdExec", "com.github.dockerjava.netty.exec.AuthCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.TagImageCmdExec", "com.github.dockerjava.netty.exec.TagImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.WaitContainerCmdExec", "com.github.dockerjava.netty.exec.WaitContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.DockerCmdExecFactoryImpl", "com.github.dockerjava.netty.DockerCmdExecFactoryImpl()"], ["com.github.dockerjava.netty.InvocationBuilder$SkipResultCallback", "com.github.dockerjava.netty.InvocationBuilder$SkipResultCallback(com.github.dockerjava.netty.InvocationBuilder)"], ["void", "com.github.dockerjava.netty.InvocationBuilder$SkipResultCallback.onNext(java.lang.Void)"], ["void", "com.github.dockerjava.netty.InvocationBuilder$SkipResultCallback.onNext(java.lang.Object)"], ["io.netty.channel.EventLoopGroup", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$UnixDomainSocketInitializer.init(io.netty.bootstrap.Bootstrap, com.github.dockerjava.core.DockerClientConfig)"], ["io.netty.channel.EventLoopGroup", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$UnixDomainSocketInitializer.epollGroup()"], ["io.netty.channel.EventLoopGroup", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$UnixDomainSocketInitializer.kqueueGroup()"], ["io.netty.channel.socket.DuplexChannel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$UnixDomainSocketInitializer.connect(io.netty.bootstrap.Bootstrap)"], ["com.github.dockerjava.core.LocalDirectorySSLConfig", "com.github.dockerjava.core.LocalDirectorySSLConfig(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.LocalDirectorySSLConfig.getDockerCertPath()"], ["javax.net.ssl.SSLContext", "com.github.dockerjava.core.LocalDirectorySSLConfig.getSSLContext()"], ["boolean", "com.github.dockerjava.core.LocalDirectorySSLConfig.equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.LocalDirectorySSLConfig.hashCode()"], ["java.lang.String", "com.github.dockerjava.core.LocalDirectorySSLConfig.toString()"], ["com.github.dockerjava.core.exception.GoLangFileMatchException", "com.github.dockerjava.core.exception.GoLangFileMatchException(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder()"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withProperties(java.util.Properties)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withDockerHost(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withApiVersion(com.github.dockerjava.core.RemoteApiVersion)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withApiVersion(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withRegistryUsername(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withRegistryPassword(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withRegistryEmail(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withRegistryUrl(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withDockerCertPath(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withDockerConfig(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withDockerTlsVerify(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withDockerTlsVerify(java.lang.Boolean)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withCustomSslConfig(com.github.dockerjava.core.SSLConfig)"], ["com.github.dockerjava.core.DefaultDockerClientConfig", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.build()"], ["com.github.dockerjava.core.RemoteApiVersion", "com.github.dockerjava.core.RemoteApiVersion.create(int, int)"], ["com.github.dockerjava.core.RemoteApiVersion", "com.github.dockerjava.core.RemoteApiVersion.unknown()"], ["com.github.dockerjava.core.RemoteApiVersion", "com.github.dockerjava.core.RemoteApiVersion.parseConfig(java.lang.String)"], ["com.github.dockerjava.core.RemoteApiVersion", "com.github.dockerjava.core.RemoteApiVersion.parseConfigWithDefault(java.lang.String)"], ["boolean", "com.github.dockerjava.core.RemoteApiVersion.isGreaterOrEqual(com.github.dockerjava.core.RemoteApiVersion)"], ["java.lang.String", "com.github.dockerjava.core.RemoteApiVersion.getVersion()"], ["boolean", "com.github.dockerjava.core.RemoteApiVersion.equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.RemoteApiVersion.hashCode()"], ["java.lang.String", "com.github.dockerjava.core.RemoteApiVersion.toString()"], ["java.lang.String", "com.github.dockerjava.core.RemoteApiVersion.asWebPathPart()"], ["com.github.dockerjava.core.NameParser$ReposTag", "com.github.dockerjava.core.NameParser$ReposTag(java.lang.String, java.lang.String)"], ["boolean", "com.github.dockerjava.core.NameParser$ReposTag.equals(java.lang.Object)"], ["java.lang.String", "com.github.dockerjava.core.NameParser$ReposTag.toString()"], ["boolean", "com.github.dockerjava.core.GoLangFileMatch.match(java.util.List<java.lang.String>, java.io.File)"], ["boolean", "com.github.dockerjava.core.GoLangFileMatch.match(java.lang.String, java.io.File)"], ["boolean", "com.github.dockerjava.core.GoLangFileMatch.match(java.lang.String, java.lang.String)"], ["com.github.dockerjava.core.util.FiltersBuilder", "com.github.dockerjava.core.util.FiltersBuilder()"], ["com.github.dockerjava.core.util.FiltersBuilder", "com.github.dockerjava.core.util.FiltersBuilder.withFilter(java.lang.String, java.lang.String...)"], ["com.github.dockerjava.core.util.FiltersBuilder", "com.github.dockerjava.core.util.FiltersBuilder.withImages(java.lang.String...)"], ["com.github.dockerjava.core.util.FiltersBuilder", "com.github.dockerjava.core.util.FiltersBuilder.withContainers(java.lang.String...)"], ["com.github.dockerjava.core.util.FiltersBuilder", "com.github.dockerjava.core.util.FiltersBuilder.withLabels(java.lang.String...)"], ["com.github.dockerjava.core.util.FiltersBuilder", "com.github.dockerjava.core.util.FiltersBuilder.withLabels(java.util.Map<java.lang.String, java.lang.String>)"], ["boolean", "com.github.dockerjava.core.util.FiltersBuilder.equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.util.FiltersBuilder.hashCode()"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.core.util.FiltersBuilder.build()"], ["void", "com.github.dockerjava.core.util.CompressArchiveUtil.tar(java.nio.file.Path, java.nio.file.Path, boolean, boolean)"], ["java.io.File", "com.github.dockerjava.core.util.CompressArchiveUtil.archiveTARFiles(java.io.File, java.lang.Iterable<java.io.File>, java.lang.String)"], ["com.github.dockerjava.core.dockerfile.DockerfileStatement$Add", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add.transform(java.util.Map<java.lang.String, java.lang.String>)"], ["java.lang.String", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add.toString()"], ["com.github.dockerjava.core.dockerfile.DockerfileStatement", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add.transform(java.util.Map)"], ["com.google.common.base.Optional<? extends com.github.dockerjava.core.dockerfile.DockerfileStatement>", "com.github.dockerjava.core.dockerfile.Dockerfile$LineTransformer.apply(java.lang.String)"], ["java.lang.Object", "com.github.dockerjava.core.dockerfile.Dockerfile$LineTransformer.apply(java.lang.Object)"], ["T", "com.github.dockerjava.core.dockerfile.DockerfileStatement.transform(java.util.Map<java.lang.String, java.lang.String>)"], ["com.google.common.base.Optional<? extends com.github.dockerjava.core.dockerfile.DockerfileStatement>", "com.github.dockerjava.core.dockerfile.DockerfileStatement.createFromLine(java.lang.String)"], ["boolean", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add$2.apply(java.lang.String)"], ["boolean", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add$2.apply(java.lang.Object)"], ["com.github.dockerjava.core.DockerClientBuilder", "com.github.dockerjava.core.DockerClientBuilder.getInstance()"], ["com.github.dockerjava.core.DockerClientBuilder", "com.github.dockerjava.core.DockerClientBuilder.getInstance(com.github.dockerjava.core.DefaultDockerClientConfig$Builder)"], ["com.github.dockerjava.core.DockerClientBuilder", "com.github.dockerjava.core.DockerClientBuilder.getInstance(com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.core.DockerClientBuilder", "com.github.dockerjava.core.DockerClientBuilder.getInstance(java.lang.String)"], ["com.github.dockerjava.api.command.DockerCmdExecFactory", "com.github.dockerjava.core.DockerClientBuilder.getDefaultDockerCmdExecFactory()"], ["com.github.dockerjava.core.DockerClientBuilder", "com.github.dockerjava.core.DockerClientBuilder.withDockerCmdExecFactory(com.github.dockerjava.api.command.DockerCmdExecFactory)"], ["com.github.dockerjava.api.DockerClient", "com.github.dockerjava.core.DockerClientBuilder.build()"], ["com.github.dockerjava.core.command.CreateImageCmdImpl", "com.github.dockerjava.core.command.CreateImageCmdImpl(com.github.dockerjava.api.command.CreateImageCmd$Exec, java.lang.String, java.io.InputStream)"], ["java.lang.String", "com.github.dockerjava.core.command.CreateImageCmdImpl.getRepository()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateImageCmdImpl.getTag()"], ["java.io.InputStream", "com.github.dockerjava.core.command.CreateImageCmdImpl.getImageStream()"], ["com.github.dockerjava.core.command.CreateImageCmdImpl", "com.github.dockerjava.core.command.CreateImageCmdImpl.withRepository(java.lang.String)"], ["com.github.dockerjava.core.command.CreateImageCmdImpl", "com.github.dockerjava.core.command.CreateImageCmdImpl.withImageStream(java.io.InputStream)"], ["com.github.dockerjava.core.command.CreateImageCmdImpl", "com.github.dockerjava.core.command.CreateImageCmdImpl.withTag(java.lang.String)"], ["com.github.dockerjava.api.command.CreateImageCmd", "com.github.dockerjava.core.command.CreateImageCmdImpl.withTag(java.lang.String)"], ["com.github.dockerjava.api.command.CreateImageCmd", "com.github.dockerjava.core.command.CreateImageCmdImpl.withImageStream(java.io.InputStream)"], ["com.github.dockerjava.api.command.CreateImageCmd", "com.github.dockerjava.core.command.CreateImageCmdImpl.withRepository(java.lang.String)"], ["com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl(com.github.dockerjava.api.command.CopyArchiveToContainerCmd$Exec, java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.withHostResource(java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.withNoOverwriteDirNonDir(boolean)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.withRemotePath(java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.withTarInputStream(java.io.InputStream)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.withDirChildrenOnly(boolean)"], ["java.io.InputStream", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.getTarInputStream()"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.getContainerId()"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.getHostResource()"], ["boolean", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.isNoOverwriteDirNonDir()"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.getRemotePath()"], ["boolean", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.isDirChildrenOnly()"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.toString()"], ["java.lang.Void", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.exec()"], ["com.github.dockerjava.core.command.StartContainerCmdImpl", "com.github.dockerjava.core.command.StartContainerCmdImpl(com.github.dockerjava.api.command.StartContainerCmd$Exec, java.lang.String)"], ["com.github.dockerjava.api.command.StartContainerCmd", "com.github.dockerjava.core.command.StartContainerCmdImpl.withContainerId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.StartContainerCmdImpl.getContainerId()"], ["java.lang.Void", "com.github.dockerjava.core.command.StartContainerCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.StartContainerCmdImpl.exec()"], ["com.github.dockerjava.core.command.StopContainerCmdImpl", "com.github.dockerjava.core.command.StopContainerCmdImpl(com.github.dockerjava.api.command.StopContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.StopContainerCmdImpl.getContainerId()"], ["java.lang.Integer", "com.github.dockerjava.core.command.StopContainerCmdImpl.getTimeout()"], ["com.github.dockerjava.api.command.StopContainerCmd", "com.github.dockerjava.core.command.StopContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.StopContainerCmd", "com.github.dockerjava.core.command.StopContainerCmdImpl.withTimeout(java.lang.Integer)"], ["java.lang.Void", "com.github.dockerjava.core.command.StopContainerCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.StopContainerCmdImpl.exec()"], ["com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd", "com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd(com.github.dockerjava.api.command.DockerCmdSyncExec<T, RES_T>, com.github.dockerjava.api.model.AuthConfig)"], ["com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd", "com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd(com.github.dockerjava.api.command.DockerCmdSyncExec<T, RES_T>)"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd.getAuthConfig()"], ["T", "com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd.withAuthConfig(com.github.dockerjava.api.model.AuthConfig)"], ["com.github.dockerjava.core.command.WaitContainerCmdImpl", "com.github.dockerjava.core.command.WaitContainerCmdImpl(com.github.dockerjava.api.command.WaitContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.WaitContainerCmdImpl.getContainerId()"], ["com.github.dockerjava.api.command.WaitContainerCmd", "com.github.dockerjava.core.command.WaitContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.core.command.PullImageCmdImpl", "com.github.dockerjava.core.command.PullImageCmdImpl(com.github.dockerjava.api.command.PullImageCmd$Exec, com.github.dockerjava.api.model.AuthConfig, java.lang.String)"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.core.command.PullImageCmdImpl.getAuthConfig()"], ["com.github.dockerjava.api.command.PullImageCmd", "com.github.dockerjava.core.command.PullImageCmdImpl.withAuthConfig(com.github.dockerjava.api.model.AuthConfig)"], ["java.lang.String", "com.github.dockerjava.core.command.PullImageCmdImpl.getRepository()"], ["java.lang.String", "com.github.dockerjava.core.command.PullImageCmdImpl.getTag()"], ["java.lang.String", "com.github.dockerjava.core.command.PullImageCmdImpl.getRegistry()"], ["com.github.dockerjava.api.command.PullImageCmd", "com.github.dockerjava.core.command.PullImageCmdImpl.withRepository(java.lang.String)"], ["com.github.dockerjava.api.command.PullImageCmd", "com.github.dockerjava.core.command.PullImageCmdImpl.withTag(java.lang.String)"], ["com.github.dockerjava.api.command.PullImageCmd", "com.github.dockerjava.core.command.PullImageCmdImpl.withRegistry(java.lang.String)"], ["com.github.dockerjava.core.command.RemoveContainerCmdImpl", "com.github.dockerjava.core.command.RemoveContainerCmdImpl(com.github.dockerjava.api.command.RemoveContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.getContainerId()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.hasRemoveVolumesEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.hasForceEnabled()"], ["com.github.dockerjava.api.command.RemoveContainerCmd", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.RemoveContainerCmd", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.withRemoveVolumes(java.lang.Boolean)"], ["com.github.dockerjava.api.command.RemoveContainerCmd", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.withForce(java.lang.Boolean)"], ["java.lang.Void", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.exec()"], ["int", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXInputStream.read(byte[], int, int)"], ["int", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXInputStream.read()"], ["void", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXInputStream.close()"], ["int", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXInputStream.available()"], ["int", "com.github.dockerjava.jaxrs.filter.LoggingFilter$1.compare(java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>, java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>)"], ["int", "com.github.dockerjava.jaxrs.filter.LoggingFilter$1.compare(java.lang.Object, java.lang.Object)"], ["void", "com.github.dockerjava.jaxrs.filter.LoggingFilter$LoggingStream.write(int)"], ["com.github.dockerjava.jaxrs.filter.JsonClientFilter", "com.github.dockerjava.jaxrs.filter.JsonClientFilter()"], ["void", "com.github.dockerjava.jaxrs.filter.JsonClientFilter.filter(javax.ws.rs.client.ClientRequestContext, javax.ws.rs.client.ClientResponseContext)"], ["com.github.dockerjava.jaxrs.CreateContainerCmdExec", "com.github.dockerjava.jaxrs.CreateContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.async.GETCallbackNotifier", "com.github.dockerjava.jaxrs.async.GETCallbackNotifier(com.github.dockerjava.core.async.ResponseStreamProcessor<T>, com.github.dockerjava.api.async.ResultCallback<T>, javax.ws.rs.client.Invocation$Builder)"], ["java.lang.Void", "com.github.dockerjava.jaxrs.async.AbstractCallbackNotifier.call()"], ["<T> java.util.concurrent.Future<java.lang.Void>", "com.github.dockerjava.jaxrs.async.AbstractCallbackNotifier.startAsyncProcessing(com.github.dockerjava.jaxrs.async.AbstractCallbackNotifier<T>)"], ["java.lang.Object", "com.github.dockerjava.jaxrs.async.AbstractCallbackNotifier.call()"], ["com.github.dockerjava.jaxrs.RemoveNetworkCmdExec", "com.github.dockerjava.jaxrs.RemoveNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec$1.close()"], ["void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec$1.onStart(java.io.Closeable)"], ["void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec$1.onNext(A_RES_T)"], ["void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec$1.onError(java.lang.Throwable)"], ["void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec$1.onComplete()"], ["com.github.dockerjava.jaxrs.ListVolumesCmdExec", "com.github.dockerjava.jaxrs.ListVolumesCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.PingCmdExec", "com.github.dockerjava.jaxrs.PingCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.StatsCmdExec", "com.github.dockerjava.jaxrs.StatsCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory$1.close()"], ["void", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory$1.shutdown()"], ["com.github.dockerjava.jaxrs.BuildImageCmdExec", "com.github.dockerjava.jaxrs.BuildImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.CreateNetworkCmdExec", "com.github.dockerjava.jaxrs.CreateNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.PauseContainerCmdExec", "com.github.dockerjava.jaxrs.PauseContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.InspectVolumeCmdExec", "com.github.dockerjava.jaxrs.InspectVolumeCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.PushImageCmdExec", "com.github.dockerjava.jaxrs.PushImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$4.run()"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory()"], ["void", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.init(com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.command.AuthCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createAuthCmdExec()"], ["com.github.dockerjava.api.command.InfoCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createInfoCmdExec()"], ["com.github.dockerjava.api.command.PingCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createPingCmdExec()"], ["com.github.dockerjava.api.command.VersionCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createVersionCmdExec()"], ["com.github.dockerjava.api.command.PullImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createPullImageCmdExec()"], ["com.github.dockerjava.api.command.PushImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createPushImageCmdExec()"], ["com.github.dockerjava.api.command.SaveImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createSaveImageCmdExec()"], ["com.github.dockerjava.api.command.CreateImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCreateImageCmdExec()"], ["com.github.dockerjava.api.command.LoadImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createLoadImageCmdExec()"], ["com.github.dockerjava.api.command.SearchImagesCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createSearchImagesCmdExec()"], ["com.github.dockerjava.api.command.RemoveImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createRemoveImageCmdExec()"], ["com.github.dockerjava.api.command.ListImagesCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createListImagesCmdExec()"], ["com.github.dockerjava.api.command.InspectImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createInspectImageCmdExec()"], ["com.github.dockerjava.api.command.ListContainersCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createListContainersCmdExec()"], ["com.github.dockerjava.api.command.CreateContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCreateContainerCmdExec()"], ["com.github.dockerjava.api.command.StartContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createStartContainerCmdExec()"], ["com.github.dockerjava.api.command.InspectContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createInspectContainerCmdExec()"], ["com.github.dockerjava.api.command.ExecCreateCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createExecCmdExec()"], ["com.github.dockerjava.api.command.RemoveContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createRemoveContainerCmdExec()"], ["com.github.dockerjava.api.command.WaitContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createWaitContainerCmdExec()"], ["com.github.dockerjava.api.command.AttachContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createAttachContainerCmdExec()"], ["com.github.dockerjava.api.command.ExecStartCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createExecStartCmdExec()"], ["com.github.dockerjava.api.command.InspectExecCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createInspectExecCmdExec()"], ["com.github.dockerjava.api.command.LogContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createLogContainerCmdExec()"], ["com.github.dockerjava.api.command.CopyArchiveFromContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCopyArchiveFromContainerCmdExec()"], ["com.github.dockerjava.api.command.CopyFileFromContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCopyFileFromContainerCmdExec()"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCopyArchiveToContainerCmdExec()"], ["com.github.dockerjava.api.command.StopContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createStopContainerCmdExec()"], ["com.github.dockerjava.api.command.ContainerDiffCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createContainerDiffCmdExec()"], ["com.github.dockerjava.api.command.KillContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createKillContainerCmdExec()"], ["com.github.dockerjava.api.command.UpdateContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createUpdateContainerCmdExec()"], ["com.github.dockerjava.api.command.RenameContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createRenameContainerCmdExec()"], ["com.github.dockerjava.api.command.RestartContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createRestartContainerCmdExec()"], ["com.github.dockerjava.api.command.CommitCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCommitCmdExec()"], ["com.github.dockerjava.api.command.BuildImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createBuildImageCmdExec()"], ["com.github.dockerjava.api.command.TopContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createTopContainerCmdExec()"], ["com.github.dockerjava.api.command.TagImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createTagImageCmdExec()"], ["com.github.dockerjava.api.command.PauseContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createPauseContainerCmdExec()"], ["com.github.dockerjava.api.command.UnpauseContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createUnpauseContainerCmdExec()"], ["com.github.dockerjava.api.command.EventsCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createEventsCmdExec()"], ["com.github.dockerjava.api.command.StatsCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createStatsCmdExec()"], ["com.github.dockerjava.api.command.CreateVolumeCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCreateVolumeCmdExec()"], ["com.github.dockerjava.api.command.InspectVolumeCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createInspectVolumeCmdExec()"], ["com.github.dockerjava.api.command.RemoveVolumeCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createRemoveVolumeCmdExec()"], ["com.github.dockerjava.api.command.ListVolumesCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createListVolumesCmdExec()"], ["com.github.dockerjava.api.command.ListNetworksCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createListNetworksCmdExec()"], ["com.github.dockerjava.api.command.InspectNetworkCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createInspectNetworkCmdExec()"], ["com.github.dockerjava.api.command.CreateNetworkCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCreateNetworkCmdExec()"], ["com.github.dockerjava.api.command.RemoveNetworkCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createRemoveNetworkCmdExec()"], ["com.github.dockerjava.api.command.ConnectToNetworkCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createConnectToNetworkCmdExec()"], ["com.github.dockerjava.api.command.DisconnectFromNetworkCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createDisconnectFromNetworkCmdExec()"], ["void", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.close()"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withReadTimeout(java.lang.Integer)"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withConnectTimeout(java.lang.Integer)"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withMaxTotalConnections(java.lang.Integer)"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withMaxPerRouteConnections(java.lang.Integer)"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withConnectionRequestTimeout(java.lang.Integer)"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withClientResponseFilters(javax.ws.rs.client.ClientResponseFilter...)"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withClientRequestFilters(javax.ws.rs.client.ClientRequestFilter...)"], ["void", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.releaseConnection(long)"], ["com.github.dockerjava.jaxrs.UnpauseContainerCmdExec", "com.github.dockerjava.jaxrs.UnpauseContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$7.run()"], ["com.github.dockerjava.jaxrs.CopyArchiveFromContainerCmdExec", "com.github.dockerjava.jaxrs.CopyArchiveFromContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.model.LogConfig$LoggingType[]", "com.github.dockerjava.api.model.LogConfig$LoggingType.values()"], ["com.github.dockerjava.api.model.LogConfig$LoggingType", "com.github.dockerjava.api.model.LogConfig$LoggingType.valueOf(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.LogConfig$LoggingType.getType()"], ["com.github.dockerjava.api.model.BuildResponseItem", "com.github.dockerjava.api.model.BuildResponseItem()"], ["boolean", "com.github.dockerjava.api.model.BuildResponseItem.isBuildSuccessIndicated()"], ["java.lang.String", "com.github.dockerjava.api.model.BuildResponseItem.getImageId()"], ["com.github.dockerjava.api.model.Ports$Serializer", "com.github.dockerjava.api.model.Ports$Serializer()"], ["void", "com.github.dockerjava.api.model.Ports$Serializer.serialize(com.github.dockerjava.api.model.Ports, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.dockerjava.api.model.Ports$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.dockerjava.api.model.VolumesRW", "com.github.dockerjava.api.model.VolumesRW(com.github.dockerjava.api.model.VolumeRW...)"], ["com.github.dockerjava.api.model.VolumeRW[]", "com.github.dockerjava.api.model.VolumesRW.getVolumesRW()"], ["com.github.dockerjava.api.model.Links$Serializer", "com.github.dockerjava.api.model.Links$Serializer()"], ["void", "com.github.dockerjava.api.model.Links$Serializer.serialize(com.github.dockerjava.api.model.Links, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.dockerjava.api.model.Links$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.dockerjava.api.model.ExposedPorts", "com.github.dockerjava.api.model.ExposedPorts(com.github.dockerjava.api.model.ExposedPort...)"], ["com.github.dockerjava.api.model.ExposedPorts", "com.github.dockerjava.api.model.ExposedPorts(java.util.List<com.github.dockerjava.api.model.ExposedPort>)"], ["com.github.dockerjava.api.model.ExposedPort[]", "com.github.dockerjava.api.model.ExposedPorts.getExposedPorts()"], ["com.github.dockerjava.api.model.Container", "com.github.dockerjava.api.model.Container()"], ["java.lang.String", "com.github.dockerjava.api.model.Container.getId()"], ["java.lang.String", "com.github.dockerjava.api.model.Container.getCommand()"], ["java.lang.String", "com.github.dockerjava.api.model.Container.getImage()"], ["java.lang.String", "com.github.dockerjava.api.model.Container.getImageId()"], ["java.lang.Long", "com.github.dockerjava.api.model.Container.getCreated()"], ["java.lang.String", "com.github.dockerjava.api.model.Container.getStatus()"], ["com.github.dockerjava.api.model.ContainerPort[]", "com.github.dockerjava.api.model.Container.getPorts()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.Container.getLabels()"], ["java.lang.String[]", "com.github.dockerjava.api.model.Container.getNames()"], ["java.lang.Long", "com.github.dockerjava.api.model.Container.getSizeRw()"], ["java.lang.Long", "com.github.dockerjava.api.model.Container.getSizeRootFs()"], ["com.github.dockerjava.api.model.ContainerNetworkSettings", "com.github.dockerjava.api.model.Container.getNetworkSettings()"], ["com.github.dockerjava.api.model.ContainerHostConfig", "com.github.dockerjava.api.model.Container.getHostConfig()"], ["java.lang.String", "com.github.dockerjava.api.model.Container.toString()"], ["boolean", "com.github.dockerjava.api.model.Container.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Container.hashCode()"], ["com.github.dockerjava.api.model.Repository", "com.github.dockerjava.api.model.Repository(java.lang.String)"], ["java.net.URL", "com.github.dockerjava.api.model.Repository.getURL()"], ["java.lang.String", "com.github.dockerjava.api.model.Repository.toString()"], ["java.lang.String", "com.github.dockerjava.api.model.Repository.getPath()"], ["com.github.dockerjava.api.model.ChangeLog", "com.github.dockerjava.api.model.ChangeLog()"], ["java.lang.String", "com.github.dockerjava.api.model.ChangeLog.getPath()"], ["java.lang.Integer", "com.github.dockerjava.api.model.ChangeLog.getKind()"], ["java.lang.String", "com.github.dockerjava.api.model.ChangeLog.toString()"], ["com.github.dockerjava.api.model.EventType[]", "com.github.dockerjava.api.model.EventType.values()"], ["com.github.dockerjava.api.model.EventType", "com.github.dockerjava.api.model.EventType.valueOf(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.EventType.getValue()"], ["com.github.dockerjava.api.model.EventType", "com.github.dockerjava.api.model.EventType.forValue(java.lang.String)"], ["com.github.dockerjava.api.model.Device", "com.github.dockerjava.api.model.Device()"], ["com.github.dockerjava.api.model.Device", "com.github.dockerjava.api.model.Device(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Device.getcGroupPermissions()"], ["java.lang.String", "com.github.dockerjava.api.model.Device.getPathInContainer()"], ["java.lang.String", "com.github.dockerjava.api.model.Device.getPathOnHost()"], ["com.github.dockerjava.api.model.Device", "com.github.dockerjava.api.model.Device.parse(java.lang.String)"], ["boolean", "com.github.dockerjava.api.model.Device.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Device.hashCode()"], ["com.github.dockerjava.api.model.ContainerHostConfig", "com.github.dockerjava.api.model.ContainerHostConfig()"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerHostConfig.getNetworkMode()"], ["com.github.dockerjava.api.model.ContainerHostConfig", "com.github.dockerjava.api.model.ContainerHostConfig.withNetworkMode(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerHostConfig.toString()"], ["boolean", "com.github.dockerjava.api.model.ContainerHostConfig.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.ContainerHostConfig.hashCode()"], ["com.github.dockerjava.api.model.AccessMode[]", "com.github.dockerjava.api.model.AccessMode.values()"], ["com.github.dockerjava.api.model.AccessMode", "com.github.dockerjava.api.model.AccessMode.valueOf(java.lang.String)"], ["com.github.dockerjava.api.model.AccessMode", "com.github.dockerjava.api.model.AccessMode.fromBoolean(boolean)"], ["boolean", "com.github.dockerjava.api.model.AccessMode.toBoolean()"], ["com.github.dockerjava.api.model.ContainerPort", "com.github.dockerjava.api.model.ContainerPort()"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerPort.getIp()"], ["com.github.dockerjava.api.model.ContainerPort", "com.github.dockerjava.api.model.ContainerPort.withIp(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.api.model.ContainerPort.getPrivatePort()"], ["com.github.dockerjava.api.model.ContainerPort", "com.github.dockerjava.api.model.ContainerPort.withPrivatePort(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.ContainerPort.getPublicPort()"], ["com.github.dockerjava.api.model.ContainerPort", "com.github.dockerjava.api.model.ContainerPort.withPublicPort(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerPort.getType()"], ["com.github.dockerjava.api.model.ContainerPort", "com.github.dockerjava.api.model.ContainerPort.withType(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerPort.toString()"], ["boolean", "com.github.dockerjava.api.model.ContainerPort.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.ContainerPort.hashCode()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info()"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getArchitecture()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withArchitecture(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getContainers()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withContainers(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getContainersPaused()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withContainersPaused(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getContainersRunning()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withContainersRunning(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getContainersStopped()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withContainersStopped(java.lang.Integer)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getCpuCfsPeriod()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withCpuCfsPeriod(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getCpuCfsQuota()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withCpuCfsQuota(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getCpuShares()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withCpuShares(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getCpuSet()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withCpuSet(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getDebug()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withDebug(java.lang.Boolean)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getDiscoveryBackend()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withDiscoveryBackend(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getDockerRootDir()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withDockerRootDir(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getDriver()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withDriver(java.lang.String)"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withDriverStatuses(java.util.List<java.util.List<java.lang.String>>)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getExecutionDriver()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withExecutionDriver(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getLoggingDriver()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withLoggingDriver(java.lang.String)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getExperimentalBuild()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withExperimentalBuild(java.lang.Boolean)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getHttpProxy()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withHttpProxy(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getHttpsProxy()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withHttpsProxy(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getId()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withId(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getImages()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withImages(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getIndexServerAddress()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withIndexServerAddress(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getInitPath()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withInitPath(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getInitSha1()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withInitSha1(java.lang.String)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getIPv4Forwarding()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withIPv4Forwarding(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getBridgeNfIptables()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withBridgeNfIptables(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getBridgeNfIp6tables()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withBridgeNfIp6tables(java.lang.Boolean)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getKernelVersion()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withKernelVersion(java.lang.String)"], ["java.lang.String[]", "com.github.dockerjava.api.model.Info.getLabels()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withLabels(java.lang.String[])"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getMemoryLimit()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withMemoryLimit(java.lang.Boolean)"], ["java.lang.Long", "com.github.dockerjava.api.model.Info.getMemTotal()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withMemTotal(java.lang.Long)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getName()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withName(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getNCPU()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withNCPU(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getNEventsListener()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withNEventsListener(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getNFd()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withNFd(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getNGoroutines()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withNGoroutines(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getNoProxy()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withNoProxy(java.lang.String)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getOomKillDisable()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withOomKillDisable(java.lang.Boolean)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getOomScoreAdj()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withOomScoreAdj(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getOperatingSystem()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withOperatingSystem(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getOsType()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withOsType(java.lang.String)"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.api.model.Info.getPlugins()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withPlugins(java.util.Map<java.lang.String, java.util.List<java.lang.String>>)"], ["com.github.dockerjava.api.model.InfoRegistryConfig", "com.github.dockerjava.api.model.Info.getRegistryConfig()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withRegistryConfig(com.github.dockerjava.api.model.InfoRegistryConfig)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getServerVersion()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withServerVersion(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getClusterStore()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withClusterStore(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getClusterAdvertise()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withClusterAdvertise(java.lang.String)"], ["java.lang.String[]", "com.github.dockerjava.api.model.Info.getSockets()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withSockets(java.lang.String[])"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getSwapLimit()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withSwapLimit(java.lang.Boolean)"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withSystemStatus(java.util.List<java.lang.Object>)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getSystemTime()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withSystemTime(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.toString()"], ["boolean", "com.github.dockerjava.api.model.Info.equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Info.hashCode()"], ["com.github.dockerjava.api.model.ResponseItem$ProgressDetail", "com.github.dockerjava.api.model.ResponseItem$ProgressDetail()"], ["java.lang.Long", "com.github.dockerjava.api.model.ResponseItem$ProgressDetail.getCurrent()"], ["java.lang.Long", "com.github.dockerjava.api.model.ResponseItem$ProgressDetail.getTotal()"], ["java.lang.Long", "com.github.dockerjava.api.model.ResponseItem$ProgressDetail.getStart()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem$ProgressDetail.toString()"], ["com.github.dockerjava.api.command.TopContainerResponse", "com.github.dockerjava.api.command.TopContainerResponse()"], ["java.lang.String[]", "com.github.dockerjava.api.command.TopContainerResponse.getTitles()"], ["java.lang.String[][]", "com.github.dockerjava.api.command.TopContainerResponse.getProcesses()"], ["java.lang.String", "com.github.dockerjava.api.command.TopContainerResponse.toString()"], ["com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig", "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig(com.github.dockerjava.api.command.InspectExecResponse)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig.getEntryPoint()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig.isPrivileged()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig.isTty()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig.getUser()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig.toString()"], ["com.github.dockerjava.netty.exec.InspectVolumeCmdExec", "com.github.dockerjava.netty.exec.InspectVolumeCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.SearchImagesCmdExec", "com.github.dockerjava.netty.exec.SearchImagesCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.InspectNetworkCmdExec", "com.github.dockerjava.netty.exec.InspectNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.CommitCmdExec", "com.github.dockerjava.netty.exec.CommitCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["java.lang.Void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec.exec(CMD_T, com.github.dockerjava.api.async.ResultCallback<A_RES_T>)"], ["java.lang.Void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec.exec(com.github.dockerjava.api.command.DockerCmd, com.github.dockerjava.api.async.ResultCallback)"], ["com.github.dockerjava.netty.exec.UnpauseContainerCmdExec", "com.github.dockerjava.netty.exec.UnpauseContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.RenameContainerCmdExec", "com.github.dockerjava.netty.exec.RenameContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.core.AuthConfigFile", "com.github.dockerjava.core.AuthConfigFile()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.core.AuthConfigFile.resolveAuthConfig(java.lang.String)"], ["com.github.dockerjava.api.model.AuthConfigurations", "com.github.dockerjava.core.AuthConfigFile.getAuthConfigurations()"], ["int", "com.github.dockerjava.core.AuthConfigFile.hashCode()"], ["boolean", "com.github.dockerjava.core.AuthConfigFile.equals(java.lang.Object)"], ["java.lang.String", "com.github.dockerjava.core.AuthConfigFile.toString()"], ["com.github.dockerjava.core.AuthConfigFile", "com.github.dockerjava.core.AuthConfigFile.loadConfig(java.io.File)"], ["com.github.dockerjava.core.async.JsonStreamProcessor", "com.github.dockerjava.core.async.JsonStreamProcessor(java.lang.Class<T>)"], ["void", "com.github.dockerjava.core.async.JsonStreamProcessor.processResponseStream(java.io.InputStream, com.github.dockerjava.api.async.ResultCallback<T>)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig.createDefaultConfigBuilder()"], ["java.net.URI", "com.github.dockerjava.core.DefaultDockerClientConfig.getDockerHost()"], ["com.github.dockerjava.core.RemoteApiVersion", "com.github.dockerjava.core.DefaultDockerClientConfig.getApiVersion()"], ["java.lang.String", "com.github.dockerjava.core.DefaultDockerClientConfig.getRegistryUsername()"], ["java.lang.String", "com.github.dockerjava.core.DefaultDockerClientConfig.getRegistryPassword()"], ["java.lang.String", "com.github.dockerjava.core.DefaultDockerClientConfig.getRegistryEmail()"], ["java.lang.String", "com.github.dockerjava.core.DefaultDockerClientConfig.getRegistryUrl()"], ["java.lang.String", "com.github.dockerjava.core.DefaultDockerClientConfig.getDockerConfig()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.core.DefaultDockerClientConfig.effectiveAuthConfig(java.lang.String)"], ["com.github.dockerjava.api.model.AuthConfigurations", "com.github.dockerjava.core.DefaultDockerClientConfig.getAuthConfigurations()"], ["com.github.dockerjava.core.SSLConfig", "com.github.dockerjava.core.DefaultDockerClientConfig.getSSLConfig()"], ["boolean", "com.github.dockerjava.core.DefaultDockerClientConfig.equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.DefaultDockerClientConfig.hashCode()"], ["java.lang.String", "com.github.dockerjava.core.DefaultDockerClientConfig.toString()"], ["java.lang.String", "com.github.dockerjava.core.util.FilePathUtil.relativize(java.io.File, java.io.File)"], ["java.lang.String", "com.github.dockerjava.core.util.FilePathUtil.relativize(java.nio.file.Path, java.nio.file.Path)"], ["com.github.dockerjava.core.dockerfile.DockerfileStatement$OtherLine", "com.github.dockerjava.core.dockerfile.DockerfileStatement$OtherLine(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.dockerfile.DockerfileStatement$OtherLine.toString()"], ["int", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult$1.available()"], ["int", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult$1.read()"], ["int", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult$1.read(byte[], int, int)"], ["void", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult$1.close()"], ["com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl(com.github.dockerjava.api.command.CopyFileFromContainerCmd$Exec, java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.getContainerId()"], ["java.lang.String", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.getResource()"], ["com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.withResource(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.getHostPath()"], ["com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.withHostPath(java.lang.String)"], ["java.io.InputStream", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.exec()"], ["com.github.dockerjava.api.command.CopyFileFromContainerCmd", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.withResource(java.lang.String)"], ["com.github.dockerjava.api.command.CopyFileFromContainerCmd", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.withHostPath(java.lang.String)"], ["com.github.dockerjava.api.command.CopyFileFromContainerCmd", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.core.command.PushImageCmdImpl", "com.github.dockerjava.core.command.PushImageCmdImpl(com.github.dockerjava.api.command.PushImageCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.PushImageCmdImpl.getName()"], ["java.lang.String", "com.github.dockerjava.core.command.PushImageCmdImpl.getTag()"], ["com.github.dockerjava.api.command.PushImageCmd", "com.github.dockerjava.core.command.PushImageCmdImpl.withName(java.lang.String)"], ["com.github.dockerjava.api.command.PushImageCmd", "com.github.dockerjava.core.command.PushImageCmdImpl.withTag(java.lang.String)"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.core.command.PushImageCmdImpl.getAuthConfig()"], ["com.github.dockerjava.api.command.PushImageCmd", "com.github.dockerjava.core.command.PushImageCmdImpl.withAuthConfig(com.github.dockerjava.api.model.AuthConfig)"], ["com.github.dockerjava.core.command.AuthCmdImpl", "com.github.dockerjava.core.command.AuthCmdImpl(com.github.dockerjava.api.command.AuthCmd$Exec, com.github.dockerjava.api.model.AuthConfig)"], ["com.github.dockerjava.api.model.AuthResponse", "com.github.dockerjava.core.command.AuthCmdImpl.exec()"], ["java.lang.Object", "com.github.dockerjava.core.command.AuthCmdImpl.exec()"], ["com.github.dockerjava.api.command.AuthCmd", "com.github.dockerjava.core.command.AuthCmdImpl.withAuthConfig(com.github.dockerjava.api.model.AuthConfig)"], ["com.github.dockerjava.core.command.ListNetworksCmdImpl", "com.github.dockerjava.core.command.ListNetworksCmdImpl(com.github.dockerjava.api.command.ListNetworksCmd$Exec)"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.core.command.ListNetworksCmdImpl.getFilters()"], ["com.github.dockerjava.api.command.ListNetworksCmd", "com.github.dockerjava.core.command.ListNetworksCmdImpl.withIdFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.ListNetworksCmd", "com.github.dockerjava.core.command.ListNetworksCmdImpl.withNameFilter(java.lang.String...)"], ["com.github.dockerjava.core.command.CreateContainerCmdImpl$NetworkingConfig", "com.github.dockerjava.core.command.CreateContainerCmdImpl$NetworkingConfig()"], ["java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork>", "com.github.dockerjava.core.command.CreateContainerCmdImpl$NetworkingConfig.getEndpointsConfig()"], ["com.github.dockerjava.core.command.CreateContainerCmdImpl$NetworkingConfig", "com.github.dockerjava.core.command.CreateContainerCmdImpl$NetworkingConfig.withEndpointsConfig(java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork>)"], ["com.github.dockerjava.core.command.AttachContainerCmdImpl", "com.github.dockerjava.core.command.AttachContainerCmdImpl(com.github.dockerjava.api.command.AttachContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.AttachContainerCmdImpl.getContainerId()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.AttachContainerCmdImpl.hasLogsEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.AttachContainerCmdImpl.hasFollowStreamEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.AttachContainerCmdImpl.hasTimestampsEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.AttachContainerCmdImpl.hasStdoutEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.AttachContainerCmdImpl.hasStderrEnabled()"], ["java.io.InputStream", "com.github.dockerjava.core.command.AttachContainerCmdImpl.getStdin()"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withFollowStream(java.lang.Boolean)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withTimestamps(java.lang.Boolean)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withStdOut(java.lang.Boolean)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withStdErr(java.lang.Boolean)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withStdIn(java.io.InputStream)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withLogs(java.lang.Boolean)"], ["com.github.dockerjava.core.command.VersionCmdImpl", "com.github.dockerjava.core.command.VersionCmdImpl(com.github.dockerjava.api.command.VersionCmd$Exec)"], ["com.github.dockerjava.core.command.InfoCmdImpl", "com.github.dockerjava.core.command.InfoCmdImpl(com.github.dockerjava.api.command.InfoCmd$Exec)"], ["com.github.dockerjava.core.command.SearchImagesCmdImpl", "com.github.dockerjava.core.command.SearchImagesCmdImpl(com.github.dockerjava.api.command.SearchImagesCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.SearchImagesCmdImpl.getTerm()"], ["com.github.dockerjava.api.command.SearchImagesCmd", "com.github.dockerjava.core.command.SearchImagesCmdImpl.withTerm(java.lang.String)"], ["com.github.dockerjava.core.command.ExecStartCmdImpl", "com.github.dockerjava.core.command.ExecStartCmdImpl(com.github.dockerjava.api.command.ExecStartCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.ExecStartCmdImpl.getExecId()"], ["com.github.dockerjava.api.command.ExecStartCmd", "com.github.dockerjava.core.command.ExecStartCmdImpl.withExecId(java.lang.String)"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ExecStartCmdImpl.hasDetachEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ExecStartCmdImpl.hasTtyEnabled()"], ["java.io.InputStream", "com.github.dockerjava.core.command.ExecStartCmdImpl.getStdin()"], ["com.github.dockerjava.api.command.ExecStartCmd", "com.github.dockerjava.core.command.ExecStartCmdImpl.withDetach(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ExecStartCmd", "com.github.dockerjava.core.command.ExecStartCmdImpl.withTty(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ExecStartCmd", "com.github.dockerjava.core.command.ExecStartCmdImpl.withStdIn(java.io.InputStream)"], ["<T extends com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>> T", "com.github.dockerjava.core.command.ExecStartCmdImpl.exec(T)"], ["com.github.dockerjava.core.command.UpdateContainerCmdImpl", "com.github.dockerjava.core.command.UpdateContainerCmdImpl()"], ["com.github.dockerjava.core.command.UpdateContainerCmdImpl", "com.github.dockerjava.core.command.UpdateContainerCmdImpl(com.github.dockerjava.api.command.UpdateContainerCmd$Exec, java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getBlkioWeight()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withBlkioWeight(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getContainerId()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withContainerId(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getCpuPeriod()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withCpuPeriod(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getCpuQuota()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withCpuQuota(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getCpusetCpus()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withCpusetCpus(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getCpusetMems()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withCpusetMems(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getCpuShares()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withCpuShares(java.lang.Integer)"], ["java.lang.Long", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getKernelMemory()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withKernelMemory(java.lang.Long)"], ["java.lang.Long", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getMemory()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withMemory(java.lang.Long)"], ["java.lang.Long", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getMemoryReservation()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withMemoryReservation(java.lang.Long)"], ["java.lang.Long", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getMemorySwap()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withMemorySwap(java.lang.Long)"], ["com.github.dockerjava.api.model.UpdateContainerResponse", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.exec()"], ["java.lang.String", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.toString()"], ["boolean", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.hashCode()"], ["java.lang.Object", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.exec()"], ["com.github.dockerjava.core.command.PingCmdImpl", "com.github.dockerjava.core.command.PingCmdImpl(com.github.dockerjava.api.command.PingCmd$Exec)"], ["com.github.dockerjava.core.command.AbstrDockerCmd", "com.github.dockerjava.core.command.AbstrDockerCmd(com.github.dockerjava.api.command.DockerCmdSyncExec<CMD_T, RES_T>)"], ["RES_T", "com.github.dockerjava.core.command.AbstrDockerCmd.exec()"], ["void", "com.github.dockerjava.core.command.AbstrDockerCmd.close()"], ["java.lang.String", "com.github.dockerjava.core.command.AbstrDockerCmd.toString()"], ["com.github.dockerjava.core.GoLangMatchFileFilter", "com.github.dockerjava.core.GoLangMatchFileFilter(java.io.File, java.util.List<java.lang.String>)"], ["boolean", "com.github.dockerjava.core.GoLangMatchFileFilter.accept(java.io.File)"]]}