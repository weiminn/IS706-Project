{"docker-java-3.0.14.jar": [["org.apache.http.impl.io.ChunkedInputStream", "org.apache.http.impl.io.ChunkedInputStream(org.apache.http.io.SessionInputBuffer, org.apache.http.config.MessageConstraints)", "public org.apache.http.impl.io.ChunkedInputStream(org.apache.http.io.SessionInputBuffer, org.apache.http.config.MessageConstraints)"], ["org.apache.http.impl.io.ChunkedInputStream", "org.apache.http.impl.io.ChunkedInputStream(org.apache.http.io.SessionInputBuffer)", "public org.apache.http.impl.io.ChunkedInputStream(org.apache.http.io.SessionInputBuffer)"], ["int", "org.apache.http.impl.io.ChunkedInputStream.available()", "public int available() throws java.io.IOException"], ["int", "org.apache.http.impl.io.ChunkedInputStream.read()", "public int read() throws java.io.IOException"], ["int", "org.apache.http.impl.io.ChunkedInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["int", "org.apache.http.impl.io.ChunkedInputStream.read(byte[])", "public int read(byte[]) throws java.io.IOException"], ["void", "org.apache.http.impl.io.ChunkedInputStream.close()", "public void close() throws java.io.IOException"], ["org.apache.http.Header[]", "org.apache.http.impl.io.ChunkedInputStream.getFooters()", "public org.apache.http.Header[] getFooters()"], ["com.github.dockerjava.jaxrs.CopyFileFromContainerCmdExec", "com.github.dockerjava.jaxrs.CopyFileFromContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.CopyFileFromContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.ExecCreateCmdExec", "com.github.dockerjava.jaxrs.ExecCreateCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.ExecCreateCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.RestartContainerCmdExec", "com.github.dockerjava.jaxrs.RestartContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.RestartContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.UpdateContainerCmdExec", "com.github.dockerjava.jaxrs.UpdateContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.UpdateContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.ListNetworksCmdExec", "com.github.dockerjava.jaxrs.ListNetworksCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.ListNetworksCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.KillContainerCmdExec", "com.github.dockerjava.jaxrs.KillContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.KillContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.AttachContainerCmdExec", "com.github.dockerjava.jaxrs.AttachContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.AttachContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.InspectImageCmdExec", "com.github.dockerjava.jaxrs.InspectImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.InspectImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.UnixConnectionSocketFactory", "com.github.dockerjava.jaxrs.UnixConnectionSocketFactory(java.net.URI)", "public com.github.dockerjava.jaxrs.UnixConnectionSocketFactory(java.net.URI)"], ["java.net.URI", "com.github.dockerjava.jaxrs.UnixConnectionSocketFactory.sanitizeUri(java.net.URI)", "public static java.net.URI sanitizeUri(java.net.URI)"], ["java.net.Socket", "com.github.dockerjava.jaxrs.UnixConnectionSocketFactory.createSocket(org.apache.http.protocol.HttpContext)", "public java.net.Socket createSocket(org.apache.http.protocol.HttpContext) throws java.io.IOException"], ["java.net.Socket", "com.github.dockerjava.jaxrs.UnixConnectionSocketFactory.connectSocket(int, java.net.Socket, org.apache.http.HttpHost, java.net.InetSocketAddress, java.net.InetSocketAddress, org.apache.http.protocol.HttpContext)", "public java.net.Socket connectSocket(int, java.net.Socket, org.apache.http.HttpHost, java.net.InetSocketAddress, java.net.InetSocketAddress, org.apache.http.protocol.HttpContext) throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$2.run()", "public void run() throws java.net.SocketException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$3.run()", "public void run() throws java.net.SocketException"], ["com.github.dockerjava.jaxrs.InspectContainerCmdExec", "com.github.dockerjava.jaxrs.InspectContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.InspectContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.ContainerDiffCmdExec", "com.github.dockerjava.jaxrs.ContainerDiffCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.ContainerDiffCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.AbstrSyncDockerCmdExec", "com.github.dockerjava.jaxrs.AbstrSyncDockerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.AbstrSyncDockerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["RES_T", "com.github.dockerjava.jaxrs.AbstrSyncDockerCmdExec.exec(CMD_T)", "public RES_T exec(CMD_T)"], ["com.github.dockerjava.jaxrs.LoadImageCmdExec", "com.github.dockerjava.jaxrs.LoadImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.LoadImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.ExecStartCmdExec", "com.github.dockerjava.jaxrs.ExecStartCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.ExecStartCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.filter.LoggingFilter", "com.github.dockerjava.jaxrs.filter.LoggingFilter()", "public com.github.dockerjava.jaxrs.filter.LoggingFilter()"], ["com.github.dockerjava.jaxrs.filter.LoggingFilter", "com.github.dockerjava.jaxrs.filter.LoggingFilter(org.slf4j.Logger, java.lang.Boolean)", "public com.github.dockerjava.jaxrs.filter.LoggingFilter(org.slf4j.Logger, java.lang.Boolean)"], ["com.github.dockerjava.jaxrs.filter.LoggingFilter", "com.github.dockerjava.jaxrs.filter.LoggingFilter(org.slf4j.Logger, int)", "public com.github.dockerjava.jaxrs.filter.LoggingFilter(org.slf4j.Logger, int)"], ["void", "com.github.dockerjava.jaxrs.filter.LoggingFilter.filter(javax.ws.rs.client.ClientRequestContext)", "public void filter(javax.ws.rs.client.ClientRequestContext) throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.filter.LoggingFilter.filter(javax.ws.rs.client.ClientRequestContext, javax.ws.rs.client.ClientResponseContext)", "public void filter(javax.ws.rs.client.ClientRequestContext, javax.ws.rs.client.ClientResponseContext) throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.filter.LoggingFilter.filter(javax.ws.rs.container.ContainerRequestContext)", "public void filter(javax.ws.rs.container.ContainerRequestContext) throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.filter.LoggingFilter.filter(javax.ws.rs.container.ContainerRequestContext, javax.ws.rs.container.ContainerResponseContext)", "public void filter(javax.ws.rs.container.ContainerRequestContext, javax.ws.rs.container.ContainerResponseContext) throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.filter.LoggingFilter.aroundWriteTo(javax.ws.rs.ext.WriterInterceptorContext)", "public void aroundWriteTo(javax.ws.rs.ext.WriterInterceptorContext) throws java.io.IOException, javax.ws.rs.WebApplicationException"], ["com.github.dockerjava.jaxrs.filter.SelectiveLoggingFilter", "com.github.dockerjava.jaxrs.filter.SelectiveLoggingFilter(org.slf4j.Logger, java.lang.Boolean)", "public com.github.dockerjava.jaxrs.filter.SelectiveLoggingFilter(org.slf4j.Logger, java.lang.Boolean)"], ["void", "com.github.dockerjava.jaxrs.filter.SelectiveLoggingFilter.filter(javax.ws.rs.client.ClientRequestContext)", "public void filter(javax.ws.rs.client.ClientRequestContext) throws java.io.IOException"], ["com.github.dockerjava.jaxrs.filter.FollowRedirectsFilter", "com.github.dockerjava.jaxrs.filter.FollowRedirectsFilter()", "public com.github.dockerjava.jaxrs.filter.FollowRedirectsFilter()"], ["void", "com.github.dockerjava.jaxrs.filter.FollowRedirectsFilter.filter(javax.ws.rs.client.ClientRequestContext, javax.ws.rs.client.ClientResponseContext)", "public void filter(javax.ws.rs.client.ClientRequestContext, javax.ws.rs.client.ClientResponseContext) throws java.io.IOException"], ["com.github.dockerjava.jaxrs.filter.ResponseStatusExceptionFilter", "com.github.dockerjava.jaxrs.filter.ResponseStatusExceptionFilter()", "public com.github.dockerjava.jaxrs.filter.ResponseStatusExceptionFilter()"], ["void", "com.github.dockerjava.jaxrs.filter.ResponseStatusExceptionFilter.filter(javax.ws.rs.client.ClientRequestContext, javax.ws.rs.client.ClientResponseContext)", "public void filter(javax.ws.rs.client.ClientRequestContext, javax.ws.rs.client.ClientResponseContext) throws java.io.IOException"], ["com.github.dockerjava.jaxrs.StopContainerCmdExec", "com.github.dockerjava.jaxrs.StopContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.StopContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.CreateImageCmdExec", "com.github.dockerjava.jaxrs.CreateImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.CreateImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.async.POSTCallbackNotifier", "com.github.dockerjava.jaxrs.async.POSTCallbackNotifier(com.github.dockerjava.core.async.ResponseStreamProcessor<T>, com.github.dockerjava.api.async.ResultCallback<T>, javax.ws.rs.client.Invocation$Builder, javax.ws.rs.client.Entity<?>)", "public com.github.dockerjava.jaxrs.async.POSTCallbackNotifier(com.github.dockerjava.core.async.ResponseStreamProcessor<T>, com.github.dockerjava.api.async.ResultCallback<T>, javax.ws.rs.client.Invocation$Builder, javax.ws.rs.client.Entity<?>)"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$1.run()", "public void run() throws java.net.SocketException"], ["com.github.dockerjava.jaxrs.EventsCmdExec", "com.github.dockerjava.jaxrs.EventsCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.EventsCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.ConnectToNetworkCmdExec", "com.github.dockerjava.jaxrs.ConnectToNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.ConnectToNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.InspectExecCmdExec", "com.github.dockerjava.jaxrs.InspectExecCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.InspectExecCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.DisconnectFromNetworkCmdExec", "com.github.dockerjava.jaxrs.DisconnectFromNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.DisconnectFromNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.SaveImageCmdExec", "com.github.dockerjava.jaxrs.SaveImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.SaveImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.LogContainerCmdExec", "com.github.dockerjava.jaxrs.LogContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.LogContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.util.WrappedResponseInputStream", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream(javax.ws.rs.core.Response)", "public com.github.dockerjava.jaxrs.util.WrappedResponseInputStream(javax.ws.rs.core.Response)"], ["int", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.read()", "public int read() throws java.io.IOException"], ["int", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.hashCode()", "public int hashCode()"], ["int", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.read(byte[])", "public int read(byte[]) throws java.io.IOException"], ["boolean", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["long", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.skip(long)", "public long skip(long) throws java.io.IOException"], ["int", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.available()", "public int available() throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.close()", "public void close() throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.mark(int)", "public void mark(int)"], ["void", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.reset()", "public void reset() throws java.io.IOException"], ["boolean", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.markSupported()", "public boolean markSupported()"], ["boolean", "com.github.dockerjava.jaxrs.util.WrappedResponseInputStream.isClosed()", "public boolean isClosed()"], ["com.github.dockerjava.jaxrs.RemoveVolumeCmdExec", "com.github.dockerjava.jaxrs.RemoveVolumeCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.RemoveVolumeCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.AbstrDockerCmdExec", "com.github.dockerjava.jaxrs.AbstrDockerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.AbstrDockerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.RemoveImageCmdExec", "com.github.dockerjava.jaxrs.RemoveImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.RemoveImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.InfoCmdExec", "com.github.dockerjava.jaxrs.InfoCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.InfoCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.CopyArchiveToContainerCmdExec", "com.github.dockerjava.jaxrs.CopyArchiveToContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.CopyArchiveToContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.VersionCmdExec", "com.github.dockerjava.jaxrs.VersionCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.VersionCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$8.run()", "public void run() throws java.net.SocketException"], ["com.github.dockerjava.jaxrs.SearchImagesCmdExec", "com.github.dockerjava.jaxrs.SearchImagesCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.SearchImagesCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.TopContainerCmdExec", "com.github.dockerjava.jaxrs.TopContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.TopContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.InspectNetworkCmdExec", "com.github.dockerjava.jaxrs.InspectNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.InspectNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.CommitCmdExec", "com.github.dockerjava.jaxrs.CommitCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.CommitCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.AuthCmdExec", "com.github.dockerjava.jaxrs.AuthCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.AuthCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.StartContainerCmdExec", "com.github.dockerjava.jaxrs.StartContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.StartContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.TagImageCmdExec", "com.github.dockerjava.jaxrs.TagImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.TagImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.WaitContainerCmdExec", "com.github.dockerjava.jaxrs.WaitContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.WaitContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.CreateVolumeCmdExec", "com.github.dockerjava.jaxrs.CreateVolumeCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.CreateVolumeCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.model.Image", "com.github.dockerjava.api.model.Image()", "public com.github.dockerjava.api.model.Image()"], ["java.lang.String", "com.github.dockerjava.api.model.Image.getId()", "public java.lang.String getId()"], ["java.lang.String[]", "com.github.dockerjava.api.model.Image.getRepoTags()", "public java.lang.String[] getRepoTags()"], ["java.lang.String", "com.github.dockerjava.api.model.Image.getParentId()", "public java.lang.String getParentId()"], ["java.lang.Long", "com.github.dockerjava.api.model.Image.getCreated()", "public java.lang.Long getCreated()"], ["java.lang.Long", "com.github.dockerjava.api.model.Image.getSize()", "public java.lang.Long getSize()"], ["java.lang.Long", "com.github.dockerjava.api.model.Image.getVirtualSize()", "public java.lang.Long getVirtualSize()"], ["java.lang.String", "com.github.dockerjava.api.model.Image.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.Network$ContainerNetworkConfig", "com.github.dockerjava.api.model.Network$ContainerNetworkConfig()", "public com.github.dockerjava.api.model.Network$ContainerNetworkConfig()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$ContainerNetworkConfig.getEndpointId()", "public java.lang.String getEndpointId()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$ContainerNetworkConfig.getMacAddress()", "public java.lang.String getMacAddress()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$ContainerNetworkConfig.getIpv4Address()", "public java.lang.String getIpv4Address()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$ContainerNetworkConfig.getIpv6Address()", "public java.lang.String getIpv6Address()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$ContainerNetworkConfig.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.Binds$Deserializer", "com.github.dockerjava.api.model.Binds$Deserializer()", "public com.github.dockerjava.api.model.Binds$Deserializer()"], ["com.github.dockerjava.api.model.Binds", "com.github.dockerjava.api.model.Binds$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public com.github.dockerjava.api.model.Binds deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["java.lang.Object", "com.github.dockerjava.api.model.Binds$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.AuthResponse", "com.github.dockerjava.api.model.AuthResponse()", "public com.github.dockerjava.api.model.AuthResponse()"], ["java.lang.String", "com.github.dockerjava.api.model.AuthResponse.getStatus()", "public java.lang.String getStatus()"], ["java.lang.String", "com.github.dockerjava.api.model.AuthResponse.getIdentityToken()", "public java.lang.String getIdentityToken()"], ["com.github.dockerjava.api.model.NetworkSettings", "com.github.dockerjava.api.model.NetworkSettings()", "public com.github.dockerjava.api.model.NetworkSettings()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getIpAddress()", "public java.lang.String getIpAddress()"], ["java.lang.Integer", "com.github.dockerjava.api.model.NetworkSettings.getIpPrefixLen()", "public java.lang.Integer getIpPrefixLen()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getGateway()", "public java.lang.String getGateway()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getBridge()", "public java.lang.String getBridge()"], ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>", "com.github.dockerjava.api.model.NetworkSettings.getPortMapping()", "public java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> getPortMapping()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getMacAddress()", "public java.lang.String getMacAddress()"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.api.model.NetworkSettings.getPorts()", "public com.github.dockerjava.api.model.Ports getPorts()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getEndpointID()", "public java.lang.String getEndpointID()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getIpV6Gateway()", "public java.lang.String getIpV6Gateway()"], ["java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork>", "com.github.dockerjava.api.model.NetworkSettings.getNetworks()", "public java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork> getNetworks()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getSandboxId()", "public java.lang.String getSandboxId()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getSandboxKey()", "public java.lang.String getSandboxKey()"], ["java.lang.Object", "com.github.dockerjava.api.model.NetworkSettings.getSecondaryIPAddresses()", "public java.lang.Object getSecondaryIPAddresses()"], ["java.lang.Object", "com.github.dockerjava.api.model.NetworkSettings.getSecondaryIPv6Addresses()", "public java.lang.Object getSecondaryIPv6Addresses()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.NetworkSettings.getHairpinMode()", "public java.lang.Boolean getHairpinMode()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getLinkLocalIPv6Address()", "public java.lang.String getLinkLocalIPv6Address()"], ["java.lang.Integer", "com.github.dockerjava.api.model.NetworkSettings.getLinkLocalIPv6PrefixLen()", "public java.lang.Integer getLinkLocalIPv6PrefixLen()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.getGlobalIPv6Address()", "public java.lang.String getGlobalIPv6Address()"], ["java.lang.Integer", "com.github.dockerjava.api.model.NetworkSettings.getGlobalIPv6PrefixLen()", "public java.lang.Integer getGlobalIPv6PrefixLen()"], ["java.lang.String", "com.github.dockerjava.api.model.NetworkSettings.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.ContainerNetworkSettings", "com.github.dockerjava.api.model.ContainerNetworkSettings()", "public com.github.dockerjava.api.model.ContainerNetworkSettings()"], ["java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork>", "com.github.dockerjava.api.model.ContainerNetworkSettings.getNetworks()", "public java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork> getNetworks()"], ["com.github.dockerjava.api.model.ContainerNetworkSettings", "com.github.dockerjava.api.model.ContainerNetworkSettings.withNetworks(java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork>)", "public com.github.dockerjava.api.model.ContainerNetworkSettings withNetworks(java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork>)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetworkSettings.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.ContainerNetworkSettings.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.ContainerNetworkSettings.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.Identifier", "com.github.dockerjava.api.model.Identifier(com.github.dockerjava.api.model.Repository, java.lang.String)", "public com.github.dockerjava.api.model.Identifier(com.github.dockerjava.api.model.Repository, java.lang.String)"], ["com.github.dockerjava.api.model.Identifier", "com.github.dockerjava.api.model.Identifier.fromCompoundString(java.lang.String)", "public static com.github.dockerjava.api.model.Identifier fromCompoundString(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Identifier.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.ResponseItem$AuxDetail", "com.github.dockerjava.api.model.ResponseItem$AuxDetail()", "public com.github.dockerjava.api.model.ResponseItem$AuxDetail()"], ["java.lang.Integer", "com.github.dockerjava.api.model.ResponseItem$AuxDetail.getSize()", "public java.lang.Integer getSize()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem$AuxDetail.getTag()", "public java.lang.String getTag()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem$AuxDetail.getDigest()", "public java.lang.String getDigest()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem$AuxDetail.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.Links", "com.github.dockerjava.api.model.Links(com.github.dockerjava.api.model.Link...)", "public com.github.dockerjava.api.model.Links(com.github.dockerjava.api.model.Link...)"], ["com.github.dockerjava.api.model.Links", "com.github.dockerjava.api.model.Links(java.util.List<com.github.dockerjava.api.model.Link>)", "public com.github.dockerjava.api.model.Links(java.util.List<com.github.dockerjava.api.model.Link>)"], ["com.github.dockerjava.api.model.Link[]", "com.github.dockerjava.api.model.Links.getLinks()", "public com.github.dockerjava.api.model.Link[] getLinks()"], ["com.github.dockerjava.api.model.Link", "com.github.dockerjava.api.model.Link(java.lang.String, java.lang.String)", "public com.github.dockerjava.api.model.Link(java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Link.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.github.dockerjava.api.model.Link.getAlias()", "public java.lang.String getAlias()"], ["com.github.dockerjava.api.model.Link", "com.github.dockerjava.api.model.Link.parse(java.lang.String)", "public static com.github.dockerjava.api.model.Link parse(java.lang.String) throws java.lang.IllegalArgumentException"], ["boolean", "com.github.dockerjava.api.model.Link.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Link.hashCode()", "public int hashCode()"], ["java.lang.String", "com.github.dockerjava.api.model.Link.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.Ulimit", "com.github.dockerjava.api.model.Ulimit()", "public com.github.dockerjava.api.model.Ulimit()"], ["com.github.dockerjava.api.model.Ulimit", "com.github.dockerjava.api.model.Ulimit(java.lang.String, int, int)", "public com.github.dockerjava.api.model.Ulimit(java.lang.String, int, int)"], ["java.lang.String", "com.github.dockerjava.api.model.Ulimit.getName()", "public java.lang.String getName()"], ["java.lang.Integer", "com.github.dockerjava.api.model.Ulimit.getSoft()", "public java.lang.Integer getSoft()"], ["java.lang.Integer", "com.github.dockerjava.api.model.Ulimit.getHard()", "public java.lang.Integer getHard()"], ["boolean", "com.github.dockerjava.api.model.Ulimit.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Ulimit.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.Statistics", "com.github.dockerjava.api.model.Statistics()", "public com.github.dockerjava.api.model.Statistics()"], ["java.util.Map<java.lang.String, java.lang.Object>", "com.github.dockerjava.api.model.Statistics.getNetworks()", "public java.util.Map<java.lang.String, java.lang.Object> getNetworks()"], ["java.util.Map<java.lang.String, java.lang.Object>", "com.github.dockerjava.api.model.Statistics.getNetwork()", "public java.util.Map<java.lang.String, java.lang.Object> getNetwork()"], ["java.util.Map<java.lang.String, java.lang.Object>", "com.github.dockerjava.api.model.Statistics.getCpuStats()", "public java.util.Map<java.lang.String, java.lang.Object> getCpuStats()"], ["java.util.Map<java.lang.String, java.lang.Object>", "com.github.dockerjava.api.model.Statistics.getMemoryStats()", "public java.util.Map<java.lang.String, java.lang.Object> getMemoryStats()"], ["java.util.Map<java.lang.String, java.lang.Object>", "com.github.dockerjava.api.model.Statistics.getBlkioStats()", "public java.util.Map<java.lang.String, java.lang.Object> getBlkioStats()"], ["java.lang.String", "com.github.dockerjava.api.model.Statistics.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.VolumeBinds$Serializer", "com.github.dockerjava.api.model.VolumeBinds$Serializer()", "public com.github.dockerjava.api.model.VolumeBinds$Serializer()"], ["void", "com.github.dockerjava.api.model.VolumeBinds$Serializer.serialize(com.github.dockerjava.api.model.VolumeBinds, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(com.github.dockerjava.api.model.VolumeBinds, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["void", "com.github.dockerjava.api.model.VolumeBinds$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.InternetProtocol[]", "com.github.dockerjava.api.model.InternetProtocol.values()", "public static com.github.dockerjava.api.model.InternetProtocol[] values()"], ["com.github.dockerjava.api.model.InternetProtocol", "com.github.dockerjava.api.model.InternetProtocol.valueOf(java.lang.String)", "public static com.github.dockerjava.api.model.InternetProtocol valueOf(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.InternetProtocol.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.InternetProtocol", "com.github.dockerjava.api.model.InternetProtocol.parse(java.lang.String)", "public static com.github.dockerjava.api.model.InternetProtocol parse(java.lang.String) throws java.lang.IllegalArgumentException"], ["com.github.dockerjava.api.model.VolumeRW$Deserializer", "com.github.dockerjava.api.model.VolumeRW$Deserializer()", "public com.github.dockerjava.api.model.VolumeRW$Deserializer()"], ["com.github.dockerjava.api.model.VolumeRW", "com.github.dockerjava.api.model.VolumeRW$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public com.github.dockerjava.api.model.VolumeRW deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["java.lang.Object", "com.github.dockerjava.api.model.VolumeRW$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.VolumesRW$Deserializer", "com.github.dockerjava.api.model.VolumesRW$Deserializer()", "public com.github.dockerjava.api.model.VolumesRW$Deserializer()"], ["com.github.dockerjava.api.model.VolumesRW", "com.github.dockerjava.api.model.VolumesRW$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public com.github.dockerjava.api.model.VolumesRW deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["java.lang.Object", "com.github.dockerjava.api.model.VolumesRW$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.VolumeBinds", "com.github.dockerjava.api.model.VolumeBinds(com.github.dockerjava.api.model.VolumeBind...)", "public com.github.dockerjava.api.model.VolumeBinds(com.github.dockerjava.api.model.VolumeBind...)"], ["com.github.dockerjava.api.model.VolumeBind[]", "com.github.dockerjava.api.model.VolumeBinds.getBinds()", "public com.github.dockerjava.api.model.VolumeBind[] getBinds()"], ["com.github.dockerjava.api.model.Ports$Deserializer", "com.github.dockerjava.api.model.Ports$Deserializer()", "public com.github.dockerjava.api.model.Ports$Deserializer()"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.api.model.Ports$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public com.github.dockerjava.api.model.Ports deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["java.lang.Object", "com.github.dockerjava.api.model.Ports$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.api.model.LogConfig(com.github.dockerjava.api.model.LogConfig$LoggingType, java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.api.model.LogConfig(com.github.dockerjava.api.model.LogConfig$LoggingType, java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.api.model.LogConfig(com.github.dockerjava.api.model.LogConfig$LoggingType)", "public com.github.dockerjava.api.model.LogConfig(com.github.dockerjava.api.model.LogConfig$LoggingType)"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.api.model.LogConfig()", "public com.github.dockerjava.api.model.LogConfig()"], ["com.github.dockerjava.api.model.LogConfig$LoggingType", "com.github.dockerjava.api.model.LogConfig.getType()", "public com.github.dockerjava.api.model.LogConfig$LoggingType getType()"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.api.model.LogConfig.setType(com.github.dockerjava.api.model.LogConfig$LoggingType)", "public com.github.dockerjava.api.model.LogConfig setType(com.github.dockerjava.api.model.LogConfig$LoggingType)"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.LogConfig.getConfig()", "public java.util.Map<java.lang.String, java.lang.String> getConfig()"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.api.model.LogConfig.setConfig(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.api.model.LogConfig setConfig(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.model.HealthCheck", "com.github.dockerjava.api.model.HealthCheck()", "public com.github.dockerjava.api.model.HealthCheck()"], ["java.lang.Long", "com.github.dockerjava.api.model.HealthCheck.getInterval()", "public java.lang.Long getInterval()"], ["java.lang.Long", "com.github.dockerjava.api.model.HealthCheck.getTimeout()", "public java.lang.Long getTimeout()"], ["com.github.dockerjava.api.model.Volumes$Deserializer", "com.github.dockerjava.api.model.Volumes$Deserializer()", "public com.github.dockerjava.api.model.Volumes$Deserializer()"], ["com.github.dockerjava.api.model.Volumes", "com.github.dockerjava.api.model.Volumes$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public com.github.dockerjava.api.model.Volumes deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["java.lang.Object", "com.github.dockerjava.api.model.Volumes$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.Binds", "com.github.dockerjava.api.model.Binds(com.github.dockerjava.api.model.Bind...)", "public com.github.dockerjava.api.model.Binds(com.github.dockerjava.api.model.Bind...)"], ["com.github.dockerjava.api.model.Bind[]", "com.github.dockerjava.api.model.Binds.getBinds()", "public com.github.dockerjava.api.model.Bind[] getBinds()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig()", "public com.github.dockerjava.api.model.ContainerConfig()"], ["com.github.dockerjava.api.model.ExposedPort[]", "com.github.dockerjava.api.model.ContainerConfig.getExposedPorts()", "public com.github.dockerjava.api.model.ExposedPort[] getExposedPorts()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getAttachStderr()", "public java.lang.Boolean getAttachStderr()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withAttachStderr(java.lang.Boolean)", "public com.github.dockerjava.api.model.ContainerConfig withAttachStderr(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getAttachStdin()", "public java.lang.Boolean getAttachStdin()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withAttachStdin(java.lang.Boolean)", "public com.github.dockerjava.api.model.ContainerConfig withAttachStdin(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getAttachStdout()", "public java.lang.Boolean getAttachStdout()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withAttachStdout(java.lang.Boolean)", "public com.github.dockerjava.api.model.ContainerConfig withAttachStdout(java.lang.Boolean)"], ["java.lang.String[]", "com.github.dockerjava.api.model.ContainerConfig.getCmd()", "public java.lang.String[] getCmd()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withCmd(java.lang.String[])", "public com.github.dockerjava.api.model.ContainerConfig withCmd(java.lang.String[])"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.getDomainName()", "public java.lang.String getDomainName()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withDomainName(java.lang.String)", "public com.github.dockerjava.api.model.ContainerConfig withDomainName(java.lang.String)"], ["java.lang.String[]", "com.github.dockerjava.api.model.ContainerConfig.getEntrypoint()", "public java.lang.String[] getEntrypoint()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withEntrypoint(java.lang.String[])", "public com.github.dockerjava.api.model.ContainerConfig withEntrypoint(java.lang.String[])"], ["java.lang.String[]", "com.github.dockerjava.api.model.ContainerConfig.getEnv()", "public java.lang.String[] getEnv()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withEnv(java.lang.String[])", "public com.github.dockerjava.api.model.ContainerConfig withEnv(java.lang.String[])"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withExposedPorts(com.github.dockerjava.api.model.ExposedPorts)", "public com.github.dockerjava.api.model.ContainerConfig withExposedPorts(com.github.dockerjava.api.model.ExposedPorts)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.getHostName()", "public java.lang.String getHostName()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withHostName(java.lang.String)", "public com.github.dockerjava.api.model.ContainerConfig withHostName(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.getImage()", "public java.lang.String getImage()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withImage(java.lang.String)", "public com.github.dockerjava.api.model.ContainerConfig withImage(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.ContainerConfig.getLabels()", "public java.util.Map<java.lang.String, java.lang.String> getLabels()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withLabels(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.api.model.ContainerConfig withLabels(java.util.Map<java.lang.String, java.lang.String>)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.getMacAddress()", "public java.lang.String getMacAddress()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withMacAddress(java.lang.String)", "public com.github.dockerjava.api.model.ContainerConfig withMacAddress(java.lang.String)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getNetworkDisabled()", "public java.lang.Boolean getNetworkDisabled()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withNetworkDisabled(java.lang.Boolean)", "public com.github.dockerjava.api.model.ContainerConfig withNetworkDisabled(java.lang.Boolean)"], ["java.lang.String[]", "com.github.dockerjava.api.model.ContainerConfig.getOnBuild()", "public java.lang.String[] getOnBuild()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withOnBuild(java.lang.String[])", "public com.github.dockerjava.api.model.ContainerConfig withOnBuild(java.lang.String[])"], ["java.lang.String[]", "com.github.dockerjava.api.model.ContainerConfig.getPortSpecs()", "public java.lang.String[] getPortSpecs()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withPortSpecs(java.lang.String[])", "public com.github.dockerjava.api.model.ContainerConfig withPortSpecs(java.lang.String[])"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getStdInOnce()", "public java.lang.Boolean getStdInOnce()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withStdInOnce(java.lang.Boolean)", "public com.github.dockerjava.api.model.ContainerConfig withStdInOnce(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getStdinOpen()", "public java.lang.Boolean getStdinOpen()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withStdinOpen(java.lang.Boolean)", "public com.github.dockerjava.api.model.ContainerConfig withStdinOpen(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.ContainerConfig.getTty()", "public java.lang.Boolean getTty()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withTty(java.lang.Boolean)", "public com.github.dockerjava.api.model.ContainerConfig withTty(java.lang.Boolean)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.getUser()", "public java.lang.String getUser()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withUser(java.lang.String)", "public com.github.dockerjava.api.model.ContainerConfig withUser(java.lang.String)"], ["java.util.Map<java.lang.String, ?>", "com.github.dockerjava.api.model.ContainerConfig.getVolumes()", "public java.util.Map<java.lang.String, ?> getVolumes()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withVolumes(java.util.Map<java.lang.String, ?>)", "public com.github.dockerjava.api.model.ContainerConfig withVolumes(java.util.Map<java.lang.String, ?>)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.getWorkingDir()", "public java.lang.String getWorkingDir()"], ["com.github.dockerjava.api.model.HealthCheck", "com.github.dockerjava.api.model.ContainerConfig.getHealthcheck()", "public com.github.dockerjava.api.model.HealthCheck getHealthcheck()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.model.ContainerConfig.withWorkingDir(java.lang.String)", "public com.github.dockerjava.api.model.ContainerConfig withWorkingDir(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerConfig.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.ContainerConfig.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.ContainerConfig.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.api.model.Ports()", "public com.github.dockerjava.api.model.Ports()"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.api.model.Ports(com.github.dockerjava.api.model.ExposedPort, com.github.dockerjava.api.model.Ports$Binding)", "public com.github.dockerjava.api.model.Ports(com.github.dockerjava.api.model.ExposedPort, com.github.dockerjava.api.model.Ports$Binding)"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.api.model.Ports(com.github.dockerjava.api.model.PortBinding...)", "public com.github.dockerjava.api.model.Ports(com.github.dockerjava.api.model.PortBinding...)"], ["void", "com.github.dockerjava.api.model.Ports.bind(com.github.dockerjava.api.model.ExposedPort, com.github.dockerjava.api.model.Ports$Binding)", "public void bind(com.github.dockerjava.api.model.ExposedPort, com.github.dockerjava.api.model.Ports$Binding)"], ["void", "com.github.dockerjava.api.model.Ports.add(com.github.dockerjava.api.model.PortBinding...)", "public void add(com.github.dockerjava.api.model.PortBinding...)"], ["java.lang.String", "com.github.dockerjava.api.model.Ports.toString()", "public java.lang.String toString()"], ["java.util.Map<com.github.dockerjava.api.model.ExposedPort, com.github.dockerjava.api.model.Ports$Binding[]>", "com.github.dockerjava.api.model.Ports.getBindings()", "public java.util.Map<com.github.dockerjava.api.model.ExposedPort, com.github.dockerjava.api.model.Ports$Binding[]> getBindings()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event()", "public com.github.dockerjava.api.model.Event()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event(java.lang.String, java.lang.String, java.lang.String, java.lang.Long)", "public com.github.dockerjava.api.model.Event(java.lang.String, java.lang.String, java.lang.String, java.lang.Long)"], ["java.lang.String", "com.github.dockerjava.api.model.Event.getStatus()", "public java.lang.String getStatus()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withStatus(java.lang.String)", "public com.github.dockerjava.api.model.Event withStatus(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Event.getId()", "public java.lang.String getId()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withId(java.lang.String)", "public com.github.dockerjava.api.model.Event withId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Event.getFrom()", "public java.lang.String getFrom()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withFrom(java.lang.String)", "public com.github.dockerjava.api.model.Event withFrom(java.lang.String)"], ["java.lang.Long", "com.github.dockerjava.api.model.Event.getTime()", "public java.lang.Long getTime()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withTime(java.lang.Long)", "public com.github.dockerjava.api.model.Event withTime(java.lang.Long)"], ["java.lang.Long", "com.github.dockerjava.api.model.Event.getTimeNano()", "public java.lang.Long getTimeNano()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withTimenano(java.lang.Long)", "public com.github.dockerjava.api.model.Event withTimenano(java.lang.Long)"], ["com.github.dockerjava.api.model.Node", "com.github.dockerjava.api.model.Event.getNode()", "public com.github.dockerjava.api.model.Node getNode()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withNode(com.github.dockerjava.api.model.Node)", "public com.github.dockerjava.api.model.Event withNode(com.github.dockerjava.api.model.Node)"], ["com.github.dockerjava.api.model.EventType", "com.github.dockerjava.api.model.Event.getType()", "public com.github.dockerjava.api.model.EventType getType()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withType(com.github.dockerjava.api.model.EventType)", "public com.github.dockerjava.api.model.Event withType(com.github.dockerjava.api.model.EventType)"], ["java.lang.String", "com.github.dockerjava.api.model.Event.getAction()", "public java.lang.String getAction()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withAction(java.lang.String)", "public com.github.dockerjava.api.model.Event withAction(java.lang.String)"], ["com.github.dockerjava.api.model.EventActor", "com.github.dockerjava.api.model.Event.getActor()", "public com.github.dockerjava.api.model.EventActor getActor()"], ["com.github.dockerjava.api.model.Event", "com.github.dockerjava.api.model.Event.withEventActor(com.github.dockerjava.api.model.EventActor)", "public com.github.dockerjava.api.model.Event withEventActor(com.github.dockerjava.api.model.EventActor)"], ["java.lang.String", "com.github.dockerjava.api.model.Event.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.Event.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Event.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.ExposedPort$Deserializer", "com.github.dockerjava.api.model.ExposedPort$Deserializer()", "public com.github.dockerjava.api.model.ExposedPort$Deserializer()"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public com.github.dockerjava.api.model.ExposedPort deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["java.lang.Object", "com.github.dockerjava.api.model.ExposedPort$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.StreamType[]", "com.github.dockerjava.api.model.StreamType.values()", "public static com.github.dockerjava.api.model.StreamType[] values()"], ["com.github.dockerjava.api.model.StreamType", "com.github.dockerjava.api.model.StreamType.valueOf(java.lang.String)", "public static com.github.dockerjava.api.model.StreamType valueOf(java.lang.String)"], ["com.github.dockerjava.api.model.PortBinding", "com.github.dockerjava.api.model.PortBinding(com.github.dockerjava.api.model.Ports$Binding, com.github.dockerjava.api.model.ExposedPort)", "public com.github.dockerjava.api.model.PortBinding(com.github.dockerjava.api.model.Ports$Binding, com.github.dockerjava.api.model.ExposedPort)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.PortBinding.getBinding()", "public com.github.dockerjava.api.model.Ports$Binding getBinding()"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.PortBinding.getExposedPort()", "public com.github.dockerjava.api.model.ExposedPort getExposedPort()"], ["com.github.dockerjava.api.model.PortBinding", "com.github.dockerjava.api.model.PortBinding.parse(java.lang.String)", "public static com.github.dockerjava.api.model.PortBinding parse(java.lang.String) throws java.lang.IllegalArgumentException"], ["boolean", "com.github.dockerjava.api.model.PortBinding.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.PortBinding.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.VolumeRW$Serializer", "com.github.dockerjava.api.model.VolumeRW$Serializer()", "public com.github.dockerjava.api.model.VolumeRW$Serializer()"], ["void", "com.github.dockerjava.api.model.VolumeRW$Serializer.serialize(com.github.dockerjava.api.model.VolumeRW, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(com.github.dockerjava.api.model.VolumeRW, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["void", "com.github.dockerjava.api.model.VolumeRW$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.command.GraphDriver", "com.github.dockerjava.api.command.GraphDriver()", "public com.github.dockerjava.api.command.GraphDriver()"], ["com.github.dockerjava.api.command.GraphData", "com.github.dockerjava.api.command.GraphDriver.getData()", "public com.github.dockerjava.api.command.GraphData getData()"], ["com.github.dockerjava.api.command.GraphDriver", "com.github.dockerjava.api.command.GraphDriver.withData(com.github.dockerjava.api.command.GraphData)", "public com.github.dockerjava.api.command.GraphDriver withData(com.github.dockerjava.api.command.GraphData)"], ["java.lang.String", "com.github.dockerjava.api.command.GraphDriver.getName()", "public java.lang.String getName()"], ["com.github.dockerjava.api.command.GraphDriver", "com.github.dockerjava.api.command.GraphDriver.withName(java.lang.String)", "public com.github.dockerjava.api.command.GraphDriver withName(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.GraphDriver.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.command.GraphDriver.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.command.GraphDriver.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.command.ExecCreateCmdResponse", "com.github.dockerjava.api.command.ExecCreateCmdResponse()", "public com.github.dockerjava.api.command.ExecCreateCmdResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.ExecCreateCmdResponse.getId()", "public java.lang.String getId()"], ["java.lang.String", "com.github.dockerjava.api.command.ExecCreateCmdResponse.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.command.InspectExecResponse$Container", "com.github.dockerjava.api.command.InspectExecResponse$Container(com.github.dockerjava.api.command.InspectExecResponse)", "public com.github.dockerjava.api.command.InspectExecResponse$Container(com.github.dockerjava.api.command.InspectExecResponse)"], ["com.github.dockerjava.api.model.NetworkSettings", "com.github.dockerjava.api.command.InspectExecResponse$Container.getNetworkSettings()", "public com.github.dockerjava.api.model.NetworkSettings getNetworkSettings()"], ["void", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["void", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXOutputStream.close()", "public void close() throws java.io.IOException"], ["com.github.dockerjava.jaxrs.ApacheUnixSocket", "com.github.dockerjava.jaxrs.ApacheUnixSocket()", "public com.github.dockerjava.jaxrs.ApacheUnixSocket() throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.connect(java.net.SocketAddress)", "public void connect(java.net.SocketAddress) throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.connect(java.net.SocketAddress, int)", "public void connect(java.net.SocketAddress, int) throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.bind(java.net.SocketAddress)", "public void bind(java.net.SocketAddress) throws java.io.IOException"], ["java.net.InetAddress", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getInetAddress()", "public java.net.InetAddress getInetAddress()"], ["java.net.InetAddress", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getLocalAddress()", "public java.net.InetAddress getLocalAddress()"], ["int", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getPort()", "public int getPort()"], ["int", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getLocalPort()", "public int getLocalPort()"], ["java.net.SocketAddress", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getRemoteSocketAddress()", "public java.net.SocketAddress getRemoteSocketAddress()"], ["java.net.SocketAddress", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getLocalSocketAddress()", "public java.net.SocketAddress getLocalSocketAddress()"], ["java.nio.channels.SocketChannel", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getChannel()", "public java.nio.channels.SocketChannel getChannel()"], ["java.io.InputStream", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getInputStream()", "public java.io.InputStream getInputStream() throws java.io.IOException"], ["java.io.OutputStream", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getOutputStream()", "public java.io.OutputStream getOutputStream() throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setTcpNoDelay(boolean)", "public void setTcpNoDelay(boolean) throws java.net.SocketException"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getTcpNoDelay()", "public boolean getTcpNoDelay() throws java.net.SocketException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setSoLinger(boolean, int)", "public void setSoLinger(boolean, int) throws java.net.SocketException"], ["int", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getSoLinger()", "public int getSoLinger() throws java.net.SocketException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.sendUrgentData(int)", "public void sendUrgentData(int) throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setOOBInline(boolean)", "public void setOOBInline(boolean) throws java.net.SocketException"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getOOBInline()", "public boolean getOOBInline() throws java.net.SocketException"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.void setSoTimeout(int)", "public synchronized void setSoTimeout(int) throws java.net.SocketException"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.int getSoTimeout()", "public synchronized int getSoTimeout() throws java.net.SocketException"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.void setSendBufferSize(int)", "public synchronized void setSendBufferSize(int) throws java.net.SocketException"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.int getSendBufferSize()", "public synchronized int getSendBufferSize() throws java.net.SocketException"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.void setReceiveBufferSize(int)", "public synchronized void setReceiveBufferSize(int) throws java.net.SocketException"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.int getReceiveBufferSize()", "public synchronized int getReceiveBufferSize() throws java.net.SocketException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setKeepAlive(boolean)", "public void setKeepAlive(boolean) throws java.net.SocketException"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getKeepAlive()", "public boolean getKeepAlive() throws java.net.SocketException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setTrafficClass(int)", "public void setTrafficClass(int) throws java.net.SocketException"], ["int", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getTrafficClass()", "public int getTrafficClass() throws java.net.SocketException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setReuseAddress(boolean)", "public void setReuseAddress(boolean) throws java.net.SocketException"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.getReuseAddress()", "public boolean getReuseAddress() throws java.net.SocketException"], ["synchronized", "com.github.dockerjava.jaxrs.ApacheUnixSocket.void close()", "public synchronized void close() throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.shutdownInput()", "public void shutdownInput() throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.shutdownOutput()", "public void shutdownOutput() throws java.io.IOException"], ["java.lang.String", "com.github.dockerjava.jaxrs.ApacheUnixSocket.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.isConnected()", "public boolean isConnected()"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.isBound()", "public boolean isBound()"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.isClosed()", "public boolean isClosed()"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.isInputShutdown()", "public boolean isInputShutdown()"], ["boolean", "com.github.dockerjava.jaxrs.ApacheUnixSocket.isOutputShutdown()", "public boolean isOutputShutdown()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket.setPerformancePreferences(int, int, int)", "public void setPerformancePreferences(int, int, int)"], ["com.github.dockerjava.jaxrs.DockerCmdExecFactoryImpl", "com.github.dockerjava.jaxrs.DockerCmdExecFactoryImpl()", "public com.github.dockerjava.jaxrs.DockerCmdExecFactoryImpl()"], ["com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["java.lang.Void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec.exec(CMD_T, com.github.dockerjava.api.async.ResultCallback<A_RES_T>)", "public java.lang.Void exec(CMD_T, com.github.dockerjava.api.async.ResultCallback<A_RES_T>)"], ["java.lang.Void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec.exec(com.github.dockerjava.api.command.DockerCmd, com.github.dockerjava.api.async.ResultCallback)", "public java.lang.Void exec(com.github.dockerjava.api.command.DockerCmd, com.github.dockerjava.api.async.ResultCallback)"], ["com.github.dockerjava.jaxrs.PullImageCmdExec", "com.github.dockerjava.jaxrs.PullImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.PullImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.RenameContainerCmdExec", "com.github.dockerjava.jaxrs.RenameContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.RenameContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.RemoveContainerCmdExec", "com.github.dockerjava.jaxrs.RemoveContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.RemoveContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.model.Network$Ipam$Config", "com.github.dockerjava.api.model.Network$Ipam$Config()", "public com.github.dockerjava.api.model.Network$Ipam$Config()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$Ipam$Config.getSubnet()", "public java.lang.String getSubnet()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$Ipam$Config.getIpRange()", "public java.lang.String getIpRange()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$Ipam$Config.getGateway()", "public java.lang.String getGateway()"], ["com.github.dockerjava.api.model.Network$Ipam$Config", "com.github.dockerjava.api.model.Network$Ipam$Config.withSubnet(java.lang.String)", "public com.github.dockerjava.api.model.Network$Ipam$Config withSubnet(java.lang.String)"], ["com.github.dockerjava.api.model.Network$Ipam$Config", "com.github.dockerjava.api.model.Network$Ipam$Config.withIpRange(java.lang.String)", "public com.github.dockerjava.api.model.Network$Ipam$Config withIpRange(java.lang.String)"], ["com.github.dockerjava.api.model.Network$Ipam$Config", "com.github.dockerjava.api.model.Network$Ipam$Config.withGateway(java.lang.String)", "public com.github.dockerjava.api.model.Network$Ipam$Config withGateway(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Network$Ipam$Config.getNetworkID()", "public java.lang.String getNetworkID()"], ["void", "com.github.dockerjava.api.model.Network$Ipam$Config.setNetworkID(java.lang.String)", "public void setNetworkID(java.lang.String)"], ["com.github.dockerjava.api.model.ExposedPort$Serializer", "com.github.dockerjava.api.model.ExposedPort$Serializer()", "public com.github.dockerjava.api.model.ExposedPort$Serializer()"], ["void", "com.github.dockerjava.api.model.ExposedPort$Serializer.serialize(com.github.dockerjava.api.model.ExposedPort, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(com.github.dockerjava.api.model.ExposedPort, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["void", "com.github.dockerjava.api.model.ExposedPort$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.LogConfig$LoggingType$Deserializer", "com.github.dockerjava.api.model.LogConfig$LoggingType$Deserializer()", "public com.github.dockerjava.api.model.LogConfig$LoggingType$Deserializer()"], ["com.github.dockerjava.api.model.LogConfig$LoggingType", "com.github.dockerjava.api.model.LogConfig$LoggingType$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public com.github.dockerjava.api.model.LogConfig$LoggingType deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["java.lang.Object", "com.github.dockerjava.api.model.LogConfig$LoggingType$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork()", "public com.github.dockerjava.api.model.ContainerNetwork()"], ["java.util.List<java.lang.String>", "com.github.dockerjava.api.model.ContainerNetwork.getAliases()", "public java.util.List<java.lang.String> getAliases()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withAliases(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.model.ContainerNetwork withAliases(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withAliases(java.lang.String...)", "public com.github.dockerjava.api.model.ContainerNetwork withAliases(java.lang.String...)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getEndpointId()", "public java.lang.String getEndpointId()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withEndpointId(java.lang.String)", "public com.github.dockerjava.api.model.ContainerNetwork withEndpointId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getGateway()", "public java.lang.String getGateway()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withGateway(java.lang.String)", "public com.github.dockerjava.api.model.ContainerNetwork withGateway(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getGlobalIPv6Address()", "public java.lang.String getGlobalIPv6Address()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withGlobalIPv6Address(java.lang.String)", "public com.github.dockerjava.api.model.ContainerNetwork withGlobalIPv6Address(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.api.model.ContainerNetwork.getGlobalIPv6PrefixLen()", "public java.lang.Integer getGlobalIPv6PrefixLen()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withGlobalIPv6PrefixLen(java.lang.Integer)", "public com.github.dockerjava.api.model.ContainerNetwork withGlobalIPv6PrefixLen(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getIpAddress()", "public java.lang.String getIpAddress()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withIpv4Address(java.lang.String)", "public com.github.dockerjava.api.model.ContainerNetwork withIpv4Address(java.lang.String)"], ["com.github.dockerjava.api.model.ContainerNetwork$Ipam", "com.github.dockerjava.api.model.ContainerNetwork.getIpamConfig()", "public com.github.dockerjava.api.model.ContainerNetwork$Ipam getIpamConfig()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withIpamConfig(com.github.dockerjava.api.model.ContainerNetwork$Ipam)", "public com.github.dockerjava.api.model.ContainerNetwork withIpamConfig(com.github.dockerjava.api.model.ContainerNetwork$Ipam)"], ["java.lang.Integer", "com.github.dockerjava.api.model.ContainerNetwork.getIpPrefixLen()", "public java.lang.Integer getIpPrefixLen()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withIpPrefixLen(java.lang.Integer)", "public com.github.dockerjava.api.model.ContainerNetwork withIpPrefixLen(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getIpV6Gateway()", "public java.lang.String getIpV6Gateway()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withIpV6Gateway(java.lang.String)", "public com.github.dockerjava.api.model.ContainerNetwork withIpV6Gateway(java.lang.String)"], ["com.github.dockerjava.api.model.Link[]", "com.github.dockerjava.api.model.ContainerNetwork.getLinks()", "public com.github.dockerjava.api.model.Link[] getLinks()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withLinks(java.util.List<com.github.dockerjava.api.model.Link>)", "public com.github.dockerjava.api.model.ContainerNetwork withLinks(java.util.List<com.github.dockerjava.api.model.Link>)"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withLinks(com.github.dockerjava.api.model.Link...)", "public com.github.dockerjava.api.model.ContainerNetwork withLinks(com.github.dockerjava.api.model.Link...)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getMacAddress()", "public java.lang.String getMacAddress()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withMacAddress(java.lang.String)", "public com.github.dockerjava.api.model.ContainerNetwork withMacAddress(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.getNetworkID()", "public java.lang.String getNetworkID()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.api.model.ContainerNetwork.withNetworkID(java.lang.String)", "public com.github.dockerjava.api.model.ContainerNetwork withNetworkID(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.ContainerNetwork.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.ContainerNetwork.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.PullResponseItem", "com.github.dockerjava.api.model.PullResponseItem()", "public com.github.dockerjava.api.model.PullResponseItem()"], ["boolean", "com.github.dockerjava.api.model.PullResponseItem.isPullSuccessIndicated()", "public boolean isPullSuccessIndicated()"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort(int, com.github.dockerjava.api.model.InternetProtocol)", "public com.github.dockerjava.api.model.ExposedPort(int, com.github.dockerjava.api.model.InternetProtocol)"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort(int)", "public com.github.dockerjava.api.model.ExposedPort(int)"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort(java.lang.String, int)", "public com.github.dockerjava.api.model.ExposedPort(java.lang.String, int)"], ["com.github.dockerjava.api.model.InternetProtocol", "com.github.dockerjava.api.model.ExposedPort.getProtocol()", "public com.github.dockerjava.api.model.InternetProtocol getProtocol()"], ["java.lang.String", "com.github.dockerjava.api.model.ExposedPort.getScheme()", "public java.lang.String getScheme()"], ["int", "com.github.dockerjava.api.model.ExposedPort.getPort()", "public int getPort()"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort.tcp(int)", "public static com.github.dockerjava.api.model.ExposedPort tcp(int)"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort.udp(int)", "public static com.github.dockerjava.api.model.ExposedPort udp(int)"], ["com.github.dockerjava.api.model.ExposedPort", "com.github.dockerjava.api.model.ExposedPort.parse(java.lang.String)", "public static com.github.dockerjava.api.model.ExposedPort parse(java.lang.String) throws java.lang.IllegalArgumentException"], ["java.lang.String", "com.github.dockerjava.api.model.ExposedPort.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.ExposedPort.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.ExposedPort.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.WaitResponse", "com.github.dockerjava.api.model.WaitResponse()", "public com.github.dockerjava.api.model.WaitResponse()"], ["java.lang.Integer", "com.github.dockerjava.api.model.WaitResponse.getStatusCode()", "public java.lang.Integer getStatusCode()"], ["com.github.dockerjava.api.model.Network", "com.github.dockerjava.api.model.Network()", "public com.github.dockerjava.api.model.Network()"], ["java.lang.String", "com.github.dockerjava.api.model.Network.getId()", "public java.lang.String getId()"], ["java.lang.String", "com.github.dockerjava.api.model.Network.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.github.dockerjava.api.model.Network.getScope()", "public java.lang.String getScope()"], ["java.lang.String", "com.github.dockerjava.api.model.Network.getDriver()", "public java.lang.String getDriver()"], ["com.github.dockerjava.api.model.Network$Ipam", "com.github.dockerjava.api.model.Network.getIpam()", "public com.github.dockerjava.api.model.Network$Ipam getIpam()"], ["java.util.Map<java.lang.String, com.github.dockerjava.api.model.Network$ContainerNetworkConfig>", "com.github.dockerjava.api.model.Network.getContainers()", "public java.util.Map<java.lang.String, com.github.dockerjava.api.model.Network$ContainerNetworkConfig> getContainers()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.Network.getOptions()", "public java.util.Map<java.lang.String, java.lang.String> getOptions()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Network.isAttachable()", "public java.lang.Boolean isAttachable()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.Network.getLabels()", "public java.util.Map<java.lang.String, java.lang.String> getLabels()"], ["java.lang.String", "com.github.dockerjava.api.model.Network.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.ExposedPorts$Deserializer", "com.github.dockerjava.api.model.ExposedPorts$Deserializer()", "public com.github.dockerjava.api.model.ExposedPorts$Deserializer()"], ["com.github.dockerjava.api.model.ExposedPorts", "com.github.dockerjava.api.model.ExposedPorts$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public com.github.dockerjava.api.model.ExposedPorts deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["java.lang.Object", "com.github.dockerjava.api.model.ExposedPorts$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.PushResponseItem", "com.github.dockerjava.api.model.PushResponseItem()", "public com.github.dockerjava.api.model.PushResponseItem()"], ["com.github.dockerjava.api.model.Volumes", "com.github.dockerjava.api.model.Volumes(com.github.dockerjava.api.model.Volume...)", "public com.github.dockerjava.api.model.Volumes(com.github.dockerjava.api.model.Volume...)"], ["com.github.dockerjava.api.model.Volumes", "com.github.dockerjava.api.model.Volumes(java.util.List<com.github.dockerjava.api.model.Volume>)", "public com.github.dockerjava.api.model.Volumes(java.util.List<com.github.dockerjava.api.model.Volume>)"], ["com.github.dockerjava.api.model.Volume[]", "com.github.dockerjava.api.model.Volumes.getVolumes()", "public com.github.dockerjava.api.model.Volume[] getVolumes()"], ["com.github.dockerjava.api.model.SELContext[]", "com.github.dockerjava.api.model.SELContext.values()", "public static com.github.dockerjava.api.model.SELContext[] values()"], ["com.github.dockerjava.api.model.SELContext", "com.github.dockerjava.api.model.SELContext.valueOf(java.lang.String)", "public static com.github.dockerjava.api.model.SELContext valueOf(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.SELContext.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.SELContext", "com.github.dockerjava.api.model.SELContext.fromString(java.lang.String)", "public static com.github.dockerjava.api.model.SELContext fromString(java.lang.String)"], ["com.github.dockerjava.api.model.Network$Ipam", "com.github.dockerjava.api.model.Network$Ipam()", "public com.github.dockerjava.api.model.Network$Ipam()"], ["java.lang.String", "com.github.dockerjava.api.model.Network$Ipam.getDriver()", "public java.lang.String getDriver()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.Network$Ipam.getOptions()", "public java.util.Map<java.lang.String, java.lang.String> getOptions()"], ["java.util.List<com.github.dockerjava.api.model.Network$Ipam$Config>", "com.github.dockerjava.api.model.Network$Ipam.getConfig()", "public java.util.List<com.github.dockerjava.api.model.Network$Ipam$Config> getConfig()"], ["com.github.dockerjava.api.model.Network$Ipam", "com.github.dockerjava.api.model.Network$Ipam.withConfig(java.util.List<com.github.dockerjava.api.model.Network$Ipam$Config>)", "public com.github.dockerjava.api.model.Network$Ipam withConfig(java.util.List<com.github.dockerjava.api.model.Network$Ipam$Config>)"], ["com.github.dockerjava.api.model.Network$Ipam", "com.github.dockerjava.api.model.Network$Ipam.withConfig(com.github.dockerjava.api.model.Network$Ipam$Config...)", "public com.github.dockerjava.api.model.Network$Ipam withConfig(com.github.dockerjava.api.model.Network$Ipam$Config...)"], ["java.lang.String", "com.github.dockerjava.api.model.Network$Ipam.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.SearchItem", "com.github.dockerjava.api.model.SearchItem()", "public com.github.dockerjava.api.model.SearchItem()"], ["java.lang.Integer", "com.github.dockerjava.api.model.SearchItem.getStarCount()", "public java.lang.Integer getStarCount()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.SearchItem.isOfficial()", "public java.lang.Boolean isOfficial()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.SearchItem.isTrusted()", "public java.lang.Boolean isTrusted()"], ["java.lang.String", "com.github.dockerjava.api.model.SearchItem.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.github.dockerjava.api.model.SearchItem.getDescription()", "public java.lang.String getDescription()"], ["java.lang.String", "com.github.dockerjava.api.model.SearchItem.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.RestartPolicy()", "public com.github.dockerjava.api.model.RestartPolicy()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.RestartPolicy.noRestart()", "public static com.github.dockerjava.api.model.RestartPolicy noRestart()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.RestartPolicy.alwaysRestart()", "public static com.github.dockerjava.api.model.RestartPolicy alwaysRestart()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.RestartPolicy.onFailureRestart(int)", "public static com.github.dockerjava.api.model.RestartPolicy onFailureRestart(int)"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.RestartPolicy.unlessStoppedRestart()", "public static com.github.dockerjava.api.model.RestartPolicy unlessStoppedRestart()"], ["java.lang.Integer", "com.github.dockerjava.api.model.RestartPolicy.getMaximumRetryCount()", "public java.lang.Integer getMaximumRetryCount()"], ["java.lang.String", "com.github.dockerjava.api.model.RestartPolicy.getName()", "public java.lang.String getName()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.RestartPolicy.parse(java.lang.String)", "public static com.github.dockerjava.api.model.RestartPolicy parse(java.lang.String) throws java.lang.IllegalArgumentException"], ["java.lang.String", "com.github.dockerjava.api.model.RestartPolicy.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.RestartPolicy.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.RestartPolicy.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.DriverStatus", "com.github.dockerjava.api.model.DriverStatus()", "public com.github.dockerjava.api.model.DriverStatus()"], ["java.lang.String", "com.github.dockerjava.api.model.DriverStatus.getRootDir()", "public java.lang.String getRootDir()"], ["java.lang.Integer", "com.github.dockerjava.api.model.DriverStatus.getDirs()", "public java.lang.Integer getDirs()"], ["java.lang.String", "com.github.dockerjava.api.model.DriverStatus.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.UpdateContainerResponse", "com.github.dockerjava.api.model.UpdateContainerResponse()", "public com.github.dockerjava.api.model.UpdateContainerResponse()"], ["java.util.List<java.lang.String>", "com.github.dockerjava.api.model.UpdateContainerResponse.getWarnings()", "public java.util.List<java.lang.String> getWarnings()"], ["com.github.dockerjava.api.model.EventActor", "com.github.dockerjava.api.model.EventActor()", "public com.github.dockerjava.api.model.EventActor()"], ["java.lang.String", "com.github.dockerjava.api.model.EventActor.getId()", "public java.lang.String getId()"], ["com.github.dockerjava.api.model.EventActor", "com.github.dockerjava.api.model.EventActor.withId(java.lang.String)", "public com.github.dockerjava.api.model.EventActor withId(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.EventActor.getAttributes()", "public java.util.Map<java.lang.String, java.lang.String> getAttributes()"], ["com.github.dockerjava.api.model.EventActor", "com.github.dockerjava.api.model.EventActor.withAttributes(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.api.model.EventActor withAttributes(java.util.Map<java.lang.String, java.lang.String>)"], ["java.lang.String", "com.github.dockerjava.api.model.EventActor.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.EventActor.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.EventActor.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.LogConfig$LoggingType$Serializer", "com.github.dockerjava.api.model.LogConfig$LoggingType$Serializer()", "public com.github.dockerjava.api.model.LogConfig$LoggingType$Serializer()"], ["void", "com.github.dockerjava.api.model.LogConfig$LoggingType$Serializer.serialize(com.github.dockerjava.api.model.LogConfig$LoggingType, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(com.github.dockerjava.api.model.LogConfig$LoggingType, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["void", "com.github.dockerjava.api.model.LogConfig$LoggingType$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.InfoRegistryConfig", "com.github.dockerjava.api.model.InfoRegistryConfig()", "public com.github.dockerjava.api.model.InfoRegistryConfig()"], ["java.util.Map<java.lang.String, com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig>", "com.github.dockerjava.api.model.InfoRegistryConfig.getIndexConfigs()", "public java.util.Map<java.lang.String, com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig> getIndexConfigs()"], ["com.github.dockerjava.api.model.InfoRegistryConfig", "com.github.dockerjava.api.model.InfoRegistryConfig.withIndexConfigs(java.util.Map<java.lang.String, com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig>)", "public com.github.dockerjava.api.model.InfoRegistryConfig withIndexConfigs(java.util.Map<java.lang.String, com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig>)"], ["java.util.List<java.lang.String>", "com.github.dockerjava.api.model.InfoRegistryConfig.getInsecureRegistryCIDRs()", "public java.util.List<java.lang.String> getInsecureRegistryCIDRs()"], ["com.github.dockerjava.api.model.InfoRegistryConfig", "com.github.dockerjava.api.model.InfoRegistryConfig.withInsecureRegistryCIDRs(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.model.InfoRegistryConfig withInsecureRegistryCIDRs(java.util.List<java.lang.String>)"], ["java.lang.Object", "com.github.dockerjava.api.model.InfoRegistryConfig.getMirrors()", "public java.lang.Object getMirrors()"], ["com.github.dockerjava.api.model.InfoRegistryConfig", "com.github.dockerjava.api.model.InfoRegistryConfig.withMirrors(java.lang.Object)", "public com.github.dockerjava.api.model.InfoRegistryConfig withMirrors(java.lang.Object)"], ["java.lang.String", "com.github.dockerjava.api.model.InfoRegistryConfig.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.InfoRegistryConfig.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.InfoRegistryConfig.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.LxcConf", "com.github.dockerjava.api.model.LxcConf(java.lang.String, java.lang.String)", "public com.github.dockerjava.api.model.LxcConf(java.lang.String, java.lang.String)"], ["com.github.dockerjava.api.model.LxcConf", "com.github.dockerjava.api.model.LxcConf()", "public com.github.dockerjava.api.model.LxcConf()"], ["java.lang.String", "com.github.dockerjava.api.model.LxcConf.getKey()", "public java.lang.String getKey()"], ["com.github.dockerjava.api.model.LxcConf", "com.github.dockerjava.api.model.LxcConf.setKey(java.lang.String)", "public com.github.dockerjava.api.model.LxcConf setKey(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.LxcConf.getValue()", "public java.lang.String getValue()"], ["com.github.dockerjava.api.model.LxcConf", "com.github.dockerjava.api.model.LxcConf.setValue(java.lang.String)", "public com.github.dockerjava.api.model.LxcConf setValue(java.lang.String)"], ["com.github.dockerjava.api.model.VolumesRW$Serializer", "com.github.dockerjava.api.model.VolumesRW$Serializer()", "public com.github.dockerjava.api.model.VolumesRW$Serializer()"], ["void", "com.github.dockerjava.api.model.VolumesRW$Serializer.serialize(com.github.dockerjava.api.model.VolumesRW, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(com.github.dockerjava.api.model.VolumesRW, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["void", "com.github.dockerjava.api.model.VolumesRW$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig()", "public com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig()"], ["java.util.List<java.lang.String>", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.getMirrors()", "public java.util.List<java.lang.String> getMirrors()"], ["com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.withMirrors(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig withMirrors(java.util.List<java.lang.String>)"], ["java.lang.String", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.getName()", "public java.lang.String getName()"], ["com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.withName(java.lang.String)", "public com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig withName(java.lang.String)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.getOfficial()", "public java.lang.Boolean getOfficial()"], ["com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.withOfficial(java.lang.Boolean)", "public com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig withOfficial(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.getSecure()", "public java.lang.Boolean getSecure()"], ["com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.withSecure(java.lang.Boolean)", "public com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig withSecure(java.lang.Boolean)"], ["java.lang.String", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.Node", "com.github.dockerjava.api.model.Node()", "public com.github.dockerjava.api.model.Node()"], ["java.lang.String", "com.github.dockerjava.api.model.Node.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.github.dockerjava.api.model.Node.getId()", "public java.lang.String getId()"], ["java.lang.String", "com.github.dockerjava.api.model.Node.getAddr()", "public java.lang.String getAddr()"], ["java.lang.String", "com.github.dockerjava.api.model.Node.getIp()", "public java.lang.String getIp()"], ["com.github.dockerjava.api.model.VolumesFrom$Deserializer", "com.github.dockerjava.api.model.VolumesFrom$Deserializer()", "public com.github.dockerjava.api.model.VolumesFrom$Deserializer()"], ["com.github.dockerjava.api.model.VolumesFrom", "com.github.dockerjava.api.model.VolumesFrom$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public com.github.dockerjava.api.model.VolumesFrom deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["java.lang.Object", "com.github.dockerjava.api.model.VolumesFrom$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.command.InspectContainerResponse", "com.github.dockerjava.api.command.InspectContainerResponse()", "public com.github.dockerjava.api.command.InspectContainerResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getId()", "public java.lang.String getId()"], ["java.lang.Integer", "com.github.dockerjava.api.command.InspectContainerResponse.getSizeRootFs()", "public java.lang.Integer getSizeRootFs()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getCreated()", "public java.lang.String getCreated()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getPath()", "public java.lang.String getPath()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getProcessLabel()", "public java.lang.String getProcessLabel()"], ["java.lang.String[]", "com.github.dockerjava.api.command.InspectContainerResponse.getArgs()", "public java.lang.String[] getArgs()"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.command.InspectContainerResponse.getConfig()", "public com.github.dockerjava.api.model.ContainerConfig getConfig()"], ["com.github.dockerjava.api.command.InspectContainerResponse$ContainerState", "com.github.dockerjava.api.command.InspectContainerResponse.getState()", "public com.github.dockerjava.api.command.InspectContainerResponse$ContainerState getState()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getImageId()", "public java.lang.String getImageId()"], ["com.github.dockerjava.api.model.NetworkSettings", "com.github.dockerjava.api.command.InspectContainerResponse.getNetworkSettings()", "public com.github.dockerjava.api.model.NetworkSettings getNetworkSettings()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getResolvConfPath()", "public java.lang.String getResolvConfPath()"], ["com.github.dockerjava.api.model.VolumeBind[]", "com.github.dockerjava.api.command.InspectContainerResponse.getVolumes()", "public com.github.dockerjava.api.model.VolumeBind[] getVolumes()"], ["com.github.dockerjava.api.model.VolumeRW[]", "com.github.dockerjava.api.command.InspectContainerResponse.getVolumesRW()", "public com.github.dockerjava.api.model.VolumeRW[] getVolumesRW()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getHostnamePath()", "public java.lang.String getHostnamePath()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getHostsPath()", "public java.lang.String getHostsPath()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getLogPath()", "public java.lang.String getLogPath()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getName()", "public java.lang.String getName()"], ["java.lang.Integer", "com.github.dockerjava.api.command.InspectContainerResponse.getRestartCount()", "public java.lang.Integer getRestartCount()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getDriver()", "public java.lang.String getDriver()"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.command.InspectContainerResponse.getHostConfig()", "public com.github.dockerjava.api.model.HostConfig getHostConfig()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getExecDriver()", "public java.lang.String getExecDriver()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.getMountLabel()", "public java.lang.String getMountLabel()"], ["java.util.List<com.github.dockerjava.api.command.InspectContainerResponse$Mount>", "com.github.dockerjava.api.command.InspectContainerResponse.getMounts()", "public java.util.List<com.github.dockerjava.api.command.InspectContainerResponse$Mount> getMounts()"], ["java.util.List<java.lang.String>", "com.github.dockerjava.api.command.InspectContainerResponse.getExecIds()", "public java.util.List<java.lang.String> getExecIds()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.command.HealthState", "com.github.dockerjava.api.command.HealthState()", "public com.github.dockerjava.api.command.HealthState()"], ["java.lang.String", "com.github.dockerjava.api.command.HealthState.getStatus()", "public java.lang.String getStatus()"], ["java.lang.Integer", "com.github.dockerjava.api.command.HealthState.getFailingStreak()", "public java.lang.Integer getFailingStreak()"], ["java.util.List<com.github.dockerjava.api.command.HealthStateLog>", "com.github.dockerjava.api.command.HealthState.getLog()", "public java.util.List<com.github.dockerjava.api.command.HealthStateLog> getLog()"], ["io.netty.handler.codec.http.HttpRequest", "com.github.dockerjava.netty.InvocationBuilder$3.getHttpRequest(java.lang.String)", "public io.netty.handler.codec.http.HttpRequest getHttpRequest(java.lang.String)"], ["io.netty.channel.epoll.EpollDomainSocketChannel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$UnixDomainSocketInitializer$1.newChannel()", "public io.netty.channel.epoll.EpollDomainSocketChannel newChannel()"], ["io.netty.channel.Channel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$UnixDomainSocketInitializer$1.newChannel()", "public io.netty.channel.Channel newChannel()"], ["void", "com.github.dockerjava.netty.InvocationBuilder$5.operationComplete(io.netty.util.concurrent.Future<? super java.lang.Void>)", "public void operationComplete(io.netty.util.concurrent.Future<? super java.lang.Void>) throws java.lang.Exception"], ["io.netty.channel.EventLoopGroup", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$InetSocketInitializer.init(io.netty.bootstrap.Bootstrap, com.github.dockerjava.core.DockerClientConfig)", "public io.netty.channel.EventLoopGroup init(io.netty.bootstrap.Bootstrap, com.github.dockerjava.core.DockerClientConfig)"], ["io.netty.channel.socket.DuplexChannel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$InetSocketInitializer.connect(io.netty.bootstrap.Bootstrap)", "public io.netty.channel.socket.DuplexChannel connect(io.netty.bootstrap.Bootstrap) throws java.lang.InterruptedException"], ["com.github.dockerjava.netty.handler.HttpResponseHandler", "com.github.dockerjava.netty.handler.HttpResponseHandler(com.github.dockerjava.netty.handler.HttpRequestProvider, com.github.dockerjava.api.async.ResultCallback<?>)", "public com.github.dockerjava.netty.handler.HttpResponseHandler(com.github.dockerjava.netty.handler.HttpRequestProvider, com.github.dockerjava.api.async.ResultCallback<?>)"], ["com.github.dockerjava.netty.handler.FramedResponseStreamHandler", "com.github.dockerjava.netty.handler.FramedResponseStreamHandler(com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>)", "public com.github.dockerjava.netty.handler.FramedResponseStreamHandler(com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>)"], ["void", "com.github.dockerjava.netty.handler.FramedResponseStreamHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable)", "public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception"], ["com.github.dockerjava.netty.handler.JsonRequestHandler", "com.github.dockerjava.netty.handler.JsonRequestHandler()", "public com.github.dockerjava.netty.handler.JsonRequestHandler()"], ["io.netty.channel.socket.nio.NioSocketChannel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$InetSocketInitializer$1.newChannel()", "public io.netty.channel.socket.nio.NioSocketChannel newChannel()"], ["io.netty.channel.Channel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$InetSocketInitializer$1.newChannel()", "public io.netty.channel.Channel newChannel()"], ["com.github.dockerjava.netty.InvocationBuilder$AsyncResultCallback", "com.github.dockerjava.netty.InvocationBuilder$AsyncResultCallback()", "public com.github.dockerjava.netty.InvocationBuilder$AsyncResultCallback()"], ["void", "com.github.dockerjava.netty.InvocationBuilder$AsyncResultCallback.onNext(A_RES_T)", "public void onNext(A_RES_T)"], ["void", "com.github.dockerjava.netty.InvocationBuilder$AsyncResultCallback.close()", "public void close() throws java.io.IOException"], ["A_RES_T", "com.github.dockerjava.netty.InvocationBuilder$AsyncResultCallback.awaitResult()", "public A_RES_T awaitResult()"], ["com.github.dockerjava.netty.WebTarget", "com.github.dockerjava.netty.WebTarget(com.github.dockerjava.netty.ChannelProvider)", "public com.github.dockerjava.netty.WebTarget(com.github.dockerjava.netty.ChannelProvider)"], ["com.github.dockerjava.netty.WebTarget", "com.github.dockerjava.netty.WebTarget.path(java.lang.String...)", "public com.github.dockerjava.netty.WebTarget path(java.lang.String...)"], ["com.github.dockerjava.netty.InvocationBuilder", "com.github.dockerjava.netty.WebTarget.request()", "public com.github.dockerjava.netty.InvocationBuilder request()"], ["com.github.dockerjava.netty.WebTarget", "com.github.dockerjava.netty.WebTarget.resolveTemplate(java.lang.String, java.lang.Object)", "public com.github.dockerjava.netty.WebTarget resolveTemplate(java.lang.String, java.lang.Object)"], ["com.github.dockerjava.netty.WebTarget", "com.github.dockerjava.netty.WebTarget.queryParam(java.lang.String, java.lang.Object)", "public com.github.dockerjava.netty.WebTarget queryParam(java.lang.String, java.lang.Object)"], ["com.github.dockerjava.netty.WebTarget", "com.github.dockerjava.netty.WebTarget.queryParamsSet(java.lang.String, java.util.Set<?>)", "public com.github.dockerjava.netty.WebTarget queryParamsSet(java.lang.String, java.util.Set<?>)"], ["com.github.dockerjava.netty.WebTarget", "com.github.dockerjava.netty.WebTarget.queryParamsJsonMap(java.lang.String, java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.netty.WebTarget queryParamsJsonMap(java.lang.String, java.util.Map<java.lang.String, java.lang.String>)"], ["boolean", "com.github.dockerjava.netty.WebTarget.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.netty.WebTarget.hashCode()", "public int hashCode()"], ["io.netty.handler.codec.http.HttpRequest", "com.github.dockerjava.netty.InvocationBuilder$2.getHttpRequest(java.lang.String)", "public io.netty.handler.codec.http.HttpRequest getHttpRequest(java.lang.String)"], ["io.netty.handler.codec.http.HttpRequest", "com.github.dockerjava.netty.InvocationBuilder$1.getHttpRequest(java.lang.String)", "public io.netty.handler.codec.http.HttpRequest getHttpRequest(java.lang.String)"], ["com.github.dockerjava.netty.InvocationBuilder$ResponseCallback", "com.github.dockerjava.netty.InvocationBuilder$ResponseCallback(com.github.dockerjava.netty.InvocationBuilder)", "public com.github.dockerjava.netty.InvocationBuilder$ResponseCallback(com.github.dockerjava.netty.InvocationBuilder)"], ["T", "com.github.dockerjava.netty.InvocationBuilder$ResponseCallback.awaitResult()", "public T awaitResult()"], ["void", "com.github.dockerjava.netty.InvocationBuilder$ResponseCallback.onNext(T)", "public void onNext(T)"], ["com.github.dockerjava.netty.exec.ListImagesCmdExec", "com.github.dockerjava.netty.exec.ListImagesCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.ListImagesCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.ListContainersCmdExec", "com.github.dockerjava.netty.exec.ListContainersCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.ListContainersCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.RestartContainerCmdExec", "com.github.dockerjava.netty.exec.RestartContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.RestartContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.ListNetworksCmdExec", "com.github.dockerjava.netty.exec.ListNetworksCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.ListNetworksCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.InspectImageCmdExec", "com.github.dockerjava.netty.exec.InspectImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.InspectImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.InspectContainerCmdExec", "com.github.dockerjava.netty.exec.InspectContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.InspectContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.AbstrSyncDockerCmdExec", "com.github.dockerjava.netty.exec.AbstrSyncDockerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.AbstrSyncDockerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["RES_T", "com.github.dockerjava.netty.exec.AbstrSyncDockerCmdExec.exec(CMD_T)", "public RES_T exec(CMD_T)"], ["com.github.dockerjava.netty.exec.ExecStartCmdExec", "com.github.dockerjava.netty.exec.ExecStartCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.ExecStartCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.CreateContainerCmdExec", "com.github.dockerjava.netty.exec.CreateContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.CreateContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.RemoveNetworkCmdExec", "com.github.dockerjava.netty.exec.RemoveNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.RemoveNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec$1.close()", "public void close() throws java.io.IOException"], ["void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec$1.onStart(java.io.Closeable)", "public void onStart(java.io.Closeable)"], ["void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec$1.onNext(A_RES_T)", "public void onNext(A_RES_T)"], ["void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec$1.onError(java.lang.Throwable)", "public void onError(java.lang.Throwable)"], ["void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec$1.onComplete()", "public void onComplete()"], ["com.github.dockerjava.netty.exec.InspectExecCmdExec", "com.github.dockerjava.netty.exec.InspectExecCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.InspectExecCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.PingCmdExec", "com.github.dockerjava.netty.exec.PingCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.PingCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.LogContainerCmdExec", "com.github.dockerjava.netty.exec.LogContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.LogContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.RemoveVolumeCmdExec", "com.github.dockerjava.netty.exec.RemoveVolumeCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.RemoveVolumeCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.AbstrDockerCmdExec", "com.github.dockerjava.netty.exec.AbstrDockerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.AbstrDockerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.PauseContainerCmdExec", "com.github.dockerjava.netty.exec.PauseContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.PauseContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.CreateVolumeCmdExec", "com.github.dockerjava.netty.exec.CreateVolumeCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.CreateVolumeCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.MediaType[]", "com.github.dockerjava.netty.MediaType.values()", "public static com.github.dockerjava.netty.MediaType[] values()"], ["com.github.dockerjava.netty.MediaType", "com.github.dockerjava.netty.MediaType.valueOf(java.lang.String)", "public static com.github.dockerjava.netty.MediaType valueOf(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.netty.MediaType.getMediaType()", "public java.lang.String getMediaType()"], ["com.github.dockerjava.netty.InvocationBuilder", "com.github.dockerjava.netty.InvocationBuilder(com.github.dockerjava.netty.ChannelProvider, java.lang.String)", "public com.github.dockerjava.netty.InvocationBuilder(com.github.dockerjava.netty.ChannelProvider, java.lang.String)"], ["com.github.dockerjava.netty.InvocationBuilder", "com.github.dockerjava.netty.InvocationBuilder.accept(com.github.dockerjava.netty.MediaType)", "public com.github.dockerjava.netty.InvocationBuilder accept(com.github.dockerjava.netty.MediaType)"], ["com.github.dockerjava.netty.InvocationBuilder", "com.github.dockerjava.netty.InvocationBuilder.header(java.lang.String, java.lang.String)", "public com.github.dockerjava.netty.InvocationBuilder header(java.lang.String, java.lang.String)"], ["void", "com.github.dockerjava.netty.InvocationBuilder.delete()", "public void delete()"], ["void", "com.github.dockerjava.netty.InvocationBuilder.get(com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>)", "public void get(com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>)"], ["<T> T", "com.github.dockerjava.netty.InvocationBuilder.get(com.fasterxml.jackson.core.type.TypeReference<T>)", "public <T> T get(com.fasterxml.jackson.core.type.TypeReference<T>)"], ["<T> void", "com.github.dockerjava.netty.InvocationBuilder.get(com.fasterxml.jackson.core.type.TypeReference<T>, com.github.dockerjava.api.async.ResultCallback<T>)", "public <T> void get(com.fasterxml.jackson.core.type.TypeReference<T>, com.github.dockerjava.api.async.ResultCallback<T>)"], ["java.io.InputStream", "com.github.dockerjava.netty.InvocationBuilder.post(java.lang.Object)", "public java.io.InputStream post(java.lang.Object)"], ["void", "com.github.dockerjava.netty.InvocationBuilder.post(java.lang.Object, java.io.InputStream, com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>)", "public void post(java.lang.Object, java.io.InputStream, com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>)"], ["<T> T", "com.github.dockerjava.netty.InvocationBuilder.post(java.lang.Object, com.fasterxml.jackson.core.type.TypeReference<T>)", "public <T> T post(java.lang.Object, com.fasterxml.jackson.core.type.TypeReference<T>)"], ["<T> void", "com.github.dockerjava.netty.InvocationBuilder.post(java.lang.Object, com.fasterxml.jackson.core.type.TypeReference<T>, com.github.dockerjava.api.async.ResultCallback<T>)", "public <T> void post(java.lang.Object, com.fasterxml.jackson.core.type.TypeReference<T>, com.github.dockerjava.api.async.ResultCallback<T>)"], ["<T> T", "com.github.dockerjava.netty.InvocationBuilder.post(com.fasterxml.jackson.core.type.TypeReference<T>, java.io.InputStream)", "public <T> T post(com.fasterxml.jackson.core.type.TypeReference<T>, java.io.InputStream)"], ["<T> void", "com.github.dockerjava.netty.InvocationBuilder.post(com.fasterxml.jackson.core.type.TypeReference<T>, com.github.dockerjava.api.async.ResultCallback<T>, java.io.InputStream)", "public <T> void post(com.fasterxml.jackson.core.type.TypeReference<T>, com.github.dockerjava.api.async.ResultCallback<T>, java.io.InputStream)"], ["void", "com.github.dockerjava.netty.InvocationBuilder.postStream(java.io.InputStream)", "public void postStream(java.io.InputStream)"], ["java.io.InputStream", "com.github.dockerjava.netty.InvocationBuilder.get()", "public java.io.InputStream get()"], ["void", "com.github.dockerjava.netty.InvocationBuilder.put(java.io.InputStream, com.github.dockerjava.netty.MediaType)", "public void put(java.io.InputStream, com.github.dockerjava.netty.MediaType)"], ["java.lang.String", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add$1.apply(java.lang.String)", "public java.lang.String apply(java.lang.String)"], ["java.lang.Object", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add$1.apply(java.lang.Object)", "public java.lang.Object apply(java.lang.Object)"], ["java.security.cert.X509Certificate[]", "com.github.dockerjava.core.KeystoreSSLConfig$1.getAcceptedIssuers()", "public java.security.cert.X509Certificate[] getAcceptedIssuers()"], ["void", "com.github.dockerjava.core.KeystoreSSLConfig$1.checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)", "public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)"], ["void", "com.github.dockerjava.core.KeystoreSSLConfig$1.checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)", "public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)"], ["com.github.dockerjava.core.command.PullImageResultCallback", "com.github.dockerjava.core.command.PullImageResultCallback()", "public com.github.dockerjava.core.command.PullImageResultCallback()"], ["void", "com.github.dockerjava.core.command.PullImageResultCallback.onNext(com.github.dockerjava.api.model.PullResponseItem)", "public void onNext(com.github.dockerjava.api.model.PullResponseItem)"], ["void", "com.github.dockerjava.core.command.PullImageResultCallback.awaitSuccess()", "public void awaitSuccess()"], ["void", "com.github.dockerjava.core.command.PullImageResultCallback.onNext(java.lang.Object)", "public void onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.ConnectToNetworkCmdImpl", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.ConnectToNetworkCmd, java.lang.Void>)", "public com.github.dockerjava.core.command.ConnectToNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.ConnectToNetworkCmd, java.lang.Void>)"], ["java.lang.String", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl.getNetworkId()", "public java.lang.String getNetworkId()"], ["java.lang.String", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["com.github.dockerjava.api.model.ContainerNetwork", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl.getContainerConfig()", "public com.github.dockerjava.api.model.ContainerNetwork getContainerConfig()"], ["com.github.dockerjava.api.command.ConnectToNetworkCmd", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl.withNetworkId(java.lang.String)", "public com.github.dockerjava.api.command.ConnectToNetworkCmd withNetworkId(java.lang.String)"], ["com.github.dockerjava.api.command.ConnectToNetworkCmd", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.ConnectToNetworkCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.ConnectToNetworkCmd", "com.github.dockerjava.core.command.ConnectToNetworkCmdImpl.withContainerNetwork(com.github.dockerjava.api.model.ContainerNetwork)", "public com.github.dockerjava.api.command.ConnectToNetworkCmd withContainerNetwork(com.github.dockerjava.api.model.ContainerNetwork)"], ["com.github.dockerjava.core.command.EventsCmdImpl", "com.github.dockerjava.core.command.EventsCmdImpl(com.github.dockerjava.api.command.EventsCmd$Exec)", "public com.github.dockerjava.core.command.EventsCmdImpl(com.github.dockerjava.api.command.EventsCmd$Exec)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withSince(java.lang.String)", "public com.github.dockerjava.api.command.EventsCmd withSince(java.lang.String)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withUntil(java.lang.String)", "public com.github.dockerjava.api.command.EventsCmd withUntil(java.lang.String)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withContainerFilter(java.lang.String...)", "public com.github.dockerjava.api.command.EventsCmd withContainerFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withImageFilter(java.lang.String...)", "public com.github.dockerjava.api.command.EventsCmd withImageFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withEventFilter(java.lang.String...)", "public com.github.dockerjava.api.command.EventsCmd withEventFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withLabelFilter(java.lang.String...)", "public com.github.dockerjava.api.command.EventsCmd withLabelFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.command.EventsCmdImpl.withLabelFilter(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.api.command.EventsCmd withLabelFilter(java.util.Map<java.lang.String, java.lang.String>)"], ["java.lang.String", "com.github.dockerjava.core.command.EventsCmdImpl.getSince()", "public java.lang.String getSince()"], ["java.lang.String", "com.github.dockerjava.core.command.EventsCmdImpl.getUntil()", "public java.lang.String getUntil()"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.core.command.EventsCmdImpl.getFilters()", "public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getFilters()"], ["com.github.dockerjava.core.command.ExecStartResultCallback", "com.github.dockerjava.core.command.ExecStartResultCallback(java.io.OutputStream, java.io.OutputStream)", "public com.github.dockerjava.core.command.ExecStartResultCallback(java.io.OutputStream, java.io.OutputStream)"], ["com.github.dockerjava.core.command.ExecStartResultCallback", "com.github.dockerjava.core.command.ExecStartResultCallback()", "public com.github.dockerjava.core.command.ExecStartResultCallback()"], ["void", "com.github.dockerjava.core.command.ExecStartResultCallback.onNext(com.github.dockerjava.api.model.Frame)", "public void onNext(com.github.dockerjava.api.model.Frame)"], ["void", "com.github.dockerjava.core.command.ExecStartResultCallback.onNext(java.lang.Object)", "public void onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.ContainerDiffCmdImpl", "com.github.dockerjava.core.command.ContainerDiffCmdImpl(com.github.dockerjava.api.command.ContainerDiffCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.ContainerDiffCmdImpl(com.github.dockerjava.api.command.ContainerDiffCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.ContainerDiffCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["com.github.dockerjava.core.command.ContainerDiffCmdImpl", "com.github.dockerjava.core.command.ContainerDiffCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.core.command.ContainerDiffCmdImpl withContainerId(java.lang.String)"], ["java.util.List<com.github.dockerjava.api.model.ChangeLog>", "com.github.dockerjava.core.command.ContainerDiffCmdImpl.exec()", "public java.util.List<com.github.dockerjava.api.model.ChangeLog> exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.ContainerDiffCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.api.command.ContainerDiffCmd", "com.github.dockerjava.core.command.ContainerDiffCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.ContainerDiffCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.core.command.LogContainerResultCallback", "com.github.dockerjava.core.command.LogContainerResultCallback()", "public com.github.dockerjava.core.command.LogContainerResultCallback()"], ["void", "com.github.dockerjava.core.command.LogContainerResultCallback.onNext(com.github.dockerjava.api.model.Frame)", "public void onNext(com.github.dockerjava.api.model.Frame)"], ["void", "com.github.dockerjava.core.command.LogContainerResultCallback.onNext(java.lang.Object)", "public void onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.InspectExecCmdImpl", "com.github.dockerjava.core.command.InspectExecCmdImpl(com.github.dockerjava.api.command.InspectExecCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.InspectExecCmdImpl(com.github.dockerjava.api.command.InspectExecCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.InspectExecCmdImpl.getExecId()", "public java.lang.String getExecId()"], ["com.github.dockerjava.api.command.InspectExecCmd", "com.github.dockerjava.core.command.InspectExecCmdImpl.withExecId(java.lang.String)", "public com.github.dockerjava.api.command.InspectExecCmd withExecId(java.lang.String)"], ["com.github.dockerjava.api.command.InspectExecResponse", "com.github.dockerjava.core.command.InspectExecCmdImpl.exec()", "public com.github.dockerjava.api.command.InspectExecResponse exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.InspectExecCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.InpectNetworkCmdImpl", "com.github.dockerjava.core.command.InpectNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.InspectNetworkCmd, com.github.dockerjava.api.model.Network>)", "public com.github.dockerjava.core.command.InpectNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.InspectNetworkCmd, com.github.dockerjava.api.model.Network>)"], ["java.lang.String", "com.github.dockerjava.core.command.InpectNetworkCmdImpl.getNetworkId()", "public java.lang.String getNetworkId()"], ["com.github.dockerjava.api.command.InspectNetworkCmd", "com.github.dockerjava.core.command.InpectNetworkCmdImpl.withNetworkId(java.lang.String)", "public com.github.dockerjava.api.command.InspectNetworkCmd withNetworkId(java.lang.String)"], ["com.github.dockerjava.api.model.Network", "com.github.dockerjava.core.command.InpectNetworkCmdImpl.exec()", "public com.github.dockerjava.api.model.Network exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl(com.github.dockerjava.api.command.BuildImageCmd$Exec)", "public com.github.dockerjava.core.command.BuildImageCmdImpl(com.github.dockerjava.api.command.BuildImageCmd$Exec)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl(com.github.dockerjava.api.command.BuildImageCmd$Exec, java.io.File)", "public com.github.dockerjava.core.command.BuildImageCmdImpl(com.github.dockerjava.api.command.BuildImageCmd$Exec, java.io.File)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl(com.github.dockerjava.api.command.BuildImageCmd$Exec, java.io.InputStream)", "public com.github.dockerjava.core.command.BuildImageCmdImpl(com.github.dockerjava.api.command.BuildImageCmd$Exec, java.io.InputStream)"], ["java.lang.String", "com.github.dockerjava.core.command.BuildImageCmdImpl.getTag()", "public java.lang.String getTag()"], ["java.util.Set<java.lang.String>", "com.github.dockerjava.core.command.BuildImageCmdImpl.getTags()", "public java.util.Set<java.lang.String> getTags()"], ["java.util.Set<java.lang.String>", "com.github.dockerjava.core.command.BuildImageCmdImpl.getCacheFrom()", "public java.util.Set<java.lang.String> getCacheFrom()"], ["java.net.URI", "com.github.dockerjava.core.command.BuildImageCmdImpl.getRemote()", "public java.net.URI getRemote()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.BuildImageCmdImpl.hasNoCacheEnabled()", "public java.lang.Boolean hasNoCacheEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.BuildImageCmdImpl.hasRemoveEnabled()", "public java.lang.Boolean hasRemoveEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.BuildImageCmdImpl.isForcerm()", "public java.lang.Boolean isForcerm()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.BuildImageCmdImpl.isQuiet()", "public java.lang.Boolean isQuiet()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.BuildImageCmdImpl.hasPullEnabled()", "public java.lang.Boolean hasPullEnabled()"], ["java.lang.String", "com.github.dockerjava.core.command.BuildImageCmdImpl.getPathToDockerfile()", "public java.lang.String getPathToDockerfile()"], ["java.lang.Long", "com.github.dockerjava.core.command.BuildImageCmdImpl.getMemory()", "public java.lang.Long getMemory()"], ["java.lang.Long", "com.github.dockerjava.core.command.BuildImageCmdImpl.getMemswap()", "public java.lang.Long getMemswap()"], ["java.lang.String", "com.github.dockerjava.core.command.BuildImageCmdImpl.getCpushares()", "public java.lang.String getCpushares()"], ["java.lang.String", "com.github.dockerjava.core.command.BuildImageCmdImpl.getCpusetcpus()", "public java.lang.String getCpusetcpus()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.BuildImageCmdImpl.getBuildArgs()", "public java.util.Map<java.lang.String, java.lang.String> getBuildArgs()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.BuildImageCmdImpl.getLabels()", "public java.util.Map<java.lang.String, java.lang.String> getLabels()"], ["com.github.dockerjava.api.model.AuthConfigurations", "com.github.dockerjava.core.command.BuildImageCmdImpl.getBuildAuthConfigs()", "public com.github.dockerjava.api.model.AuthConfigurations getBuildAuthConfigs()"], ["java.io.InputStream", "com.github.dockerjava.core.command.BuildImageCmdImpl.getTarInputStream()", "public java.io.InputStream getTarInputStream()"], ["java.lang.Long", "com.github.dockerjava.core.command.BuildImageCmdImpl.getShmsize()", "public java.lang.Long getShmsize()"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withTag(java.lang.String)", "public com.github.dockerjava.core.command.BuildImageCmdImpl withTag(java.lang.String)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withTags(java.util.Set<java.lang.String>)", "public com.github.dockerjava.api.command.BuildImageCmd withTags(java.util.Set<java.lang.String>)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withCacheFrom(java.util.Set<java.lang.String>)", "public com.github.dockerjava.api.command.BuildImageCmd withCacheFrom(java.util.Set<java.lang.String>)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withRemote(java.net.URI)", "public com.github.dockerjava.api.command.BuildImageCmd withRemote(java.net.URI)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withNoCache(java.lang.Boolean)", "public com.github.dockerjava.core.command.BuildImageCmdImpl withNoCache(java.lang.Boolean)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withRemove(java.lang.Boolean)", "public com.github.dockerjava.core.command.BuildImageCmdImpl withRemove(java.lang.Boolean)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withForcerm(java.lang.Boolean)", "public com.github.dockerjava.api.command.BuildImageCmd withForcerm(java.lang.Boolean)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withQuiet(java.lang.Boolean)", "public com.github.dockerjava.core.command.BuildImageCmdImpl withQuiet(java.lang.Boolean)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withPull(java.lang.Boolean)", "public com.github.dockerjava.core.command.BuildImageCmdImpl withPull(java.lang.Boolean)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withMemory(java.lang.Long)", "public com.github.dockerjava.api.command.BuildImageCmd withMemory(java.lang.Long)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withMemswap(java.lang.Long)", "public com.github.dockerjava.api.command.BuildImageCmd withMemswap(java.lang.Long)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withCpushares(java.lang.String)", "public com.github.dockerjava.api.command.BuildImageCmd withCpushares(java.lang.String)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withCpusetcpus(java.lang.String)", "public com.github.dockerjava.api.command.BuildImageCmd withCpusetcpus(java.lang.String)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withBuildArg(java.lang.String, java.lang.String)", "public com.github.dockerjava.api.command.BuildImageCmd withBuildArg(java.lang.String, java.lang.String)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withBaseDirectory(java.io.File)", "public com.github.dockerjava.api.command.BuildImageCmd withBaseDirectory(java.io.File)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withDockerfile(java.io.File)", "public com.github.dockerjava.core.command.BuildImageCmdImpl withDockerfile(java.io.File)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withDockerfilePath(java.lang.String)", "public com.github.dockerjava.api.command.BuildImageCmd withDockerfilePath(java.lang.String)"], ["com.github.dockerjava.core.command.BuildImageCmdImpl", "com.github.dockerjava.core.command.BuildImageCmdImpl.withTarInputStream(java.io.InputStream)", "public com.github.dockerjava.core.command.BuildImageCmdImpl withTarInputStream(java.io.InputStream)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withBuildAuthConfigs(com.github.dockerjava.api.model.AuthConfigurations)", "public com.github.dockerjava.api.command.BuildImageCmd withBuildAuthConfigs(com.github.dockerjava.api.model.AuthConfigurations)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withShmsize(java.lang.Long)", "public com.github.dockerjava.api.command.BuildImageCmd withShmsize(java.lang.Long)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withLabels(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.api.command.BuildImageCmd withLabels(java.util.Map<java.lang.String, java.lang.String>)"], ["void", "com.github.dockerjava.core.command.BuildImageCmdImpl.close()", "public void close()"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withTarInputStream(java.io.InputStream)", "public com.github.dockerjava.api.command.BuildImageCmd withTarInputStream(java.io.InputStream)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withPull(java.lang.Boolean)", "public com.github.dockerjava.api.command.BuildImageCmd withPull(java.lang.Boolean)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withQuiet(java.lang.Boolean)", "public com.github.dockerjava.api.command.BuildImageCmd withQuiet(java.lang.Boolean)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withRemove(java.lang.Boolean)", "public com.github.dockerjava.api.command.BuildImageCmd withRemove(java.lang.Boolean)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withNoCache(java.lang.Boolean)", "public com.github.dockerjava.api.command.BuildImageCmd withNoCache(java.lang.Boolean)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withDockerfile(java.io.File)", "public com.github.dockerjava.api.command.BuildImageCmd withDockerfile(java.io.File)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.command.BuildImageCmdImpl.withTag(java.lang.String)", "public com.github.dockerjava.api.command.BuildImageCmd withTag(java.lang.String)"], ["com.github.dockerjava.core.command.CreateNetworkCmdImpl", "com.github.dockerjava.core.command.CreateNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.CreateNetworkCmd, com.github.dockerjava.api.command.CreateNetworkResponse>)", "public com.github.dockerjava.core.command.CreateNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.CreateNetworkCmd, com.github.dockerjava.api.command.CreateNetworkResponse>)"], ["java.lang.String", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getDriver()", "public java.lang.String getDriver()"], ["com.github.dockerjava.api.model.Network$Ipam", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getIpam()", "public com.github.dockerjava.api.model.Network$Ipam getIpam()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getOptions()", "public java.util.Map<java.lang.String, java.lang.String> getOptions()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getCheckDuplicate()", "public java.lang.Boolean getCheckDuplicate()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getInternal()", "public java.lang.Boolean getInternal()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getEnableIPv6()", "public java.lang.Boolean getEnableIPv6()"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withName(java.lang.String)", "public com.github.dockerjava.api.command.CreateNetworkCmd withName(java.lang.String)"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withDriver(java.lang.String)", "public com.github.dockerjava.api.command.CreateNetworkCmd withDriver(java.lang.String)"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withIpam(com.github.dockerjava.api.model.Network$Ipam)", "public com.github.dockerjava.api.command.CreateNetworkCmd withIpam(com.github.dockerjava.api.model.Network$Ipam)"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withOptions(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.api.command.CreateNetworkCmd withOptions(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withCheckDuplicate(boolean)", "public com.github.dockerjava.api.command.CreateNetworkCmd withCheckDuplicate(boolean)"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withInternal(boolean)", "public com.github.dockerjava.api.command.CreateNetworkCmd withInternal(boolean)"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withEnableIpv6(boolean)", "public com.github.dockerjava.api.command.CreateNetworkCmd withEnableIpv6(boolean)"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getAttachable()", "public java.lang.Boolean getAttachable()"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withAttachable(java.lang.Boolean)", "public com.github.dockerjava.api.command.CreateNetworkCmd withAttachable(java.lang.Boolean)"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.getLabels()", "public java.util.Map<java.lang.String, java.lang.String> getLabels()"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.command.CreateNetworkCmdImpl.withLabels(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.api.command.CreateNetworkCmd withLabels(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.core.command.AbstrAsyncDockerCmd", "com.github.dockerjava.core.command.AbstrAsyncDockerCmd(com.github.dockerjava.api.command.DockerCmdAsyncExec<CMD_T, A_RES_T>)", "public com.github.dockerjava.core.command.AbstrAsyncDockerCmd(com.github.dockerjava.api.command.DockerCmdAsyncExec<CMD_T, A_RES_T>)"], ["<T extends com.github.dockerjava.api.async.ResultCallback<A_RES_T>> T", "com.github.dockerjava.core.command.AbstrAsyncDockerCmd.exec(T)", "public <T extends com.github.dockerjava.api.async.ResultCallback<A_RES_T>> T exec(T)"], ["void", "com.github.dockerjava.core.command.AbstrAsyncDockerCmd.close()", "public void close()"], ["com.github.dockerjava.core.command.ListImagesCmdImpl", "com.github.dockerjava.core.command.ListImagesCmdImpl(com.github.dockerjava.api.command.ListImagesCmd$Exec)", "public com.github.dockerjava.core.command.ListImagesCmdImpl(com.github.dockerjava.api.command.ListImagesCmd$Exec)"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.core.command.ListImagesCmdImpl.getFilters()", "public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getFilters()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ListImagesCmdImpl.hasShowAllEnabled()", "public java.lang.Boolean hasShowAllEnabled()"], ["com.github.dockerjava.api.command.ListImagesCmd", "com.github.dockerjava.core.command.ListImagesCmdImpl.withShowAll(java.lang.Boolean)", "public com.github.dockerjava.api.command.ListImagesCmd withShowAll(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ListImagesCmd", "com.github.dockerjava.core.command.ListImagesCmdImpl.withDanglingFilter(java.lang.Boolean)", "public com.github.dockerjava.api.command.ListImagesCmd withDanglingFilter(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ListImagesCmd", "com.github.dockerjava.core.command.ListImagesCmdImpl.withLabelFilter(java.lang.String...)", "public com.github.dockerjava.api.command.ListImagesCmd withLabelFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.ListImagesCmd", "com.github.dockerjava.core.command.ListImagesCmdImpl.withLabelFilter(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.api.command.ListImagesCmd withLabelFilter(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.command.ListImagesCmd", "com.github.dockerjava.core.command.ListImagesCmdImpl.withImageNameFilter(java.lang.String)", "public com.github.dockerjava.api.command.ListImagesCmd withImageNameFilter(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.ListImagesCmdImpl.getImageNameFilter()", "public java.lang.String getImageNameFilter()"], ["java.lang.String", "com.github.dockerjava.core.command.ListImagesCmdImpl.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.core.command.ListVolumesCmdImpl", "com.github.dockerjava.core.command.ListVolumesCmdImpl(com.github.dockerjava.api.command.ListVolumesCmd$Exec)", "public com.github.dockerjava.core.command.ListVolumesCmdImpl(com.github.dockerjava.api.command.ListVolumesCmd$Exec)"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.core.command.ListVolumesCmdImpl.getFilters()", "public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getFilters()"], ["com.github.dockerjava.api.command.ListVolumesCmd", "com.github.dockerjava.core.command.ListVolumesCmdImpl.withDanglingFilter(java.lang.Boolean)", "public com.github.dockerjava.api.command.ListVolumesCmd withDanglingFilter(java.lang.Boolean)"], ["com.github.dockerjava.core.command.PauseContainerCmdImpl", "com.github.dockerjava.core.command.PauseContainerCmdImpl(com.github.dockerjava.api.command.PauseContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.PauseContainerCmdImpl(com.github.dockerjava.api.command.PauseContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.PauseContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["com.github.dockerjava.api.command.PauseContainerCmd", "com.github.dockerjava.core.command.PauseContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.PauseContainerCmd withContainerId(java.lang.String)"], ["java.lang.Void", "com.github.dockerjava.core.command.PauseContainerCmdImpl.exec()", "public java.lang.Void exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.PauseContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.PushImageResultCallback", "com.github.dockerjava.core.command.PushImageResultCallback()", "public com.github.dockerjava.core.command.PushImageResultCallback()"], ["void", "com.github.dockerjava.core.command.PushImageResultCallback.onNext(com.github.dockerjava.api.model.PushResponseItem)", "public void onNext(com.github.dockerjava.api.model.PushResponseItem)"], ["void", "com.github.dockerjava.core.command.PushImageResultCallback.awaitSuccess()", "public void awaitSuccess()"], ["void", "com.github.dockerjava.core.command.PushImageResultCallback.onNext(java.lang.Object)", "public void onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.ExecCreateCmdImpl", "com.github.dockerjava.core.command.ExecCreateCmdImpl(com.github.dockerjava.api.command.ExecCreateCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.ExecCreateCmdImpl(com.github.dockerjava.api.command.ExecCreateCmd$Exec, java.lang.String)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.ExecCreateCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withAttachStdin(java.lang.Boolean)", "public com.github.dockerjava.api.command.ExecCreateCmd withAttachStdin(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withAttachStdout(java.lang.Boolean)", "public com.github.dockerjava.api.command.ExecCreateCmd withAttachStdout(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withAttachStderr(java.lang.Boolean)", "public com.github.dockerjava.api.command.ExecCreateCmd withAttachStderr(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withTty(java.lang.Boolean)", "public com.github.dockerjava.api.command.ExecCreateCmd withTty(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withUser(java.lang.String)", "public com.github.dockerjava.api.command.ExecCreateCmd withUser(java.lang.String)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.command.ExecCreateCmdImpl.withCmd(java.lang.String...)", "public com.github.dockerjava.api.command.ExecCreateCmd withCmd(java.lang.String...)"], ["java.lang.String", "com.github.dockerjava.core.command.ExecCreateCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ExecCreateCmdImpl.hasAttachStdinEnabled()", "public java.lang.Boolean hasAttachStdinEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ExecCreateCmdImpl.hasAttachStdoutEnabled()", "public java.lang.Boolean hasAttachStdoutEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ExecCreateCmdImpl.hasAttachStderrEnabled()", "public java.lang.Boolean hasAttachStderrEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ExecCreateCmdImpl.hasTtyEnabled()", "public java.lang.Boolean hasTtyEnabled()"], ["java.lang.String", "com.github.dockerjava.core.command.ExecCreateCmdImpl.getUser()", "public java.lang.String getUser()"], ["com.github.dockerjava.api.command.ExecCreateCmdResponse", "com.github.dockerjava.core.command.ExecCreateCmdImpl.exec()", "public com.github.dockerjava.api.command.ExecCreateCmdResponse exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.ExecCreateCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl(com.github.dockerjava.api.command.CopyArchiveFromContainerCmd$Exec, java.lang.String, java.lang.String)", "public com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl(com.github.dockerjava.api.command.CopyArchiveFromContainerCmd$Exec, java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.getResource()", "public java.lang.String getResource()"], ["com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl withContainerId(java.lang.String)"], ["com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.withResource(java.lang.String)", "public com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl withResource(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.getHostPath()", "public java.lang.String getHostPath()"], ["com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.withHostPath(java.lang.String)", "public com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl withHostPath(java.lang.String)"], ["java.io.InputStream", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.exec()", "public java.io.InputStream exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.api.command.CopyArchiveFromContainerCmd", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.withResource(java.lang.String)", "public com.github.dockerjava.api.command.CopyArchiveFromContainerCmd withResource(java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveFromContainerCmd", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.withHostPath(java.lang.String)", "public com.github.dockerjava.api.command.CopyArchiveFromContainerCmd withHostPath(java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveFromContainerCmd", "com.github.dockerjava.core.command.CopyArchiveFromContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.CopyArchiveFromContainerCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.DisconnectFromNetworkCmd, java.lang.Void>)", "public com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.DisconnectFromNetworkCmd, java.lang.Void>)"], ["java.lang.String", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl.getNetworkId()", "public java.lang.String getNetworkId()"], ["java.lang.String", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl.getForce()", "public java.lang.Boolean getForce()"], ["com.github.dockerjava.api.command.DisconnectFromNetworkCmd", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl.withNetworkId(java.lang.String)", "public com.github.dockerjava.api.command.DisconnectFromNetworkCmd withNetworkId(java.lang.String)"], ["com.github.dockerjava.api.command.DisconnectFromNetworkCmd", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.DisconnectFromNetworkCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.DisconnectFromNetworkCmd", "com.github.dockerjava.core.command.DisconnectFromNetworkCmdImpl.withForce(java.lang.Boolean)", "public com.github.dockerjava.api.command.DisconnectFromNetworkCmd withForce(java.lang.Boolean)"], ["com.github.dockerjava.core.command.InspectContainerCmdImpl", "com.github.dockerjava.core.command.InspectContainerCmdImpl(com.github.dockerjava.api.command.InspectContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.InspectContainerCmdImpl(com.github.dockerjava.api.command.InspectContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.InspectContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["com.github.dockerjava.api.command.InspectContainerCmd", "com.github.dockerjava.core.command.InspectContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.InspectContainerCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.InspectContainerCmd", "com.github.dockerjava.core.command.InspectContainerCmdImpl.withSize(java.lang.Boolean)", "public com.github.dockerjava.api.command.InspectContainerCmd withSize(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.core.command.InspectContainerCmdImpl.getSize()", "public java.lang.Boolean getSize()"], ["com.github.dockerjava.api.command.InspectContainerResponse", "com.github.dockerjava.core.command.InspectContainerCmdImpl.exec()", "public com.github.dockerjava.api.command.InspectContainerResponse exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.InspectContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.BuildImageResultCallback", "com.github.dockerjava.core.command.BuildImageResultCallback()", "public com.github.dockerjava.core.command.BuildImageResultCallback()"], ["void", "com.github.dockerjava.core.command.BuildImageResultCallback.onNext(com.github.dockerjava.api.model.BuildResponseItem)", "public void onNext(com.github.dockerjava.api.model.BuildResponseItem)"], ["java.lang.String", "com.github.dockerjava.core.command.BuildImageResultCallback.awaitImageId()", "public java.lang.String awaitImageId()"], ["java.lang.String", "com.github.dockerjava.core.command.BuildImageResultCallback.awaitImageId(long, java.util.concurrent.TimeUnit)", "public java.lang.String awaitImageId(long, java.util.concurrent.TimeUnit)"], ["void", "com.github.dockerjava.core.command.BuildImageResultCallback.onNext(java.lang.Object)", "public void onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.FrameReader", "com.github.dockerjava.core.command.FrameReader(java.io.InputStream)", "public com.github.dockerjava.core.command.FrameReader(java.io.InputStream)"], ["com.github.dockerjava.api.model.Frame", "com.github.dockerjava.core.command.FrameReader.readFrame()", "public com.github.dockerjava.api.model.Frame readFrame() throws java.io.IOException"], ["void", "com.github.dockerjava.core.command.FrameReader.close()", "public void close() throws java.io.IOException"], ["com.github.dockerjava.core.DockerClientImpl", "com.github.dockerjava.core.DockerClientImpl.getInstance()", "public static com.github.dockerjava.core.DockerClientImpl getInstance()"], ["com.github.dockerjava.core.DockerClientImpl", "com.github.dockerjava.core.DockerClientImpl.getInstance(com.github.dockerjava.core.DockerClientConfig)", "public static com.github.dockerjava.core.DockerClientImpl getInstance(com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.core.DockerClientImpl", "com.github.dockerjava.core.DockerClientImpl.getInstance(java.lang.String)", "public static com.github.dockerjava.core.DockerClientImpl getInstance(java.lang.String)"], ["com.github.dockerjava.core.DockerClientImpl", "com.github.dockerjava.core.DockerClientImpl.withDockerCmdExecFactory(com.github.dockerjava.api.command.DockerCmdExecFactory)", "public com.github.dockerjava.core.DockerClientImpl withDockerCmdExecFactory(com.github.dockerjava.api.command.DockerCmdExecFactory)"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.core.DockerClientImpl.authConfig()", "public com.github.dockerjava.api.model.AuthConfig authConfig()"], ["com.github.dockerjava.api.command.AuthCmd", "com.github.dockerjava.core.DockerClientImpl.authCmd()", "public com.github.dockerjava.api.command.AuthCmd authCmd()"], ["com.github.dockerjava.api.command.InfoCmd", "com.github.dockerjava.core.DockerClientImpl.infoCmd()", "public com.github.dockerjava.api.command.InfoCmd infoCmd()"], ["com.github.dockerjava.api.command.PingCmd", "com.github.dockerjava.core.DockerClientImpl.pingCmd()", "public com.github.dockerjava.api.command.PingCmd pingCmd()"], ["com.github.dockerjava.api.command.VersionCmd", "com.github.dockerjava.core.DockerClientImpl.versionCmd()", "public com.github.dockerjava.api.command.VersionCmd versionCmd()"], ["com.github.dockerjava.api.command.PullImageCmd", "com.github.dockerjava.core.DockerClientImpl.pullImageCmd(java.lang.String)", "public com.github.dockerjava.api.command.PullImageCmd pullImageCmd(java.lang.String)"], ["com.github.dockerjava.api.command.PushImageCmd", "com.github.dockerjava.core.DockerClientImpl.pushImageCmd(java.lang.String)", "public com.github.dockerjava.api.command.PushImageCmd pushImageCmd(java.lang.String)"], ["com.github.dockerjava.api.command.PushImageCmd", "com.github.dockerjava.core.DockerClientImpl.pushImageCmd(com.github.dockerjava.api.model.Identifier)", "public com.github.dockerjava.api.command.PushImageCmd pushImageCmd(com.github.dockerjava.api.model.Identifier)"], ["com.github.dockerjava.api.command.SaveImageCmd", "com.github.dockerjava.core.DockerClientImpl.saveImageCmd(java.lang.String)", "public com.github.dockerjava.api.command.SaveImageCmd saveImageCmd(java.lang.String)"], ["com.github.dockerjava.api.command.CreateImageCmd", "com.github.dockerjava.core.DockerClientImpl.createImageCmd(java.lang.String, java.io.InputStream)", "public com.github.dockerjava.api.command.CreateImageCmd createImageCmd(java.lang.String, java.io.InputStream)"], ["com.github.dockerjava.api.command.LoadImageCmd", "com.github.dockerjava.core.DockerClientImpl.loadImageCmd(java.io.InputStream)", "public com.github.dockerjava.api.command.LoadImageCmd loadImageCmd(java.io.InputStream)"], ["com.github.dockerjava.api.command.SearchImagesCmd", "com.github.dockerjava.core.DockerClientImpl.searchImagesCmd(java.lang.String)", "public com.github.dockerjava.api.command.SearchImagesCmd searchImagesCmd(java.lang.String)"], ["com.github.dockerjava.api.command.RemoveImageCmd", "com.github.dockerjava.core.DockerClientImpl.removeImageCmd(java.lang.String)", "public com.github.dockerjava.api.command.RemoveImageCmd removeImageCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ListImagesCmd", "com.github.dockerjava.core.DockerClientImpl.listImagesCmd()", "public com.github.dockerjava.api.command.ListImagesCmd listImagesCmd()"], ["com.github.dockerjava.api.command.InspectImageCmd", "com.github.dockerjava.core.DockerClientImpl.inspectImageCmd(java.lang.String)", "public com.github.dockerjava.api.command.InspectImageCmd inspectImageCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.DockerClientImpl.listContainersCmd()", "public com.github.dockerjava.api.command.ListContainersCmd listContainersCmd()"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.DockerClientImpl.createContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd createContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.StartContainerCmd", "com.github.dockerjava.core.DockerClientImpl.startContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.StartContainerCmd startContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.InspectContainerCmd", "com.github.dockerjava.core.DockerClientImpl.inspectContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.InspectContainerCmd inspectContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ExecCreateCmd", "com.github.dockerjava.core.DockerClientImpl.execCreateCmd(java.lang.String)", "public com.github.dockerjava.api.command.ExecCreateCmd execCreateCmd(java.lang.String)"], ["com.github.dockerjava.api.command.RemoveContainerCmd", "com.github.dockerjava.core.DockerClientImpl.removeContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.RemoveContainerCmd removeContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.WaitContainerCmd", "com.github.dockerjava.core.DockerClientImpl.waitContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.WaitContainerCmd waitContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.DockerClientImpl.attachContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.AttachContainerCmd attachContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ExecStartCmd", "com.github.dockerjava.core.DockerClientImpl.execStartCmd(java.lang.String)", "public com.github.dockerjava.api.command.ExecStartCmd execStartCmd(java.lang.String)"], ["com.github.dockerjava.api.command.InspectExecCmd", "com.github.dockerjava.core.DockerClientImpl.inspectExecCmd(java.lang.String)", "public com.github.dockerjava.api.command.InspectExecCmd inspectExecCmd(java.lang.String)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.DockerClientImpl.logContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.LogContainerCmd logContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.CopyFileFromContainerCmd", "com.github.dockerjava.core.DockerClientImpl.copyFileFromContainerCmd(java.lang.String, java.lang.String)", "public com.github.dockerjava.api.command.CopyFileFromContainerCmd copyFileFromContainerCmd(java.lang.String, java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveFromContainerCmd", "com.github.dockerjava.core.DockerClientImpl.copyArchiveFromContainerCmd(java.lang.String, java.lang.String)", "public com.github.dockerjava.api.command.CopyArchiveFromContainerCmd copyArchiveFromContainerCmd(java.lang.String, java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.DockerClientImpl.copyArchiveToContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.CopyArchiveToContainerCmd copyArchiveToContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ContainerDiffCmd", "com.github.dockerjava.core.DockerClientImpl.containerDiffCmd(java.lang.String)", "public com.github.dockerjava.api.command.ContainerDiffCmd containerDiffCmd(java.lang.String)"], ["com.github.dockerjava.api.command.StopContainerCmd", "com.github.dockerjava.core.DockerClientImpl.stopContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.StopContainerCmd stopContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.KillContainerCmd", "com.github.dockerjava.core.DockerClientImpl.killContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.KillContainerCmd killContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.DockerClientImpl.updateContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.UpdateContainerCmd updateContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.RenameContainerCmd", "com.github.dockerjava.core.DockerClientImpl.renameContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.RenameContainerCmd renameContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.RestartContainerCmd", "com.github.dockerjava.core.DockerClientImpl.restartContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.RestartContainerCmd restartContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.DockerClientImpl.commitCmd(java.lang.String)", "public com.github.dockerjava.api.command.CommitCmd commitCmd(java.lang.String)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.DockerClientImpl.buildImageCmd()", "public com.github.dockerjava.api.command.BuildImageCmd buildImageCmd()"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.DockerClientImpl.buildImageCmd(java.io.File)", "public com.github.dockerjava.api.command.BuildImageCmd buildImageCmd(java.io.File)"], ["com.github.dockerjava.api.command.BuildImageCmd", "com.github.dockerjava.core.DockerClientImpl.buildImageCmd(java.io.InputStream)", "public com.github.dockerjava.api.command.BuildImageCmd buildImageCmd(java.io.InputStream)"], ["com.github.dockerjava.api.command.TopContainerCmd", "com.github.dockerjava.core.DockerClientImpl.topContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.TopContainerCmd topContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.TagImageCmd", "com.github.dockerjava.core.DockerClientImpl.tagImageCmd(java.lang.String, java.lang.String, java.lang.String)", "public com.github.dockerjava.api.command.TagImageCmd tagImageCmd(java.lang.String, java.lang.String, java.lang.String)"], ["com.github.dockerjava.api.command.PauseContainerCmd", "com.github.dockerjava.core.DockerClientImpl.pauseContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.PauseContainerCmd pauseContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.UnpauseContainerCmd", "com.github.dockerjava.core.DockerClientImpl.unpauseContainerCmd(java.lang.String)", "public com.github.dockerjava.api.command.UnpauseContainerCmd unpauseContainerCmd(java.lang.String)"], ["com.github.dockerjava.api.command.EventsCmd", "com.github.dockerjava.core.DockerClientImpl.eventsCmd()", "public com.github.dockerjava.api.command.EventsCmd eventsCmd()"], ["com.github.dockerjava.api.command.StatsCmd", "com.github.dockerjava.core.DockerClientImpl.statsCmd(java.lang.String)", "public com.github.dockerjava.api.command.StatsCmd statsCmd(java.lang.String)"], ["com.github.dockerjava.api.command.CreateVolumeCmd", "com.github.dockerjava.core.DockerClientImpl.createVolumeCmd()", "public com.github.dockerjava.api.command.CreateVolumeCmd createVolumeCmd()"], ["com.github.dockerjava.api.command.InspectVolumeCmd", "com.github.dockerjava.core.DockerClientImpl.inspectVolumeCmd(java.lang.String)", "public com.github.dockerjava.api.command.InspectVolumeCmd inspectVolumeCmd(java.lang.String)"], ["com.github.dockerjava.api.command.RemoveVolumeCmd", "com.github.dockerjava.core.DockerClientImpl.removeVolumeCmd(java.lang.String)", "public com.github.dockerjava.api.command.RemoveVolumeCmd removeVolumeCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ListVolumesCmd", "com.github.dockerjava.core.DockerClientImpl.listVolumesCmd()", "public com.github.dockerjava.api.command.ListVolumesCmd listVolumesCmd()"], ["com.github.dockerjava.api.command.ListNetworksCmd", "com.github.dockerjava.core.DockerClientImpl.listNetworksCmd()", "public com.github.dockerjava.api.command.ListNetworksCmd listNetworksCmd()"], ["com.github.dockerjava.api.command.InspectNetworkCmd", "com.github.dockerjava.core.DockerClientImpl.inspectNetworkCmd()", "public com.github.dockerjava.api.command.InspectNetworkCmd inspectNetworkCmd()"], ["com.github.dockerjava.api.command.CreateNetworkCmd", "com.github.dockerjava.core.DockerClientImpl.createNetworkCmd()", "public com.github.dockerjava.api.command.CreateNetworkCmd createNetworkCmd()"], ["com.github.dockerjava.api.command.RemoveNetworkCmd", "com.github.dockerjava.core.DockerClientImpl.removeNetworkCmd(java.lang.String)", "public com.github.dockerjava.api.command.RemoveNetworkCmd removeNetworkCmd(java.lang.String)"], ["com.github.dockerjava.api.command.ConnectToNetworkCmd", "com.github.dockerjava.core.DockerClientImpl.connectToNetworkCmd()", "public com.github.dockerjava.api.command.ConnectToNetworkCmd connectToNetworkCmd()"], ["com.github.dockerjava.api.command.DisconnectFromNetworkCmd", "com.github.dockerjava.core.DockerClientImpl.disconnectFromNetworkCmd()", "public com.github.dockerjava.api.command.DisconnectFromNetworkCmd disconnectFromNetworkCmd()"], ["void", "com.github.dockerjava.core.DockerClientImpl.close()", "public void close() throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$5.run()", "public void run() throws java.net.SocketException"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig()", "public com.github.dockerjava.api.model.HostConfig()"], ["com.github.dockerjava.api.model.Bind[]", "com.github.dockerjava.api.model.HostConfig.getBinds()", "public com.github.dockerjava.api.model.Bind[] getBinds()"], ["java.lang.Integer", "com.github.dockerjava.api.model.HostConfig.getBlkioWeight()", "public java.lang.Integer getBlkioWeight()"], ["com.github.dockerjava.api.model.Capability[]", "com.github.dockerjava.api.model.HostConfig.getCapAdd()", "public com.github.dockerjava.api.model.Capability[] getCapAdd()"], ["com.github.dockerjava.api.model.Capability[]", "com.github.dockerjava.api.model.HostConfig.getCapDrop()", "public com.github.dockerjava.api.model.Capability[] getCapDrop()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getContainerIDFile()", "public java.lang.String getContainerIDFile()"], ["java.lang.Integer", "com.github.dockerjava.api.model.HostConfig.getCpuPeriod()", "public java.lang.Integer getCpuPeriod()"], ["java.lang.Integer", "com.github.dockerjava.api.model.HostConfig.getCpuShares()", "public java.lang.Integer getCpuShares()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getCpusetCpus()", "public java.lang.String getCpusetCpus()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getCpusetMems()", "public java.lang.String getCpusetMems()"], ["com.github.dockerjava.api.model.Device[]", "com.github.dockerjava.api.model.HostConfig.getDevices()", "public com.github.dockerjava.api.model.Device[] getDevices()"], ["java.lang.String[]", "com.github.dockerjava.api.model.HostConfig.getDns()", "public java.lang.String[] getDns()"], ["java.lang.String[]", "com.github.dockerjava.api.model.HostConfig.getDnsSearch()", "public java.lang.String[] getDnsSearch()"], ["java.lang.String[]", "com.github.dockerjava.api.model.HostConfig.getExtraHosts()", "public java.lang.String[] getExtraHosts()"], ["com.github.dockerjava.api.model.Link[]", "com.github.dockerjava.api.model.HostConfig.getLinks()", "public com.github.dockerjava.api.model.Link[] getLinks()"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.api.model.HostConfig.getLogConfig()", "public com.github.dockerjava.api.model.LogConfig getLogConfig()"], ["com.github.dockerjava.api.model.LxcConf[]", "com.github.dockerjava.api.model.HostConfig.getLxcConf()", "public com.github.dockerjava.api.model.LxcConf[] getLxcConf()"], ["java.lang.Long", "com.github.dockerjava.api.model.HostConfig.getMemory()", "public java.lang.Long getMemory()"], ["java.lang.Long", "com.github.dockerjava.api.model.HostConfig.getMemorySwap()", "public java.lang.Long getMemorySwap()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getNetworkMode()", "public java.lang.String getNetworkMode()"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.api.model.HostConfig.getPortBindings()", "public com.github.dockerjava.api.model.Ports getPortBindings()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.api.model.HostConfig.getRestartPolicy()", "public com.github.dockerjava.api.model.RestartPolicy getRestartPolicy()"], ["com.github.dockerjava.api.model.Ulimit[]", "com.github.dockerjava.api.model.HostConfig.getUlimits()", "public com.github.dockerjava.api.model.Ulimit[] getUlimits()"], ["com.github.dockerjava.api.model.VolumesFrom[]", "com.github.dockerjava.api.model.HostConfig.getVolumesFrom()", "public com.github.dockerjava.api.model.VolumesFrom[] getVolumesFrom()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getPidMode()", "public java.lang.String getPidMode()"], ["java.util.List<java.lang.Object>", "com.github.dockerjava.api.model.HostConfig.getBlkioDeviceReadBps()", "public java.util.List<java.lang.Object> getBlkioDeviceReadBps()"], ["java.util.List<java.lang.Object>", "com.github.dockerjava.api.model.HostConfig.getBlkioDeviceReadIOps()", "public java.util.List<java.lang.Object> getBlkioDeviceReadIOps()"], ["java.util.List<java.lang.Object>", "com.github.dockerjava.api.model.HostConfig.getBlkioDeviceWriteBps()", "public java.util.List<java.lang.Object> getBlkioDeviceWriteBps()"], ["java.util.List<java.lang.Object>", "com.github.dockerjava.api.model.HostConfig.getBlkioDeviceWriteIOps()", "public java.util.List<java.lang.Object> getBlkioDeviceWriteIOps()"], ["java.util.List<java.lang.Object>", "com.github.dockerjava.api.model.HostConfig.getBlkioWeightDevice()", "public java.util.List<java.lang.Object> getBlkioWeightDevice()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.HostConfig.getOomScoreAdj()", "public java.lang.Boolean getOomScoreAdj()"], ["java.lang.Integer", "com.github.dockerjava.api.model.HostConfig.getCpuQuota()", "public java.lang.Integer getCpuQuota()"], ["java.lang.Long", "com.github.dockerjava.api.model.HostConfig.getKernelMemory()", "public java.lang.Long getKernelMemory()"], ["java.lang.Long", "com.github.dockerjava.api.model.HostConfig.getMemoryReservation()", "public java.lang.Long getMemoryReservation()"], ["java.lang.Integer", "com.github.dockerjava.api.model.HostConfig.getMemorySwappiness()", "public java.lang.Integer getMemorySwappiness()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.HostConfig.getOomKillDisable()", "public java.lang.Boolean getOomKillDisable()"], ["java.util.List<java.lang.String>", "com.github.dockerjava.api.model.HostConfig.getSecurityOpts()", "public java.util.List<java.lang.String> getSecurityOpts()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getCgroupParent()", "public java.lang.String getCgroupParent()"], ["java.lang.Long", "com.github.dockerjava.api.model.HostConfig.getShmSize()", "public java.lang.Long getShmSize()"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.getVolumeDriver()", "public java.lang.String getVolumeDriver()"], ["java.lang.Long", "com.github.dockerjava.api.model.HostConfig.getPidsLimit()", "public java.lang.Long getPidsLimit()"], ["boolean", "com.github.dockerjava.api.model.HostConfig.isUserDefinedNetwork()", "public boolean isUserDefinedNetwork()"], ["void", "com.github.dockerjava.api.model.HostConfig.setBinds(com.github.dockerjava.api.model.Bind...)", "public void setBinds(com.github.dockerjava.api.model.Bind...)"], ["void", "com.github.dockerjava.api.model.HostConfig.setLinks(com.github.dockerjava.api.model.Link...)", "public void setLinks(com.github.dockerjava.api.model.Link...)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBinds(com.github.dockerjava.api.model.Binds)", "public com.github.dockerjava.api.model.HostConfig withBinds(com.github.dockerjava.api.model.Binds)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBlkioDeviceReadBps(java.util.List<java.lang.Object>)", "public com.github.dockerjava.api.model.HostConfig withBlkioDeviceReadBps(java.util.List<java.lang.Object>)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBlkioDeviceReadIOps(java.util.List<java.lang.Object>)", "public com.github.dockerjava.api.model.HostConfig withBlkioDeviceReadIOps(java.util.List<java.lang.Object>)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBlkioDeviceWriteBps(java.util.List<java.lang.Object>)", "public com.github.dockerjava.api.model.HostConfig withBlkioDeviceWriteBps(java.util.List<java.lang.Object>)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBlkioDeviceWriteIOps(java.util.List<java.lang.Object>)", "public com.github.dockerjava.api.model.HostConfig withBlkioDeviceWriteIOps(java.util.List<java.lang.Object>)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBlkioWeight(java.lang.Integer)", "public com.github.dockerjava.api.model.HostConfig withBlkioWeight(java.lang.Integer)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withBlkioWeightDevice(java.util.List<java.lang.Object>)", "public com.github.dockerjava.api.model.HostConfig withBlkioWeightDevice(java.util.List<java.lang.Object>)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCapAdd(com.github.dockerjava.api.model.Capability[])", "public com.github.dockerjava.api.model.HostConfig withCapAdd(com.github.dockerjava.api.model.Capability[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCapDrop(com.github.dockerjava.api.model.Capability[])", "public com.github.dockerjava.api.model.HostConfig withCapDrop(com.github.dockerjava.api.model.Capability[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCgroupParent(java.lang.String)", "public com.github.dockerjava.api.model.HostConfig withCgroupParent(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withContainerIDFile(java.lang.String)", "public com.github.dockerjava.api.model.HostConfig withContainerIDFile(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCpuPeriod(java.lang.Integer)", "public com.github.dockerjava.api.model.HostConfig withCpuPeriod(java.lang.Integer)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCpuQuota(java.lang.Integer)", "public com.github.dockerjava.api.model.HostConfig withCpuQuota(java.lang.Integer)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCpusetCpus(java.lang.String)", "public com.github.dockerjava.api.model.HostConfig withCpusetCpus(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCpusetMems(java.lang.String)", "public com.github.dockerjava.api.model.HostConfig withCpusetMems(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withCpuShares(java.lang.Integer)", "public com.github.dockerjava.api.model.HostConfig withCpuShares(java.lang.Integer)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withDevices(com.github.dockerjava.api.model.Device[])", "public com.github.dockerjava.api.model.HostConfig withDevices(com.github.dockerjava.api.model.Device[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withDns(java.lang.String[])", "public com.github.dockerjava.api.model.HostConfig withDns(java.lang.String[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withDnsSearch(java.lang.String[])", "public com.github.dockerjava.api.model.HostConfig withDnsSearch(java.lang.String[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withExtraHosts(java.lang.String[])", "public com.github.dockerjava.api.model.HostConfig withExtraHosts(java.lang.String[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withKernelMemory(java.lang.Long)", "public com.github.dockerjava.api.model.HostConfig withKernelMemory(java.lang.Long)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withLinks(com.github.dockerjava.api.model.Links)", "public com.github.dockerjava.api.model.HostConfig withLinks(com.github.dockerjava.api.model.Links)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withLogConfig(com.github.dockerjava.api.model.LogConfig)", "public com.github.dockerjava.api.model.HostConfig withLogConfig(com.github.dockerjava.api.model.LogConfig)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withLxcConf(com.github.dockerjava.api.model.LxcConf[])", "public com.github.dockerjava.api.model.HostConfig withLxcConf(com.github.dockerjava.api.model.LxcConf[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withMemory(java.lang.Long)", "public com.github.dockerjava.api.model.HostConfig withMemory(java.lang.Long)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withMemoryReservation(java.lang.Long)", "public com.github.dockerjava.api.model.HostConfig withMemoryReservation(java.lang.Long)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withMemorySwap(java.lang.Long)", "public com.github.dockerjava.api.model.HostConfig withMemorySwap(java.lang.Long)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withMemorySwappiness(java.lang.Integer)", "public com.github.dockerjava.api.model.HostConfig withMemorySwappiness(java.lang.Integer)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withNetworkMode(java.lang.String)", "public com.github.dockerjava.api.model.HostConfig withNetworkMode(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withOomKillDisable(java.lang.Boolean)", "public com.github.dockerjava.api.model.HostConfig withOomKillDisable(java.lang.Boolean)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withOomScoreAdj(java.lang.Boolean)", "public com.github.dockerjava.api.model.HostConfig withOomScoreAdj(java.lang.Boolean)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withPidMode(java.lang.String)", "public com.github.dockerjava.api.model.HostConfig withPidMode(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withPortBindings(com.github.dockerjava.api.model.Ports)", "public com.github.dockerjava.api.model.HostConfig withPortBindings(com.github.dockerjava.api.model.Ports)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.HostConfig.getPrivileged()", "public java.lang.Boolean getPrivileged()"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withPrivileged(java.lang.Boolean)", "public com.github.dockerjava.api.model.HostConfig withPrivileged(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.HostConfig.getPublishAllPorts()", "public java.lang.Boolean getPublishAllPorts()"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withPublishAllPorts(java.lang.Boolean)", "public com.github.dockerjava.api.model.HostConfig withPublishAllPorts(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.HostConfig.getReadonlyRootfs()", "public java.lang.Boolean getReadonlyRootfs()"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withReadonlyRootfs(java.lang.Boolean)", "public com.github.dockerjava.api.model.HostConfig withReadonlyRootfs(java.lang.Boolean)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withRestartPolicy(com.github.dockerjava.api.model.RestartPolicy)", "public com.github.dockerjava.api.model.HostConfig withRestartPolicy(com.github.dockerjava.api.model.RestartPolicy)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withSecurityOpts(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.model.HostConfig withSecurityOpts(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withShmSize(java.lang.Long)", "public com.github.dockerjava.api.model.HostConfig withShmSize(java.lang.Long)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withUlimits(com.github.dockerjava.api.model.Ulimit[])", "public com.github.dockerjava.api.model.HostConfig withUlimits(com.github.dockerjava.api.model.Ulimit[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withVolumeDriver(java.lang.String)", "public com.github.dockerjava.api.model.HostConfig withVolumeDriver(java.lang.String)"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withVolumesFrom(com.github.dockerjava.api.model.VolumesFrom[])", "public com.github.dockerjava.api.model.HostConfig withVolumesFrom(com.github.dockerjava.api.model.VolumesFrom[])"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.api.model.HostConfig.withPidsLimit(java.lang.Long)", "public com.github.dockerjava.api.model.HostConfig withPidsLimit(java.lang.Long)"], ["java.lang.String", "com.github.dockerjava.api.model.HostConfig.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.HostConfig.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.HostConfig.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.ContainerNetwork$Ipam", "com.github.dockerjava.api.model.ContainerNetwork$Ipam()", "public com.github.dockerjava.api.model.ContainerNetwork$Ipam()"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork$Ipam.getIpv4Address()", "public java.lang.String getIpv4Address()"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerNetwork$Ipam.getIpv6Address()", "public java.lang.String getIpv6Address()"], ["com.github.dockerjava.api.model.ContainerNetwork$Ipam", "com.github.dockerjava.api.model.ContainerNetwork$Ipam.withIpv4Address(java.lang.String)", "public com.github.dockerjava.api.model.ContainerNetwork$Ipam withIpv4Address(java.lang.String)"], ["com.github.dockerjava.api.model.ContainerNetwork$Ipam", "com.github.dockerjava.api.model.ContainerNetwork$Ipam.withIpv6Address(java.lang.String)", "public com.github.dockerjava.api.model.ContainerNetwork$Ipam withIpv6Address(java.lang.String)"], ["com.github.dockerjava.api.model.Version", "com.github.dockerjava.api.model.Version()", "public com.github.dockerjava.api.model.Version()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getVersion()", "public java.lang.String getVersion()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getGitCommit()", "public java.lang.String getGitCommit()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getGoVersion()", "public java.lang.String getGoVersion()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getKernelVersion()", "public java.lang.String getKernelVersion()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getArch()", "public java.lang.String getArch()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getOperatingSystem()", "public java.lang.String getOperatingSystem()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getApiVersion()", "public java.lang.String getApiVersion()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.getBuildTime()", "public java.lang.String getBuildTime()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Version.getExperimental()", "public java.lang.Boolean getExperimental()"], ["java.lang.String", "com.github.dockerjava.api.model.Version.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.Version.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Version.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.exception.NotAcceptableException", "com.github.dockerjava.api.exception.NotAcceptableException(java.lang.String, java.lang.Throwable)", "public com.github.dockerjava.api.exception.NotAcceptableException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.NotAcceptableException", "com.github.dockerjava.api.exception.NotAcceptableException(java.lang.String)", "public com.github.dockerjava.api.exception.NotAcceptableException(java.lang.String)"], ["com.github.dockerjava.api.exception.NotAcceptableException", "com.github.dockerjava.api.exception.NotAcceptableException(java.lang.Throwable)", "public com.github.dockerjava.api.exception.NotAcceptableException(java.lang.Throwable)"], ["com.github.dockerjava.api.exception.UnauthorizedException", "com.github.dockerjava.api.exception.UnauthorizedException(java.lang.String, java.lang.Throwable)", "public com.github.dockerjava.api.exception.UnauthorizedException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.UnauthorizedException", "com.github.dockerjava.api.exception.UnauthorizedException(java.lang.String)", "public com.github.dockerjava.api.exception.UnauthorizedException(java.lang.String)"], ["com.github.dockerjava.api.exception.UnauthorizedException", "com.github.dockerjava.api.exception.UnauthorizedException(java.lang.Throwable)", "public com.github.dockerjava.api.exception.UnauthorizedException(java.lang.Throwable)"], ["com.github.dockerjava.api.exception.ConflictException", "com.github.dockerjava.api.exception.ConflictException(java.lang.String, java.lang.Throwable)", "public com.github.dockerjava.api.exception.ConflictException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.ConflictException", "com.github.dockerjava.api.exception.ConflictException(java.lang.String)", "public com.github.dockerjava.api.exception.ConflictException(java.lang.String)"], ["com.github.dockerjava.api.exception.ConflictException", "com.github.dockerjava.api.exception.ConflictException(java.lang.Throwable)", "public com.github.dockerjava.api.exception.ConflictException(java.lang.Throwable)"], ["com.github.dockerjava.api.exception.BadRequestException", "com.github.dockerjava.api.exception.BadRequestException(java.lang.String, java.lang.Throwable)", "public com.github.dockerjava.api.exception.BadRequestException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.BadRequestException", "com.github.dockerjava.api.exception.BadRequestException(java.lang.String)", "public com.github.dockerjava.api.exception.BadRequestException(java.lang.String)"], ["com.github.dockerjava.api.exception.BadRequestException", "com.github.dockerjava.api.exception.BadRequestException(java.lang.Throwable)", "public com.github.dockerjava.api.exception.BadRequestException(java.lang.Throwable)"], ["com.github.dockerjava.api.exception.NotModifiedException", "com.github.dockerjava.api.exception.NotModifiedException(java.lang.String, java.lang.Throwable)", "public com.github.dockerjava.api.exception.NotModifiedException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.NotModifiedException", "com.github.dockerjava.api.exception.NotModifiedException(java.lang.String)", "public com.github.dockerjava.api.exception.NotModifiedException(java.lang.String)"], ["com.github.dockerjava.api.exception.NotModifiedException", "com.github.dockerjava.api.exception.NotModifiedException(java.lang.Throwable)", "public com.github.dockerjava.api.exception.NotModifiedException(java.lang.Throwable)"], ["com.github.dockerjava.api.exception.DockerClientException", "com.github.dockerjava.api.exception.DockerClientException(java.lang.String)", "public com.github.dockerjava.api.exception.DockerClientException(java.lang.String)"], ["com.github.dockerjava.api.exception.DockerClientException", "com.github.dockerjava.api.exception.DockerClientException(java.lang.String, java.lang.Throwable)", "public com.github.dockerjava.api.exception.DockerClientException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.NotFoundException", "com.github.dockerjava.api.exception.NotFoundException(java.lang.String, java.lang.Throwable)", "public com.github.dockerjava.api.exception.NotFoundException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.NotFoundException", "com.github.dockerjava.api.exception.NotFoundException(java.lang.String)", "public com.github.dockerjava.api.exception.NotFoundException(java.lang.String)"], ["com.github.dockerjava.api.exception.NotFoundException", "com.github.dockerjava.api.exception.NotFoundException(java.lang.Throwable)", "public com.github.dockerjava.api.exception.NotFoundException(java.lang.Throwable)"], ["java.lang.String", "org.newsclub.net.unix.AFUNIXSocketImpl.toString()", "public java.lang.String toString()"], ["java.lang.Object", "org.newsclub.net.unix.AFUNIXSocketImpl.getOption(int)", "public java.lang.Object getOption(int) throws java.net.SocketException"], ["void", "org.newsclub.net.unix.AFUNIXSocketImpl.setOption(int, java.lang.Object)", "public void setOption(int, java.lang.Object) throws java.net.SocketException"], ["com.github.dockerjava.api.model.PropagationMode[]", "com.github.dockerjava.api.model.PropagationMode.values()", "public static com.github.dockerjava.api.model.PropagationMode[] values()"], ["com.github.dockerjava.api.model.PropagationMode", "com.github.dockerjava.api.model.PropagationMode.valueOf(java.lang.String)", "public static com.github.dockerjava.api.model.PropagationMode valueOf(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.PropagationMode.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.PropagationMode", "com.github.dockerjava.api.model.PropagationMode.fromString(java.lang.String)", "public static com.github.dockerjava.api.model.PropagationMode fromString(java.lang.String)"], ["com.github.dockerjava.api.model.Volume", "com.github.dockerjava.api.model.Volume(java.lang.String)", "public com.github.dockerjava.api.model.Volume(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Volume.getPath()", "public java.lang.String getPath()"], ["java.lang.String", "com.github.dockerjava.api.model.Volume.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.Volume.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Volume.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.Links$Deserializer", "com.github.dockerjava.api.model.Links$Deserializer()", "public com.github.dockerjava.api.model.Links$Deserializer()"], ["com.github.dockerjava.api.model.Links", "com.github.dockerjava.api.model.Links$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public com.github.dockerjava.api.model.Links deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["java.lang.Object", "com.github.dockerjava.api.model.Links$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.VolumesFrom$Serializer", "com.github.dockerjava.api.model.VolumesFrom$Serializer()", "public com.github.dockerjava.api.model.VolumesFrom$Serializer()"], ["void", "com.github.dockerjava.api.model.VolumesFrom$Serializer.serialize(com.github.dockerjava.api.model.VolumesFrom, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(com.github.dockerjava.api.model.VolumesFrom, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["void", "com.github.dockerjava.api.model.VolumesFrom$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.VolumeBind", "com.github.dockerjava.api.model.VolumeBind(java.lang.String, java.lang.String)", "public com.github.dockerjava.api.model.VolumeBind(java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.VolumeBind.getContainerPath()", "public java.lang.String getContainerPath()"], ["java.lang.String", "com.github.dockerjava.api.model.VolumeBind.getHostPath()", "public java.lang.String getHostPath()"], ["java.lang.String", "com.github.dockerjava.api.model.VolumeBind.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume)", "public com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume)"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, java.lang.Boolean)", "public com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, java.lang.Boolean)"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode)", "public com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode)"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode, com.github.dockerjava.api.model.SELContext)", "public com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode, com.github.dockerjava.api.model.SELContext)"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode, com.github.dockerjava.api.model.SELContext, java.lang.Boolean)", "public com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode, com.github.dockerjava.api.model.SELContext, java.lang.Boolean)"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode, com.github.dockerjava.api.model.SELContext, java.lang.Boolean, com.github.dockerjava.api.model.PropagationMode)", "public com.github.dockerjava.api.model.Bind(java.lang.String, com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode, com.github.dockerjava.api.model.SELContext, java.lang.Boolean, com.github.dockerjava.api.model.PropagationMode)"], ["java.lang.String", "com.github.dockerjava.api.model.Bind.getPath()", "public java.lang.String getPath()"], ["com.github.dockerjava.api.model.Volume", "com.github.dockerjava.api.model.Bind.getVolume()", "public com.github.dockerjava.api.model.Volume getVolume()"], ["com.github.dockerjava.api.model.AccessMode", "com.github.dockerjava.api.model.Bind.getAccessMode()", "public com.github.dockerjava.api.model.AccessMode getAccessMode()"], ["com.github.dockerjava.api.model.SELContext", "com.github.dockerjava.api.model.Bind.getSecMode()", "public com.github.dockerjava.api.model.SELContext getSecMode()"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Bind.getNoCopy()", "public java.lang.Boolean getNoCopy()"], ["com.github.dockerjava.api.model.PropagationMode", "com.github.dockerjava.api.model.Bind.getPropagationMode()", "public com.github.dockerjava.api.model.PropagationMode getPropagationMode()"], ["com.github.dockerjava.api.model.Bind", "com.github.dockerjava.api.model.Bind.parse(java.lang.String)", "public static com.github.dockerjava.api.model.Bind parse(java.lang.String)"], ["boolean", "com.github.dockerjava.api.model.Bind.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Bind.hashCode()", "public int hashCode()"], ["java.lang.String", "com.github.dockerjava.api.model.Bind.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.bindPortSpec(java.lang.String)", "public static com.github.dockerjava.api.model.Ports$Binding bindPortSpec(java.lang.String)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.bindIp(java.lang.String)", "public static com.github.dockerjava.api.model.Ports$Binding bindIp(java.lang.String)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.bindIpAndPort(java.lang.String, int)", "public static com.github.dockerjava.api.model.Ports$Binding bindIpAndPort(java.lang.String, int)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.bindIpAndPortRange(java.lang.String, int, int)", "public static com.github.dockerjava.api.model.Ports$Binding bindIpAndPortRange(java.lang.String, int, int)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.bindPortRange(int, int)", "public static com.github.dockerjava.api.model.Ports$Binding bindPortRange(int, int)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.bindPort(int)", "public static com.github.dockerjava.api.model.Ports$Binding bindPort(int)"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.empty()", "public static com.github.dockerjava.api.model.Ports$Binding empty()"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding(java.lang.String, java.lang.String)", "public com.github.dockerjava.api.model.Ports$Binding(java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Ports$Binding.getHostIp()", "public java.lang.String getHostIp()"], ["java.lang.String", "com.github.dockerjava.api.model.Ports$Binding.getHostPortSpec()", "public java.lang.String getHostPortSpec()"], ["com.github.dockerjava.api.model.Ports$Binding", "com.github.dockerjava.api.model.Ports$Binding.parse(java.lang.String)", "public static com.github.dockerjava.api.model.Ports$Binding parse(java.lang.String) throws java.lang.IllegalArgumentException"], ["java.lang.String", "com.github.dockerjava.api.model.Ports$Binding.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.Ports$Binding.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["com.github.dockerjava.api.command.CreateNetworkResponse", "com.github.dockerjava.api.command.CreateNetworkResponse()", "public com.github.dockerjava.api.command.CreateNetworkResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateNetworkResponse.getId()", "public java.lang.String getId()"], ["java.lang.String[]", "com.github.dockerjava.api.command.CreateNetworkResponse.getWarnings()", "public java.lang.String[] getWarnings()"], ["void", "com.github.dockerjava.api.command.CreateNetworkResponse.setId(java.lang.String)", "public void setId(java.lang.String)"], ["void", "com.github.dockerjava.api.command.CreateNetworkResponse.setWarnings(java.lang.String[])", "public void setWarnings(java.lang.String[])"], ["java.lang.String", "com.github.dockerjava.api.command.CreateNetworkResponse.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.command.ListVolumesResponse", "com.github.dockerjava.api.command.ListVolumesResponse()", "public com.github.dockerjava.api.command.ListVolumesResponse()"], ["java.util.List<com.github.dockerjava.api.command.InspectVolumeResponse>", "com.github.dockerjava.api.command.ListVolumesResponse.getVolumes()", "public java.util.List<com.github.dockerjava.api.command.InspectVolumeResponse> getVolumes()"], ["java.lang.String", "com.github.dockerjava.api.command.ListVolumesResponse.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.command.InspectExecResponse", "com.github.dockerjava.api.command.InspectExecResponse()", "public com.github.dockerjava.api.command.InspectExecResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse.getId()", "public java.lang.String getId()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse.isOpenStdin()", "public java.lang.Boolean isOpenStdin()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse.isOpenStderr()", "public java.lang.Boolean isOpenStderr()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse.isOpenStdout()", "public java.lang.Boolean isOpenStdout()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse.isRunning()", "public java.lang.Boolean isRunning()"], ["java.lang.Integer", "com.github.dockerjava.api.command.InspectExecResponse.getExitCode()", "public java.lang.Integer getExitCode()"], ["com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig", "com.github.dockerjava.api.command.InspectExecResponse.getProcessConfig()", "public com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig getProcessConfig()"], ["com.github.dockerjava.api.command.InspectExecResponse$Container", "com.github.dockerjava.api.command.InspectExecResponse.getContainer()", "public com.github.dockerjava.api.command.InspectExecResponse$Container getContainer()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse.getCanRemove()", "public java.lang.Boolean getCanRemove()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse.getContainerID()", "public java.lang.String getContainerID()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse.getDetachKeys()", "public java.lang.String getDetachKeys()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.command.CreateVolumeResponse", "com.github.dockerjava.api.command.CreateVolumeResponse()", "public com.github.dockerjava.api.command.CreateVolumeResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateVolumeResponse.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateVolumeResponse.getDriver()", "public java.lang.String getDriver()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateVolumeResponse.getMountpoint()", "public java.lang.String getMountpoint()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateVolumeResponse.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount()", "public com.github.dockerjava.api.command.InspectContainerResponse$Mount()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.getSource()", "public java.lang.String getSource()"], ["com.github.dockerjava.api.model.Volume", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.getDestination()", "public com.github.dockerjava.api.model.Volume getDestination()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.getDriver()", "public java.lang.String getDriver()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.getMode()", "public java.lang.String getMode()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.getRW()", "public java.lang.Boolean getRW()"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.withDestination(com.github.dockerjava.api.model.Volume)", "public com.github.dockerjava.api.command.InspectContainerResponse$Mount withDestination(com.github.dockerjava.api.model.Volume)"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.withDriver(java.lang.String)", "public com.github.dockerjava.api.command.InspectContainerResponse$Mount withDriver(java.lang.String)"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.withMode(java.lang.String)", "public com.github.dockerjava.api.command.InspectContainerResponse$Mount withMode(java.lang.String)"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.withName(java.lang.String)", "public com.github.dockerjava.api.command.InspectContainerResponse$Mount withName(java.lang.String)"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.withRw(java.lang.Boolean)", "public com.github.dockerjava.api.command.InspectContainerResponse$Mount withRw(java.lang.Boolean)"], ["com.github.dockerjava.api.command.InspectContainerResponse$Mount", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.withSource(java.lang.String)", "public com.github.dockerjava.api.command.InspectContainerResponse$Mount withSource(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.command.InspectContainerResponse$Mount.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.command.InspectContainerResponse$ContainerState", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState(com.github.dockerjava.api.command.InspectContainerResponse)", "public com.github.dockerjava.api.command.InspectContainerResponse$ContainerState(com.github.dockerjava.api.command.InspectContainerResponse)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getStatus()", "public java.lang.String getStatus()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getRunning()", "public java.lang.Boolean getRunning()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getPaused()", "public java.lang.Boolean getPaused()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getRestarting()", "public java.lang.Boolean getRestarting()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getOOMKilled()", "public java.lang.Boolean getOOMKilled()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getDead()", "public java.lang.Boolean getDead()"], ["java.lang.Integer", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getPid()", "public java.lang.Integer getPid()"], ["java.lang.Integer", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getExitCode()", "public java.lang.Integer getExitCode()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getError()", "public java.lang.String getError()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getStartedAt()", "public java.lang.String getStartedAt()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getFinishedAt()", "public java.lang.String getFinishedAt()"], ["com.github.dockerjava.api.command.HealthState", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.getHealth()", "public com.github.dockerjava.api.command.HealthState getHealth()"], ["boolean", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.hashCode()", "public int hashCode()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.command.CreateImageResponse", "com.github.dockerjava.api.command.CreateImageResponse()", "public com.github.dockerjava.api.command.CreateImageResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateImageResponse.getId()", "public java.lang.String getId()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateImageResponse.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.command.InspectVolumeResponse", "com.github.dockerjava.api.command.InspectVolumeResponse()", "public com.github.dockerjava.api.command.InspectVolumeResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectVolumeResponse.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectVolumeResponse.getDriver()", "public java.lang.String getDriver()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectVolumeResponse.getMountpoint()", "public java.lang.String getMountpoint()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectVolumeResponse.toString()", "public java.lang.String toString()"], ["void", "org.newsclub.net.unix.AFUNIXSocketImpl$Lenient.setOption(int, java.lang.Object)", "public void setOption(int, java.lang.Object) throws java.net.SocketException"], ["java.lang.Object", "org.newsclub.net.unix.AFUNIXSocketImpl$Lenient.getOption(int)", "public java.lang.Object getOption(int) throws java.net.SocketException"], ["com.github.dockerjava.api.model.ErrorResponse", "com.github.dockerjava.api.model.ErrorResponse()", "public com.github.dockerjava.api.model.ErrorResponse()"], ["com.github.dockerjava.api.model.ErrorDetail", "com.github.dockerjava.api.model.ErrorResponse.getErrorDetail()", "public com.github.dockerjava.api.model.ErrorDetail getErrorDetail()"], ["java.lang.String", "com.github.dockerjava.api.model.ErrorResponse.getError()", "public java.lang.String getError()"], ["com.github.dockerjava.api.model.ErrorDetail", "com.github.dockerjava.api.model.ErrorDetail()", "public com.github.dockerjava.api.model.ErrorDetail()"], ["java.lang.String", "com.github.dockerjava.api.model.ErrorDetail.getMessage()", "public java.lang.String getMessage()"], ["com.github.dockerjava.api.model.Capability[]", "com.github.dockerjava.api.model.Capability.values()", "public static com.github.dockerjava.api.model.Capability[] values()"], ["com.github.dockerjava.api.model.Capability", "com.github.dockerjava.api.model.Capability.valueOf(java.lang.String)", "public static com.github.dockerjava.api.model.Capability valueOf(java.lang.String)"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig()", "public com.github.dockerjava.api.model.AuthConfig()"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.getUsername()", "public java.lang.String getUsername()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig.withUsername(java.lang.String)", "public com.github.dockerjava.api.model.AuthConfig withUsername(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.getPassword()", "public java.lang.String getPassword()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig.withPassword(java.lang.String)", "public com.github.dockerjava.api.model.AuthConfig withPassword(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.getEmail()", "public java.lang.String getEmail()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig.withEmail(java.lang.String)", "public com.github.dockerjava.api.model.AuthConfig withEmail(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.getRegistryAddress()", "public java.lang.String getRegistryAddress()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig.withRegistryAddress(java.lang.String)", "public com.github.dockerjava.api.model.AuthConfig withRegistryAddress(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.getAuth()", "public java.lang.String getAuth()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig.withAuth(java.lang.String)", "public com.github.dockerjava.api.model.AuthConfig withAuth(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.getRegistrytoken()", "public java.lang.String getRegistrytoken()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.api.model.AuthConfig.withRegistrytoken(java.lang.String)", "public com.github.dockerjava.api.model.AuthConfig withRegistrytoken(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.AuthConfig.toString()", "public java.lang.String toString()"], ["int", "com.github.dockerjava.api.model.AuthConfig.hashCode()", "public int hashCode()"], ["boolean", "com.github.dockerjava.api.model.AuthConfig.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["com.github.dockerjava.api.model.Frame", "com.github.dockerjava.api.model.Frame(com.github.dockerjava.api.model.StreamType, byte[])", "public com.github.dockerjava.api.model.Frame(com.github.dockerjava.api.model.StreamType, byte[])"], ["com.github.dockerjava.api.model.StreamType", "com.github.dockerjava.api.model.Frame.getStreamType()", "public com.github.dockerjava.api.model.StreamType getStreamType()"], ["byte[]", "com.github.dockerjava.api.model.Frame.getPayload()", "public byte[] getPayload()"], ["java.lang.String", "com.github.dockerjava.api.model.Frame.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.Frame.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Frame.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.ExposedPorts$Serializer", "com.github.dockerjava.api.model.ExposedPorts$Serializer()", "public com.github.dockerjava.api.model.ExposedPorts$Serializer()"], ["void", "com.github.dockerjava.api.model.ExposedPorts$Serializer.serialize(com.github.dockerjava.api.model.ExposedPorts, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(com.github.dockerjava.api.model.ExposedPorts, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["void", "com.github.dockerjava.api.model.ExposedPorts$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.VolumeBinds$Deserializer", "com.github.dockerjava.api.model.VolumeBinds$Deserializer()", "public com.github.dockerjava.api.model.VolumeBinds$Deserializer()"], ["com.github.dockerjava.api.model.VolumeBinds", "com.github.dockerjava.api.model.VolumeBinds$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public com.github.dockerjava.api.model.VolumeBinds deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["java.lang.Object", "com.github.dockerjava.api.model.VolumeBinds$Deserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)", "public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.ResponseItem$ErrorDetail", "com.github.dockerjava.api.model.ResponseItem$ErrorDetail()", "public com.github.dockerjava.api.model.ResponseItem$ErrorDetail()"], ["java.lang.Integer", "com.github.dockerjava.api.model.ResponseItem$ErrorDetail.getCode()", "public java.lang.Integer getCode()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem$ErrorDetail.getMessage()", "public java.lang.String getMessage()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem$ErrorDetail.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.VolumesFrom", "com.github.dockerjava.api.model.VolumesFrom(java.lang.String)", "public com.github.dockerjava.api.model.VolumesFrom(java.lang.String)"], ["com.github.dockerjava.api.model.VolumesFrom", "com.github.dockerjava.api.model.VolumesFrom(java.lang.String, com.github.dockerjava.api.model.AccessMode)", "public com.github.dockerjava.api.model.VolumesFrom(java.lang.String, com.github.dockerjava.api.model.AccessMode)"], ["java.lang.String", "com.github.dockerjava.api.model.VolumesFrom.getContainer()", "public java.lang.String getContainer()"], ["com.github.dockerjava.api.model.AccessMode", "com.github.dockerjava.api.model.VolumesFrom.getAccessMode()", "public com.github.dockerjava.api.model.AccessMode getAccessMode()"], ["com.github.dockerjava.api.model.VolumesFrom", "com.github.dockerjava.api.model.VolumesFrom.parse(java.lang.String)", "public static com.github.dockerjava.api.model.VolumesFrom parse(java.lang.String)"], ["boolean", "com.github.dockerjava.api.model.VolumesFrom.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.VolumesFrom.hashCode()", "public int hashCode()"], ["java.lang.String", "com.github.dockerjava.api.model.VolumesFrom.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.Volumes$Serializer", "com.github.dockerjava.api.model.Volumes$Serializer()", "public com.github.dockerjava.api.model.Volumes$Serializer()"], ["void", "com.github.dockerjava.api.model.Volumes$Serializer.serialize(com.github.dockerjava.api.model.Volumes, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(com.github.dockerjava.api.model.Volumes, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["void", "com.github.dockerjava.api.model.Volumes$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.AuthConfigurations", "com.github.dockerjava.api.model.AuthConfigurations()", "public com.github.dockerjava.api.model.AuthConfigurations()"], ["void", "com.github.dockerjava.api.model.AuthConfigurations.addConfig(com.github.dockerjava.api.model.AuthConfig)", "public void addConfig(com.github.dockerjava.api.model.AuthConfig)"], ["java.util.Map<java.lang.String, com.github.dockerjava.api.model.AuthConfig>", "com.github.dockerjava.api.model.AuthConfigurations.getConfigs()", "public java.util.Map<java.lang.String, com.github.dockerjava.api.model.AuthConfig> getConfigs()"], ["com.github.dockerjava.api.model.ResponseItem", "com.github.dockerjava.api.model.ResponseItem()", "public com.github.dockerjava.api.model.ResponseItem()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.getStream()", "public java.lang.String getStream()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.getStatus()", "public java.lang.String getStatus()"], ["com.github.dockerjava.api.model.ResponseItem$ProgressDetail", "com.github.dockerjava.api.model.ResponseItem.getProgressDetail()", "public com.github.dockerjava.api.model.ResponseItem$ProgressDetail getProgressDetail()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.getProgress()", "public java.lang.String getProgress()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.getId()", "public java.lang.String getId()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.getFrom()", "public java.lang.String getFrom()"], ["java.lang.Long", "com.github.dockerjava.api.model.ResponseItem.getTime()", "public java.lang.Long getTime()"], ["com.github.dockerjava.api.model.ResponseItem$ErrorDetail", "com.github.dockerjava.api.model.ResponseItem.getErrorDetail()", "public com.github.dockerjava.api.model.ResponseItem$ErrorDetail getErrorDetail()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.getError()", "public java.lang.String getError()"], ["com.github.dockerjava.api.model.ResponseItem$AuxDetail", "com.github.dockerjava.api.model.ResponseItem.getAux()", "public com.github.dockerjava.api.model.ResponseItem$AuxDetail getAux()"], ["boolean", "com.github.dockerjava.api.model.ResponseItem.isErrorIndicated()", "public boolean isErrorIndicated()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.VolumeRW", "com.github.dockerjava.api.model.VolumeRW(com.github.dockerjava.api.model.Volume)", "public com.github.dockerjava.api.model.VolumeRW(com.github.dockerjava.api.model.Volume)"], ["com.github.dockerjava.api.model.VolumeRW", "com.github.dockerjava.api.model.VolumeRW(com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode)", "public com.github.dockerjava.api.model.VolumeRW(com.github.dockerjava.api.model.Volume, com.github.dockerjava.api.model.AccessMode)"], ["com.github.dockerjava.api.model.Volume", "com.github.dockerjava.api.model.VolumeRW.getVolume()", "public com.github.dockerjava.api.model.Volume getVolume()"], ["com.github.dockerjava.api.model.AccessMode", "com.github.dockerjava.api.model.VolumeRW.getAccessMode()", "public com.github.dockerjava.api.model.AccessMode getAccessMode()"], ["java.lang.String", "com.github.dockerjava.api.model.VolumeRW.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.VolumeRW.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.VolumeRW.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.Binds$Serializer", "com.github.dockerjava.api.model.Binds$Serializer()", "public com.github.dockerjava.api.model.Binds$Serializer()"], ["void", "com.github.dockerjava.api.model.Binds$Serializer.serialize(com.github.dockerjava.api.model.Binds, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(com.github.dockerjava.api.model.Binds, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["void", "com.github.dockerjava.api.model.Binds$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.exception.DockerException", "com.github.dockerjava.api.exception.DockerException(java.lang.String, int)", "public com.github.dockerjava.api.exception.DockerException(java.lang.String, int)"], ["com.github.dockerjava.api.exception.DockerException", "com.github.dockerjava.api.exception.DockerException(java.lang.String, int, java.lang.Throwable)", "public com.github.dockerjava.api.exception.DockerException(java.lang.String, int, java.lang.Throwable)"], ["int", "com.github.dockerjava.api.exception.DockerException.getHttpStatus()", "public int getHttpStatus()"], ["com.github.dockerjava.api.exception.InternalServerErrorException", "com.github.dockerjava.api.exception.InternalServerErrorException(java.lang.String, java.lang.Throwable)", "public com.github.dockerjava.api.exception.InternalServerErrorException(java.lang.String, java.lang.Throwable)"], ["com.github.dockerjava.api.exception.InternalServerErrorException", "com.github.dockerjava.api.exception.InternalServerErrorException(java.lang.String)", "public com.github.dockerjava.api.exception.InternalServerErrorException(java.lang.String)"], ["com.github.dockerjava.api.exception.InternalServerErrorException", "com.github.dockerjava.api.exception.InternalServerErrorException(java.lang.Throwable)", "public com.github.dockerjava.api.exception.InternalServerErrorException(java.lang.Throwable)"], ["com.github.dockerjava.api.command.HealthStateLog", "com.github.dockerjava.api.command.HealthStateLog()", "public com.github.dockerjava.api.command.HealthStateLog()"], ["java.lang.String", "com.github.dockerjava.api.command.HealthStateLog.getStart()", "public java.lang.String getStart()"], ["java.lang.String", "com.github.dockerjava.api.command.HealthStateLog.getEnd()", "public java.lang.String getEnd()"], ["java.lang.Integer", "com.github.dockerjava.api.command.HealthStateLog.getExitCode()", "public java.lang.Integer getExitCode()"], ["java.lang.String", "com.github.dockerjava.api.command.HealthStateLog.getOutput()", "public java.lang.String getOutput()"], ["com.github.dockerjava.netty.exec.PushImageCmdExec", "com.github.dockerjava.netty.exec.PushImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.PushImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.TopContainerCmdExec", "com.github.dockerjava.netty.exec.TopContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.TopContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.StartContainerCmdExec", "com.github.dockerjava.netty.exec.StartContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.StartContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.PullImageCmdExec", "com.github.dockerjava.netty.exec.PullImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.PullImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.CopyArchiveFromContainerCmdExec", "com.github.dockerjava.netty.exec.CopyArchiveFromContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.CopyArchiveFromContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.RemoveContainerCmdExec", "com.github.dockerjava.netty.exec.RemoveContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.RemoveContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.netty.InvocationBuilder$7.operationComplete(io.netty.channel.ChannelFuture)", "public void operationComplete(io.netty.channel.ChannelFuture) throws java.lang.Exception"], ["void", "com.github.dockerjava.netty.InvocationBuilder$7.operationComplete(io.netty.util.concurrent.Future)", "public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception"], ["io.netty.handler.codec.http.HttpRequest", "com.github.dockerjava.netty.InvocationBuilder$4.getHttpRequest(java.lang.String)", "public io.netty.handler.codec.http.HttpRequest getHttpRequest(java.lang.String)"], ["com.github.dockerjava.core.NameParser$HostnameReposName", "com.github.dockerjava.core.NameParser$HostnameReposName(java.lang.String, java.lang.String)", "public com.github.dockerjava.core.NameParser$HostnameReposName(java.lang.String, java.lang.String)"], ["boolean", "com.github.dockerjava.core.NameParser$HostnameReposName.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "com.github.dockerjava.core.NameParser$HostnameReposName.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.core.exception.InvalidRepositoryNameException", "com.github.dockerjava.core.exception.InvalidRepositoryNameException()", "public com.github.dockerjava.core.exception.InvalidRepositoryNameException()"], ["com.github.dockerjava.core.exception.InvalidRepositoryNameException", "com.github.dockerjava.core.exception.InvalidRepositoryNameException(java.lang.String)", "public com.github.dockerjava.core.exception.InvalidRepositoryNameException(java.lang.String)"], ["com.github.dockerjava.core.GoLangFileMatch$RangeParseState[]", "com.github.dockerjava.core.GoLangFileMatch$RangeParseState.values()", "public static com.github.dockerjava.core.GoLangFileMatch$RangeParseState[] values()"], ["com.github.dockerjava.core.GoLangFileMatch$RangeParseState", "com.github.dockerjava.core.GoLangFileMatch$RangeParseState.valueOf(java.lang.String)", "public static com.github.dockerjava.core.GoLangFileMatch$RangeParseState valueOf(java.lang.String)"], ["com.github.dockerjava.core.KeystoreSSLConfig", "com.github.dockerjava.core.KeystoreSSLConfig(java.security.KeyStore, java.lang.String)", "public com.github.dockerjava.core.KeystoreSSLConfig(java.security.KeyStore, java.lang.String)"], ["com.github.dockerjava.core.KeystoreSSLConfig", "com.github.dockerjava.core.KeystoreSSLConfig(java.io.File, java.lang.String)", "public com.github.dockerjava.core.KeystoreSSLConfig(java.io.File, java.lang.String) throws java.security.KeyStoreException, java.io.IOException, java.security.cert.CertificateException, java.security.NoSuchAlgorithmException"], ["javax.net.ssl.SSLContext", "com.github.dockerjava.core.KeystoreSSLConfig.getSSLContext()", "public javax.net.ssl.SSLContext getSSLContext() throws java.security.KeyManagementException, java.security.UnrecoverableKeyException, java.security.NoSuchAlgorithmException, java.security.KeyStoreException"], ["boolean", "com.github.dockerjava.core.KeystoreSSLConfig.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.KeystoreSSLConfig.hashCode()", "public int hashCode()"], ["java.lang.String", "com.github.dockerjava.core.KeystoreSSLConfig.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.core.async.FrameStreamProcessor", "com.github.dockerjava.core.async.FrameStreamProcessor()", "public com.github.dockerjava.core.async.FrameStreamProcessor()"], ["void", "com.github.dockerjava.core.async.FrameStreamProcessor.processResponseStream(java.io.InputStream, com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>)", "public void processResponseStream(java.io.InputStream, com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>)"], ["com.github.dockerjava.core.async.ResultCallbackTemplate", "com.github.dockerjava.core.async.ResultCallbackTemplate()", "public com.github.dockerjava.core.async.ResultCallbackTemplate()"], ["void", "com.github.dockerjava.core.async.ResultCallbackTemplate.onStart(java.io.Closeable)", "public void onStart(java.io.Closeable)"], ["void", "com.github.dockerjava.core.async.ResultCallbackTemplate.onError(java.lang.Throwable)", "public void onError(java.lang.Throwable)"], ["void", "com.github.dockerjava.core.async.ResultCallbackTemplate.onComplete()", "public void onComplete()"], ["void", "com.github.dockerjava.core.async.ResultCallbackTemplate.close()", "public void close() throws java.io.IOException"], ["RC_T", "com.github.dockerjava.core.async.ResultCallbackTemplate.awaitCompletion()", "public RC_T awaitCompletion() throws java.lang.InterruptedException"], ["boolean", "com.github.dockerjava.core.async.ResultCallbackTemplate.awaitCompletion(long, java.util.concurrent.TimeUnit)", "public boolean awaitCompletion(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException"], ["RC_T", "com.github.dockerjava.core.async.ResultCallbackTemplate.awaitStarted()", "public RC_T awaitStarted() throws java.lang.InterruptedException"], ["boolean", "com.github.dockerjava.core.async.ResultCallbackTemplate.awaitStarted(long, java.util.concurrent.TimeUnit)", "public boolean awaitStarted(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException"], ["boolean", "com.github.dockerjava.core.RemoteApiVersion$1.isGreaterOrEqual(com.github.dockerjava.core.RemoteApiVersion)", "public boolean isGreaterOrEqual(com.github.dockerjava.core.RemoteApiVersion)"], ["java.lang.String", "com.github.dockerjava.core.RemoteApiVersion$1.toString()", "public java.lang.String toString()"], ["java.lang.String", "com.github.dockerjava.core.RemoteApiVersion$1.asWebPathPart()", "public java.lang.String asWebPathPart()"], ["java.lang.String", "com.github.dockerjava.core.util.FiltersEncoder.jsonEncode(java.util.Map<java.lang.String, java.util.List<java.lang.String>>)", "public static java.lang.String jsonEncode(java.util.Map<java.lang.String, java.util.List<java.lang.String>>)"], ["com.github.dockerjava.core.util.TarDirWalker", "com.github.dockerjava.core.util.TarDirWalker(java.nio.file.Path, org.apache.commons.compress.archivers.tar.TarArchiveOutputStream)", "public com.github.dockerjava.core.util.TarDirWalker(java.nio.file.Path, org.apache.commons.compress.archivers.tar.TarArchiveOutputStream)"], ["java.nio.file.FileVisitResult", "com.github.dockerjava.core.util.TarDirWalker.preVisitDirectory(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes)", "public java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException"], ["java.nio.file.FileVisitResult", "com.github.dockerjava.core.util.TarDirWalker.visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes)", "public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException"], ["java.nio.file.FileVisitResult", "com.github.dockerjava.core.util.TarDirWalker.visitFileFailed(java.nio.file.Path, java.io.IOException)", "public java.nio.file.FileVisitResult visitFileFailed(java.nio.file.Path, java.io.IOException) throws java.io.IOException"], ["java.nio.file.FileVisitResult", "com.github.dockerjava.core.util.TarDirWalker.visitFileFailed(java.lang.Object, java.io.IOException)", "public java.nio.file.FileVisitResult visitFileFailed(java.lang.Object, java.io.IOException) throws java.io.IOException"], ["java.nio.file.FileVisitResult", "com.github.dockerjava.core.util.TarDirWalker.visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes)", "public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException"], ["java.nio.file.FileVisitResult", "com.github.dockerjava.core.util.TarDirWalker.preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes)", "public java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException"], ["boolean", "com.github.dockerjava.core.util.CertificateUtils.verifyCertificatesExist(java.lang.String)", "public static boolean verifyCertificatesExist(java.lang.String)"], ["java.security.KeyStore", "com.github.dockerjava.core.util.CertificateUtils.createKeyStore(java.lang.String, java.lang.String)", "public static java.security.KeyStore createKeyStore(java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException, java.io.IOException, java.security.cert.CertificateException, java.security.KeyStoreException"], ["java.util.List<java.security.cert.Certificate>", "com.github.dockerjava.core.util.CertificateUtils.loadCertificates(java.lang.String)", "public static java.util.List<java.security.cert.Certificate> loadCertificates(java.lang.String) throws java.io.IOException, java.security.cert.CertificateException"], ["java.util.List<java.security.cert.Certificate>", "com.github.dockerjava.core.util.CertificateUtils.loadCertificates(java.io.Reader)", "public static java.util.List<java.security.cert.Certificate> loadCertificates(java.io.Reader) throws java.io.IOException, java.security.cert.CertificateException"], ["java.security.PrivateKey", "com.github.dockerjava.core.util.CertificateUtils.loadPrivateKey(java.io.Reader)", "public static java.security.PrivateKey loadPrivateKey(java.io.Reader) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException"], ["java.security.PrivateKey", "com.github.dockerjava.core.util.CertificateUtils.guessKey(byte[])", "public static java.security.PrivateKey guessKey(byte[]) throws java.security.NoSuchAlgorithmException"], ["java.security.PrivateKey", "com.github.dockerjava.core.util.CertificateUtils.loadPrivateKey(java.lang.String)", "public static java.security.PrivateKey loadPrivateKey(java.lang.String) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException"], ["java.security.KeyStore", "com.github.dockerjava.core.util.CertificateUtils.createTrustStore(java.lang.String)", "public static java.security.KeyStore createTrustStore(java.lang.String) throws java.io.IOException, java.security.cert.CertificateException, java.security.KeyStoreException, java.security.NoSuchAlgorithmException"], ["java.security.KeyStore", "com.github.dockerjava.core.util.CertificateUtils.createTrustStore(java.io.Reader)", "public static java.security.KeyStore createTrustStore(java.io.Reader) throws java.io.IOException, java.security.cert.CertificateException, java.security.KeyStoreException, java.security.NoSuchAlgorithmException"], ["com.github.dockerjava.core.dockerfile.Dockerfile", "com.github.dockerjava.core.dockerfile.Dockerfile(java.io.File, java.io.File)", "public com.github.dockerjava.core.dockerfile.Dockerfile(java.io.File, java.io.File)"], ["java.lang.Iterable<com.github.dockerjava.core.dockerfile.DockerfileStatement>", "com.github.dockerjava.core.dockerfile.Dockerfile.getStatements()", "public java.lang.Iterable<com.github.dockerjava.core.dockerfile.DockerfileStatement> getStatements() throws java.io.IOException"], ["java.util.List<java.lang.String>", "com.github.dockerjava.core.dockerfile.Dockerfile.getIgnores()", "public java.util.List<java.lang.String> getIgnores() throws java.io.IOException"], ["com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult", "com.github.dockerjava.core.dockerfile.Dockerfile.parse()", "public com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult parse() throws java.io.IOException"], ["java.io.InputStream", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult.buildDockerFolderTar()", "public java.io.InputStream buildDockerFolderTar()"], ["java.io.InputStream", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult.buildDockerFolderTar(java.io.File)", "public java.io.InputStream buildDockerFolderTar(java.io.File)"], ["java.lang.String", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult(com.github.dockerjava.core.dockerfile.Dockerfile)", "public com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult(com.github.dockerjava.core.dockerfile.Dockerfile) throws java.io.IOException"], ["com.google.common.base.Optional<com.github.dockerjava.core.dockerfile.DockerfileStatement$Env>", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Env.create(java.lang.String)", "public static com.google.common.base.Optional<com.github.dockerjava.core.dockerfile.DockerfileStatement$Env> create(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Env.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.core.command.RemoveImageCmdImpl", "com.github.dockerjava.core.command.RemoveImageCmdImpl(com.github.dockerjava.api.command.RemoveImageCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.RemoveImageCmdImpl(com.github.dockerjava.api.command.RemoveImageCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.RemoveImageCmdImpl.getImageId()", "public java.lang.String getImageId()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.RemoveImageCmdImpl.hasForceEnabled()", "public java.lang.Boolean hasForceEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.RemoveImageCmdImpl.hasNoPruneEnabled()", "public java.lang.Boolean hasNoPruneEnabled()"], ["com.github.dockerjava.api.command.RemoveImageCmd", "com.github.dockerjava.core.command.RemoveImageCmdImpl.withImageId(java.lang.String)", "public com.github.dockerjava.api.command.RemoveImageCmd withImageId(java.lang.String)"], ["com.github.dockerjava.api.command.RemoveImageCmd", "com.github.dockerjava.core.command.RemoveImageCmdImpl.withForce(java.lang.Boolean)", "public com.github.dockerjava.api.command.RemoveImageCmd withForce(java.lang.Boolean)"], ["com.github.dockerjava.api.command.RemoveImageCmd", "com.github.dockerjava.core.command.RemoveImageCmdImpl.withNoPrune(java.lang.Boolean)", "public com.github.dockerjava.api.command.RemoveImageCmd withNoPrune(java.lang.Boolean)"], ["java.lang.Void", "com.github.dockerjava.core.command.RemoveImageCmdImpl.exec()", "public java.lang.Void exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.RemoveImageCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.CreateContainerCmdImpl", "com.github.dockerjava.core.command.CreateContainerCmdImpl(com.github.dockerjava.api.command.CreateContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.CreateContainerCmdImpl(com.github.dockerjava.api.command.CreateContainerCmd$Exec, java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerResponse", "com.github.dockerjava.core.command.CreateContainerCmdImpl.exec()", "public com.github.dockerjava.api.command.CreateContainerResponse exec() throws com.github.dockerjava.api.exception.NotFoundException, com.github.dockerjava.api.exception.ConflictException"], ["java.util.List<java.lang.String>", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getAliases()", "public java.util.List<java.lang.String> getAliases()"], ["com.github.dockerjava.api.model.Bind[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getBinds()", "public com.github.dockerjava.api.model.Bind[] getBinds()"], ["java.lang.Integer", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getBlkioWeight()", "public java.lang.Integer getBlkioWeight()"], ["com.github.dockerjava.api.model.Capability[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCapAdd()", "public com.github.dockerjava.api.model.Capability[] getCapAdd()"], ["com.github.dockerjava.api.model.Capability[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCapDrop()", "public com.github.dockerjava.api.model.Capability[] getCapDrop()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCmd()", "public java.lang.String[] getCmd()"], ["java.lang.Integer", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCpuPeriod()", "public java.lang.Integer getCpuPeriod()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCpusetCpus()", "public java.lang.String getCpusetCpus()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCpusetMems()", "public java.lang.String getCpusetMems()"], ["java.lang.Integer", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCpuShares()", "public java.lang.Integer getCpuShares()"], ["com.github.dockerjava.api.model.Device[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getDevices()", "public com.github.dockerjava.api.model.Device[] getDevices()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getDns()", "public java.lang.String[] getDns()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getDnsSearch()", "public java.lang.String[] getDnsSearch()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getDomainName()", "public java.lang.String getDomainName()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getEntrypoint()", "public java.lang.String[] getEntrypoint()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getEnv()", "public java.lang.String[] getEnv()"], ["com.github.dockerjava.api.model.ExposedPort[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getExposedPorts()", "public com.github.dockerjava.api.model.ExposedPort[] getExposedPorts()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getStopSignal()", "public java.lang.String getStopSignal()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getExtraHosts()", "public java.lang.String[] getExtraHosts()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getHostName()", "public java.lang.String getHostName()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getImage()", "public java.lang.String getImage()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getIpv4Address()", "public java.lang.String getIpv4Address()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getIpv6Address()", "public java.lang.String getIpv6Address()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getLabels()", "public java.util.Map<java.lang.String, java.lang.String> getLabels()"], ["com.github.dockerjava.api.model.Link[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getLinks()", "public com.github.dockerjava.api.model.Link[] getLinks()"], ["com.github.dockerjava.api.model.LxcConf[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getLxcConf()", "public com.github.dockerjava.api.model.LxcConf[] getLxcConf()"], ["com.github.dockerjava.api.model.LogConfig", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getLogConfig()", "public com.github.dockerjava.api.model.LogConfig getLogConfig()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getMacAddress()", "public java.lang.String getMacAddress()"], ["java.lang.Long", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getMemory()", "public java.lang.Long getMemory()"], ["java.lang.Long", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getMemorySwap()", "public java.lang.Long getMemorySwap()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getNetworkMode()", "public java.lang.String getNetworkMode()"], ["com.github.dockerjava.api.model.Ports", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getPortBindings()", "public com.github.dockerjava.api.model.Ports getPortBindings()"], ["java.lang.String[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getPortSpecs()", "public java.lang.String[] getPortSpecs()"], ["com.github.dockerjava.api.model.RestartPolicy", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getRestartPolicy()", "public com.github.dockerjava.api.model.RestartPolicy getRestartPolicy()"], ["com.github.dockerjava.api.model.Ulimit[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getUlimits()", "public com.github.dockerjava.api.model.Ulimit[] getUlimits()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getUser()", "public java.lang.String getUser()"], ["com.github.dockerjava.api.model.Volume[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getVolumes()", "public com.github.dockerjava.api.model.Volume[] getVolumes()"], ["com.github.dockerjava.api.model.VolumesFrom[]", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getVolumesFrom()", "public com.github.dockerjava.api.model.VolumesFrom[] getVolumesFrom()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getWorkingDir()", "public java.lang.String getWorkingDir()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isAttachStderr()", "public java.lang.Boolean isAttachStderr()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isAttachStdin()", "public java.lang.Boolean isAttachStdin()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isAttachStdout()", "public java.lang.Boolean isAttachStdout()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isNetworkDisabled()", "public java.lang.Boolean isNetworkDisabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getOomKillDisable()", "public java.lang.Boolean getOomKillDisable()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getPrivileged()", "public java.lang.Boolean getPrivileged()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getPublishAllPorts()", "public java.lang.Boolean getPublishAllPorts()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getReadonlyRootfs()", "public java.lang.Boolean getReadonlyRootfs()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isStdInOnce()", "public java.lang.Boolean isStdInOnce()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isStdinOpen()", "public java.lang.Boolean isStdinOpen()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.isTty()", "public java.lang.Boolean isTty()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getPidMode()", "public java.lang.String getPidMode()"], ["com.github.dockerjava.api.model.HostConfig", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getHostConfig()", "public com.github.dockerjava.api.model.HostConfig getHostConfig()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.getCgroupParent()", "public java.lang.String getCgroupParent()"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withAliases(java.lang.String...)", "public com.github.dockerjava.api.command.CreateContainerCmd withAliases(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withAliases(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.command.CreateContainerCmd withAliases(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withAttachStderr(java.lang.Boolean)", "public com.github.dockerjava.api.command.CreateContainerCmd withAttachStderr(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withAttachStdin(java.lang.Boolean)", "public com.github.dockerjava.api.command.CreateContainerCmd withAttachStdin(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withAttachStdout(java.lang.Boolean)", "public com.github.dockerjava.api.command.CreateContainerCmd withAttachStdout(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withBinds(com.github.dockerjava.api.model.Bind...)", "public com.github.dockerjava.api.command.CreateContainerCmd withBinds(com.github.dockerjava.api.model.Bind...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withBinds(java.util.List<com.github.dockerjava.api.model.Bind>)", "public com.github.dockerjava.api.command.CreateContainerCmd withBinds(java.util.List<com.github.dockerjava.api.model.Bind>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withBlkioWeight(java.lang.Integer)", "public com.github.dockerjava.api.command.CreateContainerCmd withBlkioWeight(java.lang.Integer)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCapAdd(com.github.dockerjava.api.model.Capability...)", "public com.github.dockerjava.api.command.CreateContainerCmd withCapAdd(com.github.dockerjava.api.model.Capability...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCapAdd(java.util.List<com.github.dockerjava.api.model.Capability>)", "public com.github.dockerjava.api.command.CreateContainerCmd withCapAdd(java.util.List<com.github.dockerjava.api.model.Capability>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCapDrop(com.github.dockerjava.api.model.Capability...)", "public com.github.dockerjava.api.command.CreateContainerCmd withCapDrop(com.github.dockerjava.api.model.Capability...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCapDrop(java.util.List<com.github.dockerjava.api.model.Capability>)", "public com.github.dockerjava.api.command.CreateContainerCmd withCapDrop(java.util.List<com.github.dockerjava.api.model.Capability>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCmd(java.lang.String...)", "public com.github.dockerjava.api.command.CreateContainerCmd withCmd(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCmd(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.command.CreateContainerCmd withCmd(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withContainerIDFile(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withContainerIDFile(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCpuPeriod(java.lang.Integer)", "public com.github.dockerjava.api.command.CreateContainerCmd withCpuPeriod(java.lang.Integer)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCpusetCpus(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withCpusetCpus(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCpusetMems(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withCpusetMems(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCpuShares(java.lang.Integer)", "public com.github.dockerjava.api.command.CreateContainerCmd withCpuShares(java.lang.Integer)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDevices(com.github.dockerjava.api.model.Device...)", "public com.github.dockerjava.api.command.CreateContainerCmd withDevices(com.github.dockerjava.api.model.Device...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDevices(java.util.List<com.github.dockerjava.api.model.Device>)", "public com.github.dockerjava.api.command.CreateContainerCmd withDevices(java.util.List<com.github.dockerjava.api.model.Device>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDns(java.lang.String...)", "public com.github.dockerjava.api.command.CreateContainerCmd withDns(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDns(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.command.CreateContainerCmd withDns(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDnsSearch(java.lang.String...)", "public com.github.dockerjava.api.command.CreateContainerCmd withDnsSearch(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDnsSearch(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.command.CreateContainerCmd withDnsSearch(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withDomainName(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withDomainName(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withEntrypoint(java.lang.String...)", "public com.github.dockerjava.api.command.CreateContainerCmd withEntrypoint(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withEntrypoint(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.command.CreateContainerCmd withEntrypoint(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withEnv(java.lang.String...)", "public com.github.dockerjava.api.command.CreateContainerCmd withEnv(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withEnv(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.command.CreateContainerCmd withEnv(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withExposedPorts(com.github.dockerjava.api.model.ExposedPort...)", "public com.github.dockerjava.api.command.CreateContainerCmd withExposedPorts(com.github.dockerjava.api.model.ExposedPort...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withStopSignal(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withStopSignal(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withExposedPorts(java.util.List<com.github.dockerjava.api.model.ExposedPort>)", "public com.github.dockerjava.api.command.CreateContainerCmd withExposedPorts(java.util.List<com.github.dockerjava.api.model.ExposedPort>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withExtraHosts(java.lang.String...)", "public com.github.dockerjava.api.command.CreateContainerCmd withExtraHosts(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withExtraHosts(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.command.CreateContainerCmd withExtraHosts(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withHostName(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withHostName(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withImage(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withImage(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withIpv4Address(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withIpv4Address(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withIpv6Address(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withIpv6Address(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withLabels(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.api.command.CreateContainerCmd withLabels(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withLinks(com.github.dockerjava.api.model.Link...)", "public com.github.dockerjava.api.command.CreateContainerCmd withLinks(com.github.dockerjava.api.model.Link...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withLinks(java.util.List<com.github.dockerjava.api.model.Link>)", "public com.github.dockerjava.api.command.CreateContainerCmd withLinks(java.util.List<com.github.dockerjava.api.model.Link>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withLxcConf(com.github.dockerjava.api.model.LxcConf...)", "public com.github.dockerjava.api.command.CreateContainerCmd withLxcConf(com.github.dockerjava.api.model.LxcConf...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withLxcConf(java.util.List<com.github.dockerjava.api.model.LxcConf>)", "public com.github.dockerjava.api.command.CreateContainerCmd withLxcConf(java.util.List<com.github.dockerjava.api.model.LxcConf>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withLogConfig(com.github.dockerjava.api.model.LogConfig)", "public com.github.dockerjava.api.command.CreateContainerCmd withLogConfig(com.github.dockerjava.api.model.LogConfig)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withMacAddress(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withMacAddress(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withMemory(java.lang.Long)", "public com.github.dockerjava.api.command.CreateContainerCmd withMemory(java.lang.Long)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withMemorySwap(java.lang.Long)", "public com.github.dockerjava.api.command.CreateContainerCmd withMemorySwap(java.lang.Long)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withName(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withName(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withNetworkDisabled(java.lang.Boolean)", "public com.github.dockerjava.api.command.CreateContainerCmd withNetworkDisabled(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withNetworkMode(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withNetworkMode(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withOomKillDisable(java.lang.Boolean)", "public com.github.dockerjava.api.command.CreateContainerCmd withOomKillDisable(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPortBindings(com.github.dockerjava.api.model.PortBinding...)", "public com.github.dockerjava.api.command.CreateContainerCmd withPortBindings(com.github.dockerjava.api.model.PortBinding...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPortBindings(java.util.List<com.github.dockerjava.api.model.PortBinding>)", "public com.github.dockerjava.api.command.CreateContainerCmd withPortBindings(java.util.List<com.github.dockerjava.api.model.PortBinding>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPortBindings(com.github.dockerjava.api.model.Ports)", "public com.github.dockerjava.api.command.CreateContainerCmd withPortBindings(com.github.dockerjava.api.model.Ports)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPortSpecs(java.lang.String...)", "public com.github.dockerjava.api.command.CreateContainerCmd withPortSpecs(java.lang.String...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPortSpecs(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.command.CreateContainerCmd withPortSpecs(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPrivileged(java.lang.Boolean)", "public com.github.dockerjava.api.command.CreateContainerCmd withPrivileged(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPublishAllPorts(java.lang.Boolean)", "public com.github.dockerjava.api.command.CreateContainerCmd withPublishAllPorts(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withReadonlyRootfs(java.lang.Boolean)", "public com.github.dockerjava.api.command.CreateContainerCmd withReadonlyRootfs(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withRestartPolicy(com.github.dockerjava.api.model.RestartPolicy)", "public com.github.dockerjava.api.command.CreateContainerCmd withRestartPolicy(com.github.dockerjava.api.model.RestartPolicy)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withStdInOnce(java.lang.Boolean)", "public com.github.dockerjava.api.command.CreateContainerCmd withStdInOnce(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withStdinOpen(java.lang.Boolean)", "public com.github.dockerjava.api.command.CreateContainerCmd withStdinOpen(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withTty(java.lang.Boolean)", "public com.github.dockerjava.api.command.CreateContainerCmd withTty(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withUlimits(com.github.dockerjava.api.model.Ulimit...)", "public com.github.dockerjava.api.command.CreateContainerCmd withUlimits(com.github.dockerjava.api.model.Ulimit...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withUlimits(java.util.List<com.github.dockerjava.api.model.Ulimit>)", "public com.github.dockerjava.api.command.CreateContainerCmd withUlimits(java.util.List<com.github.dockerjava.api.model.Ulimit>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withUser(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withUser(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withVolumes(com.github.dockerjava.api.model.Volume...)", "public com.github.dockerjava.api.command.CreateContainerCmd withVolumes(com.github.dockerjava.api.model.Volume...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withVolumes(java.util.List<com.github.dockerjava.api.model.Volume>)", "public com.github.dockerjava.api.command.CreateContainerCmd withVolumes(java.util.List<com.github.dockerjava.api.model.Volume>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withVolumesFrom(com.github.dockerjava.api.model.VolumesFrom...)", "public com.github.dockerjava.api.command.CreateContainerCmd withVolumesFrom(com.github.dockerjava.api.model.VolumesFrom...)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withVolumesFrom(java.util.List<com.github.dockerjava.api.model.VolumesFrom>)", "public com.github.dockerjava.api.command.CreateContainerCmd withVolumesFrom(java.util.List<com.github.dockerjava.api.model.VolumesFrom>)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withWorkingDir(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withWorkingDir(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withCgroupParent(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withCgroupParent(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withPidMode(java.lang.String)", "public com.github.dockerjava.api.command.CreateContainerCmd withPidMode(java.lang.String)"], ["com.github.dockerjava.api.command.CreateContainerCmd", "com.github.dockerjava.core.command.CreateContainerCmdImpl.withHostConfig(com.github.dockerjava.api.model.HostConfig)", "public com.github.dockerjava.api.command.CreateContainerCmd withHostConfig(com.github.dockerjava.api.model.HostConfig)"], ["java.lang.String", "com.github.dockerjava.core.command.CreateContainerCmdImpl.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.core.command.CreateContainerCmdImpl.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.command.CreateContainerCmdImpl.hashCode()", "public int hashCode()"], ["java.lang.Object", "com.github.dockerjava.core.command.CreateContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.RemoveVolumeCmdImpl", "com.github.dockerjava.core.command.RemoveVolumeCmdImpl(com.github.dockerjava.api.command.RemoveVolumeCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.RemoveVolumeCmdImpl(com.github.dockerjava.api.command.RemoveVolumeCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.RemoveVolumeCmdImpl.getName()", "public java.lang.String getName()"], ["com.github.dockerjava.api.command.RemoveVolumeCmd", "com.github.dockerjava.core.command.RemoveVolumeCmdImpl.withName(java.lang.String)", "public com.github.dockerjava.api.command.RemoveVolumeCmd withName(java.lang.String)"], ["java.lang.Void", "com.github.dockerjava.core.command.RemoveVolumeCmdImpl.exec()", "public java.lang.Void exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.RemoveVolumeCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.EventsResultCallback", "com.github.dockerjava.core.command.EventsResultCallback()", "public com.github.dockerjava.core.command.EventsResultCallback()"], ["void", "com.github.dockerjava.core.command.EventsResultCallback.onNext(com.github.dockerjava.api.model.Event)", "public void onNext(com.github.dockerjava.api.model.Event)"], ["void", "com.github.dockerjava.core.command.EventsResultCallback.onNext(java.lang.Object)", "public void onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.LoadImageCmdImpl", "com.github.dockerjava.core.command.LoadImageCmdImpl(com.github.dockerjava.api.command.LoadImageCmd$Exec, java.io.InputStream)", "public com.github.dockerjava.core.command.LoadImageCmdImpl(com.github.dockerjava.api.command.LoadImageCmd$Exec, java.io.InputStream)"], ["java.io.InputStream", "com.github.dockerjava.core.command.LoadImageCmdImpl.getImageStream()", "public java.io.InputStream getImageStream()"], ["com.github.dockerjava.core.command.LoadImageCmdImpl", "com.github.dockerjava.core.command.LoadImageCmdImpl.withImageStream(java.io.InputStream)", "public com.github.dockerjava.core.command.LoadImageCmdImpl withImageStream(java.io.InputStream)"], ["com.github.dockerjava.api.command.LoadImageCmd", "com.github.dockerjava.core.command.LoadImageCmdImpl.withImageStream(java.io.InputStream)", "public com.github.dockerjava.api.command.LoadImageCmd withImageStream(java.io.InputStream)"], ["com.github.dockerjava.core.command.RestartContainerCmdImpl", "com.github.dockerjava.core.command.RestartContainerCmdImpl(com.github.dockerjava.api.command.RestartContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.RestartContainerCmdImpl(com.github.dockerjava.api.command.RestartContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.RestartContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.Integer", "com.github.dockerjava.core.command.RestartContainerCmdImpl.getTimeout()", "public java.lang.Integer getTimeout()"], ["com.github.dockerjava.api.command.RestartContainerCmd", "com.github.dockerjava.core.command.RestartContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.RestartContainerCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.RestartContainerCmd", "com.github.dockerjava.core.command.RestartContainerCmdImpl.withtTimeout(java.lang.Integer)", "public com.github.dockerjava.api.command.RestartContainerCmd withtTimeout(java.lang.Integer)"], ["java.lang.Void", "com.github.dockerjava.core.command.RestartContainerCmdImpl.exec()", "public java.lang.Void exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.RestartContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.StatsCmdImpl", "com.github.dockerjava.core.command.StatsCmdImpl(com.github.dockerjava.api.command.StatsCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.StatsCmdImpl(com.github.dockerjava.api.command.StatsCmd$Exec, java.lang.String)"], ["com.github.dockerjava.api.command.StatsCmd", "com.github.dockerjava.core.command.StatsCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.StatsCmd withContainerId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.StatsCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["com.github.dockerjava.core.command.SaveImageCmdImpl", "com.github.dockerjava.core.command.SaveImageCmdImpl(com.github.dockerjava.api.command.SaveImageCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.SaveImageCmdImpl(com.github.dockerjava.api.command.SaveImageCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.SaveImageCmdImpl.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.github.dockerjava.core.command.SaveImageCmdImpl.getTag()", "public java.lang.String getTag()"], ["com.github.dockerjava.api.command.SaveImageCmd", "com.github.dockerjava.core.command.SaveImageCmdImpl.withName(java.lang.String)", "public com.github.dockerjava.api.command.SaveImageCmd withName(java.lang.String)"], ["com.github.dockerjava.api.command.SaveImageCmd", "com.github.dockerjava.core.command.SaveImageCmdImpl.withTag(java.lang.String)", "public com.github.dockerjava.api.command.SaveImageCmd withTag(java.lang.String)"], ["java.io.InputStream", "com.github.dockerjava.core.command.SaveImageCmdImpl.exec()", "public java.io.InputStream exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.SaveImageCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.UnpauseContainerCmdImpl", "com.github.dockerjava.core.command.UnpauseContainerCmdImpl(com.github.dockerjava.api.command.UnpauseContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.UnpauseContainerCmdImpl(com.github.dockerjava.api.command.UnpauseContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.UnpauseContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["com.github.dockerjava.api.command.UnpauseContainerCmd", "com.github.dockerjava.core.command.UnpauseContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.UnpauseContainerCmd withContainerId(java.lang.String)"], ["java.lang.Void", "com.github.dockerjava.core.command.UnpauseContainerCmdImpl.exec()", "public java.lang.Void exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.UnpauseContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.CreateVolumeCmdImpl", "com.github.dockerjava.core.command.CreateVolumeCmdImpl(com.github.dockerjava.api.command.CreateVolumeCmd$Exec)", "public com.github.dockerjava.core.command.CreateVolumeCmdImpl(com.github.dockerjava.api.command.CreateVolumeCmd$Exec)"], ["java.lang.String", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.getDriver()", "public java.lang.String getDriver()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.getDriverOpts()", "public java.util.Map<java.lang.String, java.lang.String> getDriverOpts()"], ["com.github.dockerjava.core.command.CreateVolumeCmdImpl", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.withName(java.lang.String)", "public com.github.dockerjava.core.command.CreateVolumeCmdImpl withName(java.lang.String)"], ["com.github.dockerjava.core.command.CreateVolumeCmdImpl", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.withDriver(java.lang.String)", "public com.github.dockerjava.core.command.CreateVolumeCmdImpl withDriver(java.lang.String)"], ["com.github.dockerjava.api.command.CreateVolumeCmd", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.withDriverOpts(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.api.command.CreateVolumeCmd withDriverOpts(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.command.CreateVolumeCmd", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.withDriver(java.lang.String)", "public com.github.dockerjava.api.command.CreateVolumeCmd withDriver(java.lang.String)"], ["com.github.dockerjava.api.command.CreateVolumeCmd", "com.github.dockerjava.core.command.CreateVolumeCmdImpl.withName(java.lang.String)", "public com.github.dockerjava.api.command.CreateVolumeCmd withName(java.lang.String)"], ["com.github.dockerjava.core.command.TopContainerCmdImpl", "com.github.dockerjava.core.command.TopContainerCmdImpl(com.github.dockerjava.api.command.TopContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.TopContainerCmdImpl(com.github.dockerjava.api.command.TopContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.TopContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.String", "com.github.dockerjava.core.command.TopContainerCmdImpl.getPsArgs()", "public java.lang.String getPsArgs()"], ["com.github.dockerjava.api.command.TopContainerCmd", "com.github.dockerjava.core.command.TopContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.TopContainerCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.TopContainerCmd", "com.github.dockerjava.core.command.TopContainerCmdImpl.withPsArgs(java.lang.String)", "public com.github.dockerjava.api.command.TopContainerCmd withPsArgs(java.lang.String)"], ["com.github.dockerjava.api.command.TopContainerResponse", "com.github.dockerjava.core.command.TopContainerCmdImpl.exec()", "public com.github.dockerjava.api.command.TopContainerResponse exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.TopContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.InspectVolumeCmdImpl", "com.github.dockerjava.core.command.InspectVolumeCmdImpl(com.github.dockerjava.api.command.InspectVolumeCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.InspectVolumeCmdImpl(com.github.dockerjava.api.command.InspectVolumeCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.InspectVolumeCmdImpl.getName()", "public java.lang.String getName()"], ["com.github.dockerjava.api.command.InspectVolumeCmd", "com.github.dockerjava.core.command.InspectVolumeCmdImpl.withName(java.lang.String)", "public com.github.dockerjava.api.command.InspectVolumeCmd withName(java.lang.String)"], ["com.github.dockerjava.api.command.InspectVolumeResponse", "com.github.dockerjava.core.command.InspectVolumeCmdImpl.exec()", "public com.github.dockerjava.api.command.InspectVolumeResponse exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.InspectVolumeCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.WaitContainerResultCallback", "com.github.dockerjava.core.command.WaitContainerResultCallback()", "public com.github.dockerjava.core.command.WaitContainerResultCallback()"], ["void", "com.github.dockerjava.core.command.WaitContainerResultCallback.onNext(com.github.dockerjava.api.model.WaitResponse)", "public void onNext(com.github.dockerjava.api.model.WaitResponse)"], ["java.lang.Integer", "com.github.dockerjava.core.command.WaitContainerResultCallback.awaitStatusCode()", "public java.lang.Integer awaitStatusCode()"], ["java.lang.Integer", "com.github.dockerjava.core.command.WaitContainerResultCallback.awaitStatusCode(long, java.util.concurrent.TimeUnit)", "public java.lang.Integer awaitStatusCode(long, java.util.concurrent.TimeUnit)"], ["void", "com.github.dockerjava.core.command.WaitContainerResultCallback.onNext(java.lang.Object)", "public void onNext(java.lang.Object)"], ["com.github.dockerjava.core.command.TagImageCmdImpl", "com.github.dockerjava.core.command.TagImageCmdImpl(com.github.dockerjava.api.command.TagImageCmd$Exec, java.lang.String, java.lang.String, java.lang.String)", "public com.github.dockerjava.core.command.TagImageCmdImpl(com.github.dockerjava.api.command.TagImageCmd$Exec, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.TagImageCmdImpl.getImageId()", "public java.lang.String getImageId()"], ["java.lang.String", "com.github.dockerjava.core.command.TagImageCmdImpl.getRepository()", "public java.lang.String getRepository()"], ["java.lang.String", "com.github.dockerjava.core.command.TagImageCmdImpl.getTag()", "public java.lang.String getTag()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.TagImageCmdImpl.hasForceEnabled()", "public java.lang.Boolean hasForceEnabled()"], ["com.github.dockerjava.api.command.TagImageCmd", "com.github.dockerjava.core.command.TagImageCmdImpl.withImageId(java.lang.String)", "public com.github.dockerjava.api.command.TagImageCmd withImageId(java.lang.String)"], ["com.github.dockerjava.api.command.TagImageCmd", "com.github.dockerjava.core.command.TagImageCmdImpl.withRepository(java.lang.String)", "public com.github.dockerjava.api.command.TagImageCmd withRepository(java.lang.String)"], ["com.github.dockerjava.api.command.TagImageCmd", "com.github.dockerjava.core.command.TagImageCmdImpl.withTag(java.lang.String)", "public com.github.dockerjava.api.command.TagImageCmd withTag(java.lang.String)"], ["com.github.dockerjava.api.command.TagImageCmd", "com.github.dockerjava.core.command.TagImageCmdImpl.withForce()", "public com.github.dockerjava.api.command.TagImageCmd withForce()"], ["com.github.dockerjava.api.command.TagImageCmd", "com.github.dockerjava.core.command.TagImageCmdImpl.withForce(java.lang.Boolean)", "public com.github.dockerjava.api.command.TagImageCmd withForce(java.lang.Boolean)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl(com.github.dockerjava.api.command.CommitCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.CommitCmdImpl(com.github.dockerjava.api.command.CommitCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.core.command.CommitCmdImpl withContainerId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getRepository()", "public java.lang.String getRepository()"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getTag()", "public java.lang.String getTag()"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getMessage()", "public java.lang.String getMessage()"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getAuthor()", "public java.lang.String getAuthor()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CommitCmdImpl.hasPauseEnabled()", "public java.lang.Boolean hasPauseEnabled()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withAttachStderr(java.lang.Boolean)", "public com.github.dockerjava.core.command.CommitCmdImpl withAttachStderr(java.lang.Boolean)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withAttachStdin(java.lang.Boolean)", "public com.github.dockerjava.core.command.CommitCmdImpl withAttachStdin(java.lang.Boolean)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withAttachStdout(java.lang.Boolean)", "public com.github.dockerjava.core.command.CommitCmdImpl withAttachStdout(java.lang.Boolean)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withCmd(java.lang.String...)", "public com.github.dockerjava.core.command.CommitCmdImpl withCmd(java.lang.String...)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withDisableNetwork(java.lang.Boolean)", "public com.github.dockerjava.core.command.CommitCmdImpl withDisableNetwork(java.lang.Boolean)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withAuthor(java.lang.String)", "public com.github.dockerjava.core.command.CommitCmdImpl withAuthor(java.lang.String)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withMessage(java.lang.String)", "public com.github.dockerjava.core.command.CommitCmdImpl withMessage(java.lang.String)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withTag(java.lang.String)", "public com.github.dockerjava.core.command.CommitCmdImpl withTag(java.lang.String)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withRepository(java.lang.String)", "public com.github.dockerjava.core.command.CommitCmdImpl withRepository(java.lang.String)"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withPause(java.lang.Boolean)", "public com.github.dockerjava.core.command.CommitCmdImpl withPause(java.lang.Boolean)"], ["java.lang.String[]", "com.github.dockerjava.core.command.CommitCmdImpl.getEnv()", "public java.lang.String[] getEnv()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withEnv(java.lang.String...)", "public com.github.dockerjava.core.command.CommitCmdImpl withEnv(java.lang.String...)"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.core.command.CommitCmdImpl.getLabels()", "public java.util.Map<java.lang.String, java.lang.String> getLabels()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withLabels(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.core.command.CommitCmdImpl withLabels(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.model.ExposedPorts", "com.github.dockerjava.core.command.CommitCmdImpl.getExposedPorts()", "public com.github.dockerjava.api.model.ExposedPorts getExposedPorts()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withExposedPorts(com.github.dockerjava.api.model.ExposedPorts)", "public com.github.dockerjava.core.command.CommitCmdImpl withExposedPorts(com.github.dockerjava.api.model.ExposedPorts)"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getHostname()", "public java.lang.String getHostname()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withHostname(java.lang.String)", "public com.github.dockerjava.core.command.CommitCmdImpl withHostname(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.core.command.CommitCmdImpl.getMemory()", "public java.lang.Integer getMemory()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withMemory(java.lang.Integer)", "public com.github.dockerjava.core.command.CommitCmdImpl withMemory(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.core.command.CommitCmdImpl.getMemorySwap()", "public java.lang.Integer getMemorySwap()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withMemorySwap(java.lang.Integer)", "public com.github.dockerjava.core.command.CommitCmdImpl withMemorySwap(java.lang.Integer)"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CommitCmdImpl.isOpenStdin()", "public java.lang.Boolean isOpenStdin()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withOpenStdin(java.lang.Boolean)", "public com.github.dockerjava.core.command.CommitCmdImpl withOpenStdin(java.lang.Boolean)"], ["java.lang.String[]", "com.github.dockerjava.core.command.CommitCmdImpl.getPortSpecs()", "public java.lang.String[] getPortSpecs()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withPortSpecs(java.lang.String...)", "public com.github.dockerjava.core.command.CommitCmdImpl withPortSpecs(java.lang.String...)"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CommitCmdImpl.isStdinOnce()", "public java.lang.Boolean isStdinOnce()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withStdinOnce(java.lang.Boolean)", "public com.github.dockerjava.core.command.CommitCmdImpl withStdinOnce(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.core.command.CommitCmdImpl.isTty()", "public java.lang.Boolean isTty()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withTty(java.lang.Boolean)", "public com.github.dockerjava.core.command.CommitCmdImpl withTty(java.lang.Boolean)"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getUser()", "public java.lang.String getUser()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withUser(java.lang.String)", "public com.github.dockerjava.core.command.CommitCmdImpl withUser(java.lang.String)"], ["com.github.dockerjava.api.model.Volumes", "com.github.dockerjava.core.command.CommitCmdImpl.getVolumes()", "public com.github.dockerjava.api.model.Volumes getVolumes()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withVolumes(com.github.dockerjava.api.model.Volumes)", "public com.github.dockerjava.core.command.CommitCmdImpl withVolumes(com.github.dockerjava.api.model.Volumes)"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.getWorkingDir()", "public java.lang.String getWorkingDir()"], ["com.github.dockerjava.core.command.CommitCmdImpl", "com.github.dockerjava.core.command.CommitCmdImpl.withWorkingDir(java.lang.String)", "public com.github.dockerjava.core.command.CommitCmdImpl withWorkingDir(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CommitCmdImpl.exec()", "public java.lang.String exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.CommitCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withWorkingDir(java.lang.String)", "public com.github.dockerjava.api.command.CommitCmd withWorkingDir(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withVolumes(com.github.dockerjava.api.model.Volumes)", "public com.github.dockerjava.api.command.CommitCmd withVolumes(com.github.dockerjava.api.model.Volumes)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withUser(java.lang.String)", "public com.github.dockerjava.api.command.CommitCmd withUser(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withTty(java.lang.Boolean)", "public com.github.dockerjava.api.command.CommitCmd withTty(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withTag(java.lang.String)", "public com.github.dockerjava.api.command.CommitCmd withTag(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withStdinOnce(java.lang.Boolean)", "public com.github.dockerjava.api.command.CommitCmd withStdinOnce(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withRepository(java.lang.String)", "public com.github.dockerjava.api.command.CommitCmd withRepository(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withPortSpecs(java.lang.String[])", "public com.github.dockerjava.api.command.CommitCmd withPortSpecs(java.lang.String[])"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withPause(java.lang.Boolean)", "public com.github.dockerjava.api.command.CommitCmd withPause(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withOpenStdin(java.lang.Boolean)", "public com.github.dockerjava.api.command.CommitCmd withOpenStdin(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withMessage(java.lang.String)", "public com.github.dockerjava.api.command.CommitCmd withMessage(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withMemorySwap(java.lang.Integer)", "public com.github.dockerjava.api.command.CommitCmd withMemorySwap(java.lang.Integer)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withMemory(java.lang.Integer)", "public com.github.dockerjava.api.command.CommitCmd withMemory(java.lang.Integer)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withLabels(java.util.Map)", "public com.github.dockerjava.api.command.CommitCmd withLabels(java.util.Map)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withHostname(java.lang.String)", "public com.github.dockerjava.api.command.CommitCmd withHostname(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withExposedPorts(com.github.dockerjava.api.model.ExposedPorts)", "public com.github.dockerjava.api.command.CommitCmd withExposedPorts(com.github.dockerjava.api.model.ExposedPorts)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withEnv(java.lang.String[])", "public com.github.dockerjava.api.command.CommitCmd withEnv(java.lang.String[])"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withDisableNetwork(java.lang.Boolean)", "public com.github.dockerjava.api.command.CommitCmd withDisableNetwork(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.CommitCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withCmd(java.lang.String[])", "public com.github.dockerjava.api.command.CommitCmd withCmd(java.lang.String[])"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withAuthor(java.lang.String)", "public com.github.dockerjava.api.command.CommitCmd withAuthor(java.lang.String)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withAttachStdout(java.lang.Boolean)", "public com.github.dockerjava.api.command.CommitCmd withAttachStdout(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withAttachStdin(java.lang.Boolean)", "public com.github.dockerjava.api.command.CommitCmd withAttachStdin(java.lang.Boolean)"], ["com.github.dockerjava.api.command.CommitCmd", "com.github.dockerjava.core.command.CommitCmdImpl.withAttachStderr(java.lang.Boolean)", "public com.github.dockerjava.api.command.CommitCmd withAttachStderr(java.lang.Boolean)"], ["com.github.dockerjava.core.command.RenameContainerCmdImpl", "com.github.dockerjava.core.command.RenameContainerCmdImpl(com.github.dockerjava.api.command.RenameContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.RenameContainerCmdImpl(com.github.dockerjava.api.command.RenameContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.RenameContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.String", "com.github.dockerjava.core.command.RenameContainerCmdImpl.getName()", "public java.lang.String getName()"], ["com.github.dockerjava.api.command.RenameContainerCmd", "com.github.dockerjava.core.command.RenameContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.RenameContainerCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.RenameContainerCmd", "com.github.dockerjava.core.command.RenameContainerCmdImpl.withName(java.lang.String)", "public com.github.dockerjava.api.command.RenameContainerCmd withName(java.lang.String)"], ["java.lang.Void", "com.github.dockerjava.core.command.RenameContainerCmdImpl.exec()", "public java.lang.Void exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.RenameContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.InspectImageCmdImpl", "com.github.dockerjava.core.command.InspectImageCmdImpl(com.github.dockerjava.api.command.InspectImageCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.InspectImageCmdImpl(com.github.dockerjava.api.command.InspectImageCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.InspectImageCmdImpl.getImageId()", "public java.lang.String getImageId()"], ["com.github.dockerjava.api.command.InspectImageCmd", "com.github.dockerjava.core.command.InspectImageCmdImpl.withImageId(java.lang.String)", "public com.github.dockerjava.api.command.InspectImageCmd withImageId(java.lang.String)"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.core.command.InspectImageCmdImpl.exec()", "public com.github.dockerjava.api.command.InspectImageResponse exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.InspectImageCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.LogContainerCmdImpl", "com.github.dockerjava.core.command.LogContainerCmdImpl(com.github.dockerjava.api.command.LogContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.LogContainerCmdImpl(com.github.dockerjava.api.command.LogContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.LogContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.Integer", "com.github.dockerjava.core.command.LogContainerCmdImpl.getTail()", "public java.lang.Integer getTail()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.LogContainerCmdImpl.hasFollowStreamEnabled()", "public java.lang.Boolean hasFollowStreamEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.LogContainerCmdImpl.hasTimestampsEnabled()", "public java.lang.Boolean hasTimestampsEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.LogContainerCmdImpl.hasStdoutEnabled()", "public java.lang.Boolean hasStdoutEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.LogContainerCmdImpl.hasStderrEnabled()", "public java.lang.Boolean hasStderrEnabled()"], ["java.lang.Integer", "com.github.dockerjava.core.command.LogContainerCmdImpl.getSince()", "public java.lang.Integer getSince()"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.LogContainerCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withFollowStream(java.lang.Boolean)", "public com.github.dockerjava.api.command.LogContainerCmd withFollowStream(java.lang.Boolean)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withTimestamps(java.lang.Boolean)", "public com.github.dockerjava.api.command.LogContainerCmd withTimestamps(java.lang.Boolean)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withStdOut(java.lang.Boolean)", "public com.github.dockerjava.api.command.LogContainerCmd withStdOut(java.lang.Boolean)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withStdErr(java.lang.Boolean)", "public com.github.dockerjava.api.command.LogContainerCmd withStdErr(java.lang.Boolean)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withTailAll()", "public com.github.dockerjava.api.command.LogContainerCmd withTailAll()"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withTail(java.lang.Integer)", "public com.github.dockerjava.api.command.LogContainerCmd withTail(java.lang.Integer)"], ["com.github.dockerjava.api.command.LogContainerCmd", "com.github.dockerjava.core.command.LogContainerCmdImpl.withSince(java.lang.Integer)", "public com.github.dockerjava.api.command.LogContainerCmd withSince(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.core.command.LogContainerCmdImpl.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.core.command.ListContainersCmdImpl", "com.github.dockerjava.core.command.ListContainersCmdImpl(com.github.dockerjava.api.command.ListContainersCmd$Exec)", "public com.github.dockerjava.core.command.ListContainersCmdImpl(com.github.dockerjava.api.command.ListContainersCmd$Exec)"], ["java.lang.Integer", "com.github.dockerjava.core.command.ListContainersCmdImpl.getLimit()", "public java.lang.Integer getLimit()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ListContainersCmdImpl.hasShowSizeEnabled()", "public java.lang.Boolean hasShowSizeEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ListContainersCmdImpl.hasShowAllEnabled()", "public java.lang.Boolean hasShowAllEnabled()"], ["java.lang.String", "com.github.dockerjava.core.command.ListContainersCmdImpl.getSinceId()", "public java.lang.String getSinceId()"], ["java.lang.String", "com.github.dockerjava.core.command.ListContainersCmdImpl.getBeforeId()", "public java.lang.String getBeforeId()"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.core.command.ListContainersCmdImpl.getFilters()", "public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getFilters()"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withShowAll(java.lang.Boolean)", "public com.github.dockerjava.api.command.ListContainersCmd withShowAll(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withShowSize(java.lang.Boolean)", "public com.github.dockerjava.api.command.ListContainersCmd withShowSize(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withLimit(java.lang.Integer)", "public com.github.dockerjava.api.command.ListContainersCmd withLimit(java.lang.Integer)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withSince(java.lang.String)", "public com.github.dockerjava.api.command.ListContainersCmd withSince(java.lang.String)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withBefore(java.lang.String)", "public com.github.dockerjava.api.command.ListContainersCmd withBefore(java.lang.String)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withLabelFilter(java.lang.String...)", "public com.github.dockerjava.api.command.ListContainersCmd withLabelFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withLabelFilter(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.api.command.ListContainersCmd withLabelFilter(java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withExitcodeFilter(java.lang.Integer)", "public com.github.dockerjava.api.command.ListContainersCmd withExitcodeFilter(java.lang.Integer)"], ["com.github.dockerjava.api.command.ListContainersCmd", "com.github.dockerjava.core.command.ListContainersCmdImpl.withStatusFilter(java.lang.String)", "public com.github.dockerjava.api.command.ListContainersCmd withStatusFilter(java.lang.String)"], ["com.github.dockerjava.core.command.RemoveNetworkCmdImpl", "com.github.dockerjava.core.command.RemoveNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.RemoveNetworkCmd, java.lang.Void>, java.lang.String)", "public com.github.dockerjava.core.command.RemoveNetworkCmdImpl(com.github.dockerjava.api.command.DockerCmdSyncExec<com.github.dockerjava.api.command.RemoveNetworkCmd, java.lang.Void>, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.RemoveNetworkCmdImpl.getNetworkId()", "public java.lang.String getNetworkId()"], ["com.github.dockerjava.api.command.RemoveNetworkCmd", "com.github.dockerjava.core.command.RemoveNetworkCmdImpl.withNetworkId(java.lang.String)", "public com.github.dockerjava.api.command.RemoveNetworkCmd withNetworkId(java.lang.String)"], ["java.lang.Void", "com.github.dockerjava.core.command.RemoveNetworkCmdImpl.exec()", "public java.lang.Void exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["com.github.dockerjava.core.command.KillContainerCmdImpl", "com.github.dockerjava.core.command.KillContainerCmdImpl(com.github.dockerjava.api.command.KillContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.KillContainerCmdImpl(com.github.dockerjava.api.command.KillContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.KillContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.String", "com.github.dockerjava.core.command.KillContainerCmdImpl.getSignal()", "public java.lang.String getSignal()"], ["com.github.dockerjava.api.command.KillContainerCmd", "com.github.dockerjava.core.command.KillContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.KillContainerCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.KillContainerCmd", "com.github.dockerjava.core.command.KillContainerCmdImpl.withSignal(java.lang.String)", "public com.github.dockerjava.api.command.KillContainerCmd withSignal(java.lang.String)"], ["java.lang.Void", "com.github.dockerjava.core.command.KillContainerCmdImpl.exec()", "public java.lang.Void exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.KillContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.AttachContainerResultCallback", "com.github.dockerjava.core.command.AttachContainerResultCallback()", "public com.github.dockerjava.core.command.AttachContainerResultCallback()"], ["void", "com.github.dockerjava.core.command.AttachContainerResultCallback.onNext(com.github.dockerjava.api.model.Frame)", "public void onNext(com.github.dockerjava.api.model.Frame)"], ["void", "com.github.dockerjava.core.command.AttachContainerResultCallback.onNext(java.lang.Object)", "public void onNext(java.lang.Object)"], ["com.github.dockerjava.core.NameParser$ReposTag", "com.github.dockerjava.core.NameParser.parseRepositoryTag(java.lang.String)", "public static com.github.dockerjava.core.NameParser$ReposTag parseRepositoryTag(java.lang.String)"], ["void", "com.github.dockerjava.core.NameParser.validateRepoName(java.lang.String)", "public static void validateRepoName(java.lang.String)"], ["com.github.dockerjava.core.NameParser$HostnameReposName", "com.github.dockerjava.core.NameParser.resolveRepositoryName(java.lang.String)", "public static com.github.dockerjava.core.NameParser$HostnameReposName resolveRepositoryName(java.lang.String)"], ["com.github.dockerjava.jaxrs.ListImagesCmdExec", "com.github.dockerjava.jaxrs.ListImagesCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.ListImagesCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.command.GraphData", "com.github.dockerjava.api.command.GraphData()", "public com.github.dockerjava.api.command.GraphData()"], ["java.lang.String", "com.github.dockerjava.api.command.GraphData.getRootDir()", "public java.lang.String getRootDir()"], ["com.github.dockerjava.api.command.GraphData", "com.github.dockerjava.api.command.GraphData.withRootDir(java.lang.String)", "public com.github.dockerjava.api.command.GraphData withRootDir(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.GraphData.getDeviceId()", "public java.lang.String getDeviceId()"], ["com.github.dockerjava.api.command.GraphData", "com.github.dockerjava.api.command.GraphData.withDeviceId(java.lang.String)", "public com.github.dockerjava.api.command.GraphData withDeviceId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.GraphData.getDeviceName()", "public java.lang.String getDeviceName()"], ["com.github.dockerjava.api.command.GraphData", "com.github.dockerjava.api.command.GraphData.withDeviceName(java.lang.String)", "public com.github.dockerjava.api.command.GraphData withDeviceName(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.GraphData.getDeviceSize()", "public java.lang.String getDeviceSize()"], ["com.github.dockerjava.api.command.GraphData", "com.github.dockerjava.api.command.GraphData.withDeviceSize(java.lang.String)", "public com.github.dockerjava.api.command.GraphData withDeviceSize(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.GraphData.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.command.GraphData.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.command.GraphData.hashCode()", "public int hashCode()"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$6.run()", "public void run() throws java.net.SocketException"], ["com.github.dockerjava.jaxrs.ListContainersCmdExec", "com.github.dockerjava.jaxrs.ListContainersCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.ListContainersCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.command.CreateContainerResponse", "com.github.dockerjava.api.command.CreateContainerResponse()", "public com.github.dockerjava.api.command.CreateContainerResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.CreateContainerResponse.getId()", "public java.lang.String getId()"], ["java.lang.String[]", "com.github.dockerjava.api.command.CreateContainerResponse.getWarnings()", "public java.lang.String[] getWarnings()"], ["void", "com.github.dockerjava.api.command.CreateContainerResponse.setId(java.lang.String)", "public void setId(java.lang.String)"], ["void", "com.github.dockerjava.api.command.CreateContainerResponse.setWarnings(java.lang.String[])", "public void setWarnings(java.lang.String[])"], ["java.lang.String", "com.github.dockerjava.api.command.CreateContainerResponse.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse()", "public com.github.dockerjava.api.command.InspectImageResponse()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getArch()", "public java.lang.String getArch()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withArch(java.lang.String)", "public com.github.dockerjava.api.command.InspectImageResponse withArch(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getAuthor()", "public java.lang.String getAuthor()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withAuthor(java.lang.String)", "public com.github.dockerjava.api.command.InspectImageResponse withAuthor(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getComment()", "public java.lang.String getComment()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withComment(java.lang.String)", "public com.github.dockerjava.api.command.InspectImageResponse withComment(java.lang.String)"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.command.InspectImageResponse.getConfig()", "public com.github.dockerjava.api.model.ContainerConfig getConfig()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withConfig(com.github.dockerjava.api.model.ContainerConfig)", "public com.github.dockerjava.api.command.InspectImageResponse withConfig(com.github.dockerjava.api.model.ContainerConfig)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getContainer()", "public java.lang.String getContainer()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withContainer(java.lang.String)", "public com.github.dockerjava.api.command.InspectImageResponse withContainer(java.lang.String)"], ["com.github.dockerjava.api.model.ContainerConfig", "com.github.dockerjava.api.command.InspectImageResponse.getContainerConfig()", "public com.github.dockerjava.api.model.ContainerConfig getContainerConfig()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withContainerConfig(com.github.dockerjava.api.model.ContainerConfig)", "public com.github.dockerjava.api.command.InspectImageResponse withContainerConfig(com.github.dockerjava.api.model.ContainerConfig)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getCreated()", "public java.lang.String getCreated()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withCreated(java.lang.String)", "public com.github.dockerjava.api.command.InspectImageResponse withCreated(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getDockerVersion()", "public java.lang.String getDockerVersion()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withDockerVersion(java.lang.String)", "public com.github.dockerjava.api.command.InspectImageResponse withDockerVersion(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getId()", "public java.lang.String getId()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withId(java.lang.String)", "public com.github.dockerjava.api.command.InspectImageResponse withId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getOs()", "public java.lang.String getOs()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withOs(java.lang.String)", "public com.github.dockerjava.api.command.InspectImageResponse withOs(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.getParent()", "public java.lang.String getParent()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withParent(java.lang.String)", "public com.github.dockerjava.api.command.InspectImageResponse withParent(java.lang.String)"], ["java.util.List<java.lang.String>", "com.github.dockerjava.api.command.InspectImageResponse.getRepoTags()", "public java.util.List<java.lang.String> getRepoTags()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withRepoTags(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.command.InspectImageResponse withRepoTags(java.util.List<java.lang.String>)"], ["java.lang.Long", "com.github.dockerjava.api.command.InspectImageResponse.getSize()", "public java.lang.Long getSize()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withSize(java.lang.Long)", "public com.github.dockerjava.api.command.InspectImageResponse withSize(java.lang.Long)"], ["java.util.List<java.lang.String>", "com.github.dockerjava.api.command.InspectImageResponse.getRepoDigests()", "public java.util.List<java.lang.String> getRepoDigests()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withRepoDigests(java.util.List<java.lang.String>)", "public com.github.dockerjava.api.command.InspectImageResponse withRepoDigests(java.util.List<java.lang.String>)"], ["com.github.dockerjava.api.command.GraphDriver", "com.github.dockerjava.api.command.InspectImageResponse.getGraphDriver()", "public com.github.dockerjava.api.command.GraphDriver getGraphDriver()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withGraphDriver(com.github.dockerjava.api.command.GraphDriver)", "public com.github.dockerjava.api.command.InspectImageResponse withGraphDriver(com.github.dockerjava.api.command.GraphDriver)"], ["java.lang.Long", "com.github.dockerjava.api.command.InspectImageResponse.getVirtualSize()", "public java.lang.Long getVirtualSize()"], ["com.github.dockerjava.api.command.InspectImageResponse", "com.github.dockerjava.api.command.InspectImageResponse.withVirtualSize(java.lang.Long)", "public com.github.dockerjava.api.command.InspectImageResponse withVirtualSize(java.lang.Long)"], ["java.lang.String", "com.github.dockerjava.api.command.InspectImageResponse.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.command.InspectImageResponse.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.command.InspectImageResponse.hashCode()", "public int hashCode()"], ["void", "com.github.dockerjava.netty.InvocationBuilder$6.run()", "public void run()"], ["void", "com.github.dockerjava.netty.handler.HttpResponseHandler$1.close()", "public void close()"], ["com.github.dockerjava.netty.handler.JsonResponseCallbackHandler", "com.github.dockerjava.netty.handler.JsonResponseCallbackHandler(com.fasterxml.jackson.core.type.TypeReference<T>, com.github.dockerjava.api.async.ResultCallback<T>)", "public com.github.dockerjava.netty.handler.JsonResponseCallbackHandler(com.fasterxml.jackson.core.type.TypeReference<T>, com.github.dockerjava.api.async.ResultCallback<T>)"], ["void", "com.github.dockerjava.netty.handler.JsonResponseCallbackHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable)", "public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception"], ["com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream()", "public com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream()"], ["void", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream.write(io.netty.buffer.ByteBuf)", "public void write(io.netty.buffer.ByteBuf) throws java.lang.InterruptedException"], ["void", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream.writeComplete()", "public void writeComplete()"], ["void", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream.close()", "public void close() throws java.io.IOException"], ["int", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream.available()", "public int available() throws java.io.IOException"], ["int", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream.read()", "public int read() throws java.io.IOException"], ["int", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler$HttpResponseInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["com.github.dockerjava.netty.handler.HttpResponseStreamHandler", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler(com.github.dockerjava.api.async.ResultCallback<java.io.InputStream>)", "public com.github.dockerjava.netty.handler.HttpResponseStreamHandler(com.github.dockerjava.api.async.ResultCallback<java.io.InputStream>)"], ["void", "com.github.dockerjava.netty.handler.HttpResponseStreamHandler.channelInactive(io.netty.channel.ChannelHandlerContext)", "public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception"], ["com.github.dockerjava.netty.handler.HttpConnectionHijackHandler", "com.github.dockerjava.netty.handler.HttpConnectionHijackHandler(com.github.dockerjava.netty.handler.HttpResponseHandler)", "public com.github.dockerjava.netty.handler.HttpConnectionHijackHandler(com.github.dockerjava.netty.handler.HttpResponseHandler)"], ["void", "com.github.dockerjava.netty.handler.HttpConnectionHijackHandler.upgradeTo(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.FullHttpResponse)", "public void upgradeTo(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.FullHttpResponse) throws java.lang.Exception"], ["java.util.Collection<java.lang.CharSequence>", "com.github.dockerjava.netty.handler.HttpConnectionHijackHandler.setUpgradeHeaders(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpRequest)", "public java.util.Collection<java.lang.CharSequence> setUpgradeHeaders(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpRequest)"], ["java.lang.CharSequence", "com.github.dockerjava.netty.handler.HttpConnectionHijackHandler.protocol()", "public java.lang.CharSequence protocol()"], ["void", "com.github.dockerjava.netty.handler.HttpConnectionHijackHandler.awaitUpgrade()", "public void awaitUpgrade()"], ["com.github.dockerjava.netty.NettyDockerCmdExecFactory", "com.github.dockerjava.netty.NettyDockerCmdExecFactory()", "public com.github.dockerjava.netty.NettyDockerCmdExecFactory()"], ["void", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.init(com.github.dockerjava.core.DockerClientConfig)", "public void init(com.github.dockerjava.core.DockerClientConfig)"], ["javax.net.ssl.SSLParameters", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.enableHostNameVerification(javax.net.ssl.SSLParameters)", "public javax.net.ssl.SSLParameters enableHostNameVerification(javax.net.ssl.SSLParameters)"], ["com.github.dockerjava.api.command.CopyArchiveFromContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCopyArchiveFromContainerCmdExec()", "public com.github.dockerjava.api.command.CopyArchiveFromContainerCmd$Exec createCopyArchiveFromContainerCmdExec()"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCopyArchiveToContainerCmdExec()", "public com.github.dockerjava.api.command.CopyArchiveToContainerCmd$Exec createCopyArchiveToContainerCmdExec()"], ["com.github.dockerjava.api.command.AuthCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createAuthCmdExec()", "public com.github.dockerjava.api.command.AuthCmd$Exec createAuthCmdExec()"], ["com.github.dockerjava.api.command.InfoCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createInfoCmdExec()", "public com.github.dockerjava.api.command.InfoCmd$Exec createInfoCmdExec()"], ["com.github.dockerjava.api.command.PingCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createPingCmdExec()", "public com.github.dockerjava.api.command.PingCmd$Exec createPingCmdExec()"], ["com.github.dockerjava.api.command.VersionCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createVersionCmdExec()", "public com.github.dockerjava.api.command.VersionCmd$Exec createVersionCmdExec()"], ["com.github.dockerjava.api.command.PullImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createPullImageCmdExec()", "public com.github.dockerjava.api.command.PullImageCmd$Exec createPullImageCmdExec()"], ["com.github.dockerjava.api.command.PushImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createPushImageCmdExec()", "public com.github.dockerjava.api.command.PushImageCmd$Exec createPushImageCmdExec()"], ["com.github.dockerjava.api.command.SaveImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createSaveImageCmdExec()", "public com.github.dockerjava.api.command.SaveImageCmd$Exec createSaveImageCmdExec()"], ["com.github.dockerjava.api.command.CreateImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCreateImageCmdExec()", "public com.github.dockerjava.api.command.CreateImageCmd$Exec createCreateImageCmdExec()"], ["com.github.dockerjava.api.command.LoadImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createLoadImageCmdExec()", "public com.github.dockerjava.api.command.LoadImageCmd$Exec createLoadImageCmdExec()"], ["com.github.dockerjava.api.command.SearchImagesCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createSearchImagesCmdExec()", "public com.github.dockerjava.api.command.SearchImagesCmd$Exec createSearchImagesCmdExec()"], ["com.github.dockerjava.api.command.RemoveImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createRemoveImageCmdExec()", "public com.github.dockerjava.api.command.RemoveImageCmd$Exec createRemoveImageCmdExec()"], ["com.github.dockerjava.api.command.ListImagesCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createListImagesCmdExec()", "public com.github.dockerjava.api.command.ListImagesCmd$Exec createListImagesCmdExec()"], ["com.github.dockerjava.api.command.InspectImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createInspectImageCmdExec()", "public com.github.dockerjava.api.command.InspectImageCmd$Exec createInspectImageCmdExec()"], ["com.github.dockerjava.api.command.ListContainersCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createListContainersCmdExec()", "public com.github.dockerjava.api.command.ListContainersCmd$Exec createListContainersCmdExec()"], ["com.github.dockerjava.api.command.CreateContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCreateContainerCmdExec()", "public com.github.dockerjava.api.command.CreateContainerCmd$Exec createCreateContainerCmdExec()"], ["com.github.dockerjava.api.command.StartContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createStartContainerCmdExec()", "public com.github.dockerjava.api.command.StartContainerCmd$Exec createStartContainerCmdExec()"], ["com.github.dockerjava.api.command.InspectContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createInspectContainerCmdExec()", "public com.github.dockerjava.api.command.InspectContainerCmd$Exec createInspectContainerCmdExec()"], ["com.github.dockerjava.api.command.ExecCreateCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createExecCmdExec()", "public com.github.dockerjava.api.command.ExecCreateCmd$Exec createExecCmdExec()"], ["com.github.dockerjava.api.command.RemoveContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createRemoveContainerCmdExec()", "public com.github.dockerjava.api.command.RemoveContainerCmd$Exec createRemoveContainerCmdExec()"], ["com.github.dockerjava.api.command.WaitContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createWaitContainerCmdExec()", "public com.github.dockerjava.api.command.WaitContainerCmd$Exec createWaitContainerCmdExec()"], ["com.github.dockerjava.api.command.AttachContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createAttachContainerCmdExec()", "public com.github.dockerjava.api.command.AttachContainerCmd$Exec createAttachContainerCmdExec()"], ["com.github.dockerjava.api.command.ExecStartCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createExecStartCmdExec()", "public com.github.dockerjava.api.command.ExecStartCmd$Exec createExecStartCmdExec()"], ["com.github.dockerjava.api.command.InspectExecCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createInspectExecCmdExec()", "public com.github.dockerjava.api.command.InspectExecCmd$Exec createInspectExecCmdExec()"], ["com.github.dockerjava.api.command.LogContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createLogContainerCmdExec()", "public com.github.dockerjava.api.command.LogContainerCmd$Exec createLogContainerCmdExec()"], ["com.github.dockerjava.api.command.CopyFileFromContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCopyFileFromContainerCmdExec()", "public com.github.dockerjava.api.command.CopyFileFromContainerCmd$Exec createCopyFileFromContainerCmdExec()"], ["com.github.dockerjava.api.command.StopContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createStopContainerCmdExec()", "public com.github.dockerjava.api.command.StopContainerCmd$Exec createStopContainerCmdExec()"], ["com.github.dockerjava.api.command.ContainerDiffCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createContainerDiffCmdExec()", "public com.github.dockerjava.api.command.ContainerDiffCmd$Exec createContainerDiffCmdExec()"], ["com.github.dockerjava.api.command.KillContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createKillContainerCmdExec()", "public com.github.dockerjava.api.command.KillContainerCmd$Exec createKillContainerCmdExec()"], ["com.github.dockerjava.api.command.UpdateContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createUpdateContainerCmdExec()", "public com.github.dockerjava.api.command.UpdateContainerCmd$Exec createUpdateContainerCmdExec()"], ["com.github.dockerjava.api.command.RenameContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createRenameContainerCmdExec()", "public com.github.dockerjava.api.command.RenameContainerCmd$Exec createRenameContainerCmdExec()"], ["com.github.dockerjava.api.command.RestartContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createRestartContainerCmdExec()", "public com.github.dockerjava.api.command.RestartContainerCmd$Exec createRestartContainerCmdExec()"], ["com.github.dockerjava.api.command.CommitCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCommitCmdExec()", "public com.github.dockerjava.api.command.CommitCmd$Exec createCommitCmdExec()"], ["com.github.dockerjava.api.command.BuildImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createBuildImageCmdExec()", "public com.github.dockerjava.api.command.BuildImageCmd$Exec createBuildImageCmdExec()"], ["com.github.dockerjava.api.command.TopContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createTopContainerCmdExec()", "public com.github.dockerjava.api.command.TopContainerCmd$Exec createTopContainerCmdExec()"], ["com.github.dockerjava.api.command.TagImageCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createTagImageCmdExec()", "public com.github.dockerjava.api.command.TagImageCmd$Exec createTagImageCmdExec()"], ["com.github.dockerjava.api.command.PauseContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createPauseContainerCmdExec()", "public com.github.dockerjava.api.command.PauseContainerCmd$Exec createPauseContainerCmdExec()"], ["com.github.dockerjava.api.command.UnpauseContainerCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createUnpauseContainerCmdExec()", "public com.github.dockerjava.api.command.UnpauseContainerCmd$Exec createUnpauseContainerCmdExec()"], ["com.github.dockerjava.api.command.EventsCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createEventsCmdExec()", "public com.github.dockerjava.api.command.EventsCmd$Exec createEventsCmdExec()"], ["com.github.dockerjava.api.command.StatsCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createStatsCmdExec()", "public com.github.dockerjava.api.command.StatsCmd$Exec createStatsCmdExec()"], ["com.github.dockerjava.api.command.CreateVolumeCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCreateVolumeCmdExec()", "public com.github.dockerjava.api.command.CreateVolumeCmd$Exec createCreateVolumeCmdExec()"], ["com.github.dockerjava.api.command.InspectVolumeCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createInspectVolumeCmdExec()", "public com.github.dockerjava.api.command.InspectVolumeCmd$Exec createInspectVolumeCmdExec()"], ["com.github.dockerjava.api.command.RemoveVolumeCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createRemoveVolumeCmdExec()", "public com.github.dockerjava.api.command.RemoveVolumeCmd$Exec createRemoveVolumeCmdExec()"], ["com.github.dockerjava.api.command.ListVolumesCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createListVolumesCmdExec()", "public com.github.dockerjava.api.command.ListVolumesCmd$Exec createListVolumesCmdExec()"], ["com.github.dockerjava.api.command.ListNetworksCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createListNetworksCmdExec()", "public com.github.dockerjava.api.command.ListNetworksCmd$Exec createListNetworksCmdExec()"], ["com.github.dockerjava.api.command.InspectNetworkCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createInspectNetworkCmdExec()", "public com.github.dockerjava.api.command.InspectNetworkCmd$Exec createInspectNetworkCmdExec()"], ["com.github.dockerjava.api.command.CreateNetworkCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createCreateNetworkCmdExec()", "public com.github.dockerjava.api.command.CreateNetworkCmd$Exec createCreateNetworkCmdExec()"], ["com.github.dockerjava.api.command.RemoveNetworkCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createRemoveNetworkCmdExec()", "public com.github.dockerjava.api.command.RemoveNetworkCmd$Exec createRemoveNetworkCmdExec()"], ["com.github.dockerjava.api.command.ConnectToNetworkCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createConnectToNetworkCmdExec()", "public com.github.dockerjava.api.command.ConnectToNetworkCmd$Exec createConnectToNetworkCmdExec()"], ["com.github.dockerjava.api.command.DisconnectFromNetworkCmd$Exec", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.createDisconnectFromNetworkCmdExec()", "public com.github.dockerjava.api.command.DisconnectFromNetworkCmd$Exec createDisconnectFromNetworkCmdExec()"], ["void", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.close()", "public void close() throws java.io.IOException"], ["com.github.dockerjava.netty.NettyDockerCmdExecFactory", "com.github.dockerjava.netty.NettyDockerCmdExecFactory.withConnectTimeout(java.lang.Integer)", "public com.github.dockerjava.netty.NettyDockerCmdExecFactory withConnectTimeout(java.lang.Integer)"], ["io.netty.channel.socket.DuplexChannel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$1.getChannel()", "public io.netty.channel.socket.DuplexChannel getChannel()"], ["com.github.dockerjava.netty.exec.CopyFileFromContainerCmdExec", "com.github.dockerjava.netty.exec.CopyFileFromContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.CopyFileFromContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.ExecCreateCmdExec", "com.github.dockerjava.netty.exec.ExecCreateCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.ExecCreateCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.UpdateContainerCmdExec", "com.github.dockerjava.netty.exec.UpdateContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.UpdateContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.KillContainerCmdExec", "com.github.dockerjava.netty.exec.KillContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.KillContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.AttachContainerCmdExec", "com.github.dockerjava.netty.exec.AttachContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.AttachContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.ContainerDiffCmdExec", "com.github.dockerjava.netty.exec.ContainerDiffCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.ContainerDiffCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.LoadImageCmdExec", "com.github.dockerjava.netty.exec.LoadImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.LoadImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.StopContainerCmdExec", "com.github.dockerjava.netty.exec.StopContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.StopContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.CreateImageCmdExec", "com.github.dockerjava.netty.exec.CreateImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.CreateImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.EventsCmdExec", "com.github.dockerjava.netty.exec.EventsCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.EventsCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.ConnectToNetworkCmdExec", "com.github.dockerjava.netty.exec.ConnectToNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.ConnectToNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.ListVolumesCmdExec", "com.github.dockerjava.netty.exec.ListVolumesCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.ListVolumesCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.DisconnectFromNetworkCmdExec", "com.github.dockerjava.netty.exec.DisconnectFromNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.DisconnectFromNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.SaveImageCmdExec", "com.github.dockerjava.netty.exec.SaveImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.SaveImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.StatsCmdExec", "com.github.dockerjava.netty.exec.StatsCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.StatsCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.BuildImageCmdExec", "com.github.dockerjava.netty.exec.BuildImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.BuildImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.CreateNetworkCmdExec", "com.github.dockerjava.netty.exec.CreateNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.CreateNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.RemoveImageCmdExec", "com.github.dockerjava.netty.exec.RemoveImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.RemoveImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.InfoCmdExec", "com.github.dockerjava.netty.exec.InfoCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.InfoCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.netty.exec.InfoCmdExec.exec(com.github.dockerjava.api.command.InfoCmd)", "public com.github.dockerjava.api.model.Info exec(com.github.dockerjava.api.command.InfoCmd)"], ["java.lang.Object", "com.github.dockerjava.netty.exec.InfoCmdExec.exec(com.github.dockerjava.api.command.DockerCmd)", "public java.lang.Object exec(com.github.dockerjava.api.command.DockerCmd)"], ["com.github.dockerjava.netty.exec.CopyArchiveToContainerCmdExec", "com.github.dockerjava.netty.exec.CopyArchiveToContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.CopyArchiveToContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.VersionCmdExec", "com.github.dockerjava.netty.exec.VersionCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.VersionCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.AuthCmdExec", "com.github.dockerjava.netty.exec.AuthCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.AuthCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.TagImageCmdExec", "com.github.dockerjava.netty.exec.TagImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.TagImageCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.WaitContainerCmdExec", "com.github.dockerjava.netty.exec.WaitContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.WaitContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.DockerCmdExecFactoryImpl", "com.github.dockerjava.netty.DockerCmdExecFactoryImpl()", "public com.github.dockerjava.netty.DockerCmdExecFactoryImpl()"], ["com.github.dockerjava.netty.InvocationBuilder$SkipResultCallback", "com.github.dockerjava.netty.InvocationBuilder$SkipResultCallback(com.github.dockerjava.netty.InvocationBuilder)", "public com.github.dockerjava.netty.InvocationBuilder$SkipResultCallback(com.github.dockerjava.netty.InvocationBuilder)"], ["void", "com.github.dockerjava.netty.InvocationBuilder$SkipResultCallback.onNext(java.lang.Void)", "public void onNext(java.lang.Void)"], ["void", "com.github.dockerjava.netty.InvocationBuilder$SkipResultCallback.onNext(java.lang.Object)", "public void onNext(java.lang.Object)"], ["io.netty.channel.EventLoopGroup", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$UnixDomainSocketInitializer.init(io.netty.bootstrap.Bootstrap, com.github.dockerjava.core.DockerClientConfig)", "public io.netty.channel.EventLoopGroup init(io.netty.bootstrap.Bootstrap, com.github.dockerjava.core.DockerClientConfig)"], ["io.netty.channel.EventLoopGroup", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$UnixDomainSocketInitializer.epollGroup()", "public io.netty.channel.EventLoopGroup epollGroup()"], ["io.netty.channel.EventLoopGroup", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$UnixDomainSocketInitializer.kqueueGroup()", "public io.netty.channel.EventLoopGroup kqueueGroup()"], ["io.netty.channel.socket.DuplexChannel", "com.github.dockerjava.netty.NettyDockerCmdExecFactory$UnixDomainSocketInitializer.connect(io.netty.bootstrap.Bootstrap)", "public io.netty.channel.socket.DuplexChannel connect(io.netty.bootstrap.Bootstrap) throws java.lang.InterruptedException"], ["com.github.dockerjava.core.LocalDirectorySSLConfig", "com.github.dockerjava.core.LocalDirectorySSLConfig(java.lang.String)", "public com.github.dockerjava.core.LocalDirectorySSLConfig(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.LocalDirectorySSLConfig.getDockerCertPath()", "public java.lang.String getDockerCertPath()"], ["javax.net.ssl.SSLContext", "com.github.dockerjava.core.LocalDirectorySSLConfig.getSSLContext()", "public javax.net.ssl.SSLContext getSSLContext()"], ["boolean", "com.github.dockerjava.core.LocalDirectorySSLConfig.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.LocalDirectorySSLConfig.hashCode()", "public int hashCode()"], ["java.lang.String", "com.github.dockerjava.core.LocalDirectorySSLConfig.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.core.exception.GoLangFileMatchException", "com.github.dockerjava.core.exception.GoLangFileMatchException(java.lang.String)", "public com.github.dockerjava.core.exception.GoLangFileMatchException(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder()", "public com.github.dockerjava.core.DefaultDockerClientConfig$Builder()"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withProperties(java.util.Properties)", "public com.github.dockerjava.core.DefaultDockerClientConfig$Builder withProperties(java.util.Properties)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withDockerHost(java.lang.String)", "public final com.github.dockerjava.core.DefaultDockerClientConfig$Builder withDockerHost(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withApiVersion(com.github.dockerjava.core.RemoteApiVersion)", "public final com.github.dockerjava.core.DefaultDockerClientConfig$Builder withApiVersion(com.github.dockerjava.core.RemoteApiVersion)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withApiVersion(java.lang.String)", "public final com.github.dockerjava.core.DefaultDockerClientConfig$Builder withApiVersion(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withRegistryUsername(java.lang.String)", "public final com.github.dockerjava.core.DefaultDockerClientConfig$Builder withRegistryUsername(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withRegistryPassword(java.lang.String)", "public final com.github.dockerjava.core.DefaultDockerClientConfig$Builder withRegistryPassword(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withRegistryEmail(java.lang.String)", "public final com.github.dockerjava.core.DefaultDockerClientConfig$Builder withRegistryEmail(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withRegistryUrl(java.lang.String)", "public com.github.dockerjava.core.DefaultDockerClientConfig$Builder withRegistryUrl(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withDockerCertPath(java.lang.String)", "public final com.github.dockerjava.core.DefaultDockerClientConfig$Builder withDockerCertPath(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withDockerConfig(java.lang.String)", "public final com.github.dockerjava.core.DefaultDockerClientConfig$Builder withDockerConfig(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withDockerTlsVerify(java.lang.String)", "public final com.github.dockerjava.core.DefaultDockerClientConfig$Builder withDockerTlsVerify(java.lang.String)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withDockerTlsVerify(java.lang.Boolean)", "public final com.github.dockerjava.core.DefaultDockerClientConfig$Builder withDockerTlsVerify(java.lang.Boolean)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.withCustomSslConfig(com.github.dockerjava.core.SSLConfig)", "public final com.github.dockerjava.core.DefaultDockerClientConfig$Builder withCustomSslConfig(com.github.dockerjava.core.SSLConfig)"], ["com.github.dockerjava.core.DefaultDockerClientConfig", "com.github.dockerjava.core.DefaultDockerClientConfig$Builder.build()", "public com.github.dockerjava.core.DefaultDockerClientConfig build()"], ["com.github.dockerjava.core.RemoteApiVersion", "com.github.dockerjava.core.RemoteApiVersion.create(int, int)", "public static com.github.dockerjava.core.RemoteApiVersion create(int, int)"], ["com.github.dockerjava.core.RemoteApiVersion", "com.github.dockerjava.core.RemoteApiVersion.unknown()", "public static com.github.dockerjava.core.RemoteApiVersion unknown()"], ["com.github.dockerjava.core.RemoteApiVersion", "com.github.dockerjava.core.RemoteApiVersion.parseConfig(java.lang.String)", "public static com.github.dockerjava.core.RemoteApiVersion parseConfig(java.lang.String)"], ["com.github.dockerjava.core.RemoteApiVersion", "com.github.dockerjava.core.RemoteApiVersion.parseConfigWithDefault(java.lang.String)", "public static com.github.dockerjava.core.RemoteApiVersion parseConfigWithDefault(java.lang.String)"], ["boolean", "com.github.dockerjava.core.RemoteApiVersion.isGreaterOrEqual(com.github.dockerjava.core.RemoteApiVersion)", "public boolean isGreaterOrEqual(com.github.dockerjava.core.RemoteApiVersion)"], ["java.lang.String", "com.github.dockerjava.core.RemoteApiVersion.getVersion()", "public java.lang.String getVersion()"], ["boolean", "com.github.dockerjava.core.RemoteApiVersion.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.RemoteApiVersion.hashCode()", "public int hashCode()"], ["java.lang.String", "com.github.dockerjava.core.RemoteApiVersion.toString()", "public java.lang.String toString()"], ["java.lang.String", "com.github.dockerjava.core.RemoteApiVersion.asWebPathPart()", "public java.lang.String asWebPathPart()"], ["com.github.dockerjava.core.NameParser$ReposTag", "com.github.dockerjava.core.NameParser$ReposTag(java.lang.String, java.lang.String)", "public com.github.dockerjava.core.NameParser$ReposTag(java.lang.String, java.lang.String)"], ["boolean", "com.github.dockerjava.core.NameParser$ReposTag.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "com.github.dockerjava.core.NameParser$ReposTag.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.core.GoLangFileMatch.match(java.util.List<java.lang.String>, java.io.File)", "public static boolean match(java.util.List<java.lang.String>, java.io.File)"], ["boolean", "com.github.dockerjava.core.GoLangFileMatch.match(java.lang.String, java.io.File)", "public static boolean match(java.lang.String, java.io.File)"], ["java.util.List<java.lang.String>", "com.github.dockerjava.core.GoLangFileMatch.match(java.util.List<java.lang.String>, java.lang.String)", "public static java.util.List<java.lang.String> match(java.util.List<java.lang.String>, java.lang.String)"], ["boolean", "com.github.dockerjava.core.GoLangFileMatch.match(java.lang.String, java.lang.String)", "public static boolean match(java.lang.String, java.lang.String)"], ["com.github.dockerjava.core.util.FiltersBuilder", "com.github.dockerjava.core.util.FiltersBuilder()", "public com.github.dockerjava.core.util.FiltersBuilder()"], ["com.github.dockerjava.core.util.FiltersBuilder", "com.github.dockerjava.core.util.FiltersBuilder.withFilter(java.lang.String, java.lang.String...)", "public com.github.dockerjava.core.util.FiltersBuilder withFilter(java.lang.String, java.lang.String...)"], ["java.util.List<java.lang.String>", "com.github.dockerjava.core.util.FiltersBuilder.getFilter(java.lang.String)", "public java.util.List<java.lang.String> getFilter(java.lang.String)"], ["com.github.dockerjava.core.util.FiltersBuilder", "com.github.dockerjava.core.util.FiltersBuilder.withImages(java.lang.String...)", "public com.github.dockerjava.core.util.FiltersBuilder withImages(java.lang.String...)"], ["java.util.List<java.lang.String>", "com.github.dockerjava.core.util.FiltersBuilder.getImage()", "public java.util.List<java.lang.String> getImage()"], ["com.github.dockerjava.core.util.FiltersBuilder", "com.github.dockerjava.core.util.FiltersBuilder.withContainers(java.lang.String...)", "public com.github.dockerjava.core.util.FiltersBuilder withContainers(java.lang.String...)"], ["java.util.List<java.lang.String>", "com.github.dockerjava.core.util.FiltersBuilder.getContainer()", "public java.util.List<java.lang.String> getContainer()"], ["com.github.dockerjava.core.util.FiltersBuilder", "com.github.dockerjava.core.util.FiltersBuilder.withLabels(java.lang.String...)", "public com.github.dockerjava.core.util.FiltersBuilder withLabels(java.lang.String...)"], ["com.github.dockerjava.core.util.FiltersBuilder", "com.github.dockerjava.core.util.FiltersBuilder.withLabels(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.core.util.FiltersBuilder withLabels(java.util.Map<java.lang.String, java.lang.String>)"], ["boolean", "com.github.dockerjava.core.util.FiltersBuilder.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.util.FiltersBuilder.hashCode()", "public int hashCode()"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.core.util.FiltersBuilder.build()", "public java.util.Map<java.lang.String, java.util.List<java.lang.String>> build()"], ["void", "com.github.dockerjava.core.util.CompressArchiveUtil.tar(java.nio.file.Path, java.nio.file.Path, boolean, boolean)", "public static void tar(java.nio.file.Path, java.nio.file.Path, boolean, boolean) throws java.io.IOException"], ["java.io.File", "com.github.dockerjava.core.util.CompressArchiveUtil.archiveTARFiles(java.io.File, java.lang.Iterable<java.io.File>, java.lang.String)", "public static java.io.File archiveTARFiles(java.io.File, java.lang.Iterable<java.io.File>, java.lang.String) throws java.io.IOException"], ["com.github.dockerjava.core.dockerfile.DockerfileStatement$Add", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add.transform(java.util.Map<java.lang.String, java.lang.String>)", "public com.github.dockerjava.core.dockerfile.DockerfileStatement$Add transform(java.util.Map<java.lang.String, java.lang.String>)"], ["java.lang.Iterable<java.lang.String>", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add.getFileResources()", "public java.lang.Iterable<java.lang.String> getFileResources()"], ["com.google.common.base.Optional<com.github.dockerjava.core.dockerfile.DockerfileStatement$Add>", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add.create(java.lang.String)", "public static com.google.common.base.Optional<com.github.dockerjava.core.dockerfile.DockerfileStatement$Add> create(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.core.dockerfile.DockerfileStatement", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add.transform(java.util.Map)", "public com.github.dockerjava.core.dockerfile.DockerfileStatement transform(java.util.Map)"], ["com.google.common.base.Optional<? extends com.github.dockerjava.core.dockerfile.DockerfileStatement>", "com.github.dockerjava.core.dockerfile.Dockerfile$LineTransformer.apply(java.lang.String)", "public com.google.common.base.Optional<? extends com.github.dockerjava.core.dockerfile.DockerfileStatement> apply(java.lang.String)"], ["java.lang.Object", "com.github.dockerjava.core.dockerfile.Dockerfile$LineTransformer.apply(java.lang.Object)", "public java.lang.Object apply(java.lang.Object)"], ["T", "com.github.dockerjava.core.dockerfile.DockerfileStatement.transform(java.util.Map<java.lang.String, java.lang.String>)", "public T transform(java.util.Map<java.lang.String, java.lang.String>)"], ["com.google.common.base.Optional<? extends com.github.dockerjava.core.dockerfile.DockerfileStatement>", "com.github.dockerjava.core.dockerfile.DockerfileStatement.createFromLine(java.lang.String)", "public static com.google.common.base.Optional<? extends com.github.dockerjava.core.dockerfile.DockerfileStatement> createFromLine(java.lang.String)"], ["boolean", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add$2.apply(java.lang.String)", "public boolean apply(java.lang.String)"], ["boolean", "com.github.dockerjava.core.dockerfile.DockerfileStatement$Add$2.apply(java.lang.Object)", "public boolean apply(java.lang.Object)"], ["com.github.dockerjava.core.DockerClientBuilder", "com.github.dockerjava.core.DockerClientBuilder.getInstance()", "public static com.github.dockerjava.core.DockerClientBuilder getInstance()"], ["com.github.dockerjava.core.DockerClientBuilder", "com.github.dockerjava.core.DockerClientBuilder.getInstance(com.github.dockerjava.core.DefaultDockerClientConfig$Builder)", "public static com.github.dockerjava.core.DockerClientBuilder getInstance(com.github.dockerjava.core.DefaultDockerClientConfig$Builder)"], ["com.github.dockerjava.core.DockerClientBuilder", "com.github.dockerjava.core.DockerClientBuilder.getInstance(com.github.dockerjava.core.DockerClientConfig)", "public static com.github.dockerjava.core.DockerClientBuilder getInstance(com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.core.DockerClientBuilder", "com.github.dockerjava.core.DockerClientBuilder.getInstance(java.lang.String)", "public static com.github.dockerjava.core.DockerClientBuilder getInstance(java.lang.String)"], ["com.github.dockerjava.api.command.DockerCmdExecFactory", "com.github.dockerjava.core.DockerClientBuilder.getDefaultDockerCmdExecFactory()", "public static com.github.dockerjava.api.command.DockerCmdExecFactory getDefaultDockerCmdExecFactory()"], ["com.github.dockerjava.core.DockerClientBuilder", "com.github.dockerjava.core.DockerClientBuilder.withDockerCmdExecFactory(com.github.dockerjava.api.command.DockerCmdExecFactory)", "public com.github.dockerjava.core.DockerClientBuilder withDockerCmdExecFactory(com.github.dockerjava.api.command.DockerCmdExecFactory)"], ["com.github.dockerjava.api.DockerClient", "com.github.dockerjava.core.DockerClientBuilder.build()", "public com.github.dockerjava.api.DockerClient build()"], ["com.github.dockerjava.core.command.CreateImageCmdImpl", "com.github.dockerjava.core.command.CreateImageCmdImpl(com.github.dockerjava.api.command.CreateImageCmd$Exec, java.lang.String, java.io.InputStream)", "public com.github.dockerjava.core.command.CreateImageCmdImpl(com.github.dockerjava.api.command.CreateImageCmd$Exec, java.lang.String, java.io.InputStream)"], ["java.lang.String", "com.github.dockerjava.core.command.CreateImageCmdImpl.getRepository()", "public java.lang.String getRepository()"], ["java.lang.String", "com.github.dockerjava.core.command.CreateImageCmdImpl.getTag()", "public java.lang.String getTag()"], ["java.io.InputStream", "com.github.dockerjava.core.command.CreateImageCmdImpl.getImageStream()", "public java.io.InputStream getImageStream()"], ["com.github.dockerjava.core.command.CreateImageCmdImpl", "com.github.dockerjava.core.command.CreateImageCmdImpl.withRepository(java.lang.String)", "public com.github.dockerjava.core.command.CreateImageCmdImpl withRepository(java.lang.String)"], ["com.github.dockerjava.core.command.CreateImageCmdImpl", "com.github.dockerjava.core.command.CreateImageCmdImpl.withImageStream(java.io.InputStream)", "public com.github.dockerjava.core.command.CreateImageCmdImpl withImageStream(java.io.InputStream)"], ["com.github.dockerjava.core.command.CreateImageCmdImpl", "com.github.dockerjava.core.command.CreateImageCmdImpl.withTag(java.lang.String)", "public com.github.dockerjava.core.command.CreateImageCmdImpl withTag(java.lang.String)"], ["com.github.dockerjava.api.command.CreateImageCmd", "com.github.dockerjava.core.command.CreateImageCmdImpl.withTag(java.lang.String)", "public com.github.dockerjava.api.command.CreateImageCmd withTag(java.lang.String)"], ["com.github.dockerjava.api.command.CreateImageCmd", "com.github.dockerjava.core.command.CreateImageCmdImpl.withImageStream(java.io.InputStream)", "public com.github.dockerjava.api.command.CreateImageCmd withImageStream(java.io.InputStream)"], ["com.github.dockerjava.api.command.CreateImageCmd", "com.github.dockerjava.core.command.CreateImageCmdImpl.withRepository(java.lang.String)", "public com.github.dockerjava.api.command.CreateImageCmd withRepository(java.lang.String)"], ["com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl(com.github.dockerjava.api.command.CopyArchiveToContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl(com.github.dockerjava.api.command.CopyArchiveToContainerCmd$Exec, java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.CopyArchiveToContainerCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.withHostResource(java.lang.String)", "public com.github.dockerjava.api.command.CopyArchiveToContainerCmd withHostResource(java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.withNoOverwriteDirNonDir(boolean)", "public com.github.dockerjava.api.command.CopyArchiveToContainerCmd withNoOverwriteDirNonDir(boolean)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.withRemotePath(java.lang.String)", "public com.github.dockerjava.api.command.CopyArchiveToContainerCmd withRemotePath(java.lang.String)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.withTarInputStream(java.io.InputStream)", "public com.github.dockerjava.api.command.CopyArchiveToContainerCmd withTarInputStream(java.io.InputStream)"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.withDirChildrenOnly(boolean)", "public com.github.dockerjava.api.command.CopyArchiveToContainerCmd withDirChildrenOnly(boolean)"], ["java.io.InputStream", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.getTarInputStream()", "public java.io.InputStream getTarInputStream()"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.getHostResource()", "public java.lang.String getHostResource()"], ["boolean", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.isNoOverwriteDirNonDir()", "public boolean isNoOverwriteDirNonDir()"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.getRemotePath()", "public java.lang.String getRemotePath()"], ["boolean", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.isDirChildrenOnly()", "public boolean isDirChildrenOnly()"], ["java.lang.String", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.toString()", "public java.lang.String toString()"], ["java.lang.Void", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.exec()", "public java.lang.Void exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.StartContainerCmdImpl", "com.github.dockerjava.core.command.StartContainerCmdImpl(com.github.dockerjava.api.command.StartContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.StartContainerCmdImpl(com.github.dockerjava.api.command.StartContainerCmd$Exec, java.lang.String)"], ["com.github.dockerjava.api.command.StartContainerCmd", "com.github.dockerjava.core.command.StartContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.StartContainerCmd withContainerId(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.StartContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.Void", "com.github.dockerjava.core.command.StartContainerCmdImpl.exec()", "public java.lang.Void exec() throws com.github.dockerjava.api.exception.NotFoundException, com.github.dockerjava.api.exception.NotModifiedException"], ["java.lang.Object", "com.github.dockerjava.core.command.StartContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.StopContainerCmdImpl", "com.github.dockerjava.core.command.StopContainerCmdImpl(com.github.dockerjava.api.command.StopContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.StopContainerCmdImpl(com.github.dockerjava.api.command.StopContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.StopContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.Integer", "com.github.dockerjava.core.command.StopContainerCmdImpl.getTimeout()", "public java.lang.Integer getTimeout()"], ["com.github.dockerjava.api.command.StopContainerCmd", "com.github.dockerjava.core.command.StopContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.StopContainerCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.StopContainerCmd", "com.github.dockerjava.core.command.StopContainerCmdImpl.withTimeout(java.lang.Integer)", "public com.github.dockerjava.api.command.StopContainerCmd withTimeout(java.lang.Integer)"], ["java.lang.Void", "com.github.dockerjava.core.command.StopContainerCmdImpl.exec()", "public java.lang.Void exec() throws com.github.dockerjava.api.exception.NotFoundException, com.github.dockerjava.api.exception.NotModifiedException"], ["java.lang.Object", "com.github.dockerjava.core.command.StopContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd", "com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd(com.github.dockerjava.api.command.DockerCmdSyncExec<T, RES_T>, com.github.dockerjava.api.model.AuthConfig)", "public com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd(com.github.dockerjava.api.command.DockerCmdSyncExec<T, RES_T>, com.github.dockerjava.api.model.AuthConfig)"], ["com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd", "com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd(com.github.dockerjava.api.command.DockerCmdSyncExec<T, RES_T>)", "public com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd(com.github.dockerjava.api.command.DockerCmdSyncExec<T, RES_T>)"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd.getAuthConfig()", "public com.github.dockerjava.api.model.AuthConfig getAuthConfig()"], ["T", "com.github.dockerjava.core.command.AbstrAuthCfgDockerCmd.withAuthConfig(com.github.dockerjava.api.model.AuthConfig)", "public T withAuthConfig(com.github.dockerjava.api.model.AuthConfig)"], ["com.github.dockerjava.core.command.WaitContainerCmdImpl", "com.github.dockerjava.core.command.WaitContainerCmdImpl(com.github.dockerjava.api.command.WaitContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.WaitContainerCmdImpl(com.github.dockerjava.api.command.WaitContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.WaitContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["com.github.dockerjava.api.command.WaitContainerCmd", "com.github.dockerjava.core.command.WaitContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.WaitContainerCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.core.command.PullImageCmdImpl", "com.github.dockerjava.core.command.PullImageCmdImpl(com.github.dockerjava.api.command.PullImageCmd$Exec, com.github.dockerjava.api.model.AuthConfig, java.lang.String)", "public com.github.dockerjava.core.command.PullImageCmdImpl(com.github.dockerjava.api.command.PullImageCmd$Exec, com.github.dockerjava.api.model.AuthConfig, java.lang.String)"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.core.command.PullImageCmdImpl.getAuthConfig()", "public com.github.dockerjava.api.model.AuthConfig getAuthConfig()"], ["com.github.dockerjava.api.command.PullImageCmd", "com.github.dockerjava.core.command.PullImageCmdImpl.withAuthConfig(com.github.dockerjava.api.model.AuthConfig)", "public com.github.dockerjava.api.command.PullImageCmd withAuthConfig(com.github.dockerjava.api.model.AuthConfig)"], ["java.lang.String", "com.github.dockerjava.core.command.PullImageCmdImpl.getRepository()", "public java.lang.String getRepository()"], ["java.lang.String", "com.github.dockerjava.core.command.PullImageCmdImpl.getTag()", "public java.lang.String getTag()"], ["java.lang.String", "com.github.dockerjava.core.command.PullImageCmdImpl.getRegistry()", "public java.lang.String getRegistry()"], ["com.github.dockerjava.api.command.PullImageCmd", "com.github.dockerjava.core.command.PullImageCmdImpl.withRepository(java.lang.String)", "public com.github.dockerjava.api.command.PullImageCmd withRepository(java.lang.String)"], ["com.github.dockerjava.api.command.PullImageCmd", "com.github.dockerjava.core.command.PullImageCmdImpl.withTag(java.lang.String)", "public com.github.dockerjava.api.command.PullImageCmd withTag(java.lang.String)"], ["com.github.dockerjava.api.command.PullImageCmd", "com.github.dockerjava.core.command.PullImageCmdImpl.withRegistry(java.lang.String)", "public com.github.dockerjava.api.command.PullImageCmd withRegistry(java.lang.String)"], ["com.github.dockerjava.core.command.RemoveContainerCmdImpl", "com.github.dockerjava.core.command.RemoveContainerCmdImpl(com.github.dockerjava.api.command.RemoveContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.RemoveContainerCmdImpl(com.github.dockerjava.api.command.RemoveContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.hasRemoveVolumesEnabled()", "public java.lang.Boolean hasRemoveVolumesEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.hasForceEnabled()", "public java.lang.Boolean hasForceEnabled()"], ["com.github.dockerjava.api.command.RemoveContainerCmd", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.RemoveContainerCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.RemoveContainerCmd", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.withRemoveVolumes(java.lang.Boolean)", "public com.github.dockerjava.api.command.RemoveContainerCmd withRemoveVolumes(java.lang.Boolean)"], ["com.github.dockerjava.api.command.RemoveContainerCmd", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.withForce(java.lang.Boolean)", "public com.github.dockerjava.api.command.RemoveContainerCmd withForce(java.lang.Boolean)"], ["java.lang.Void", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.exec()", "public java.lang.Void exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.RemoveContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["int", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["int", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXInputStream.read()", "public int read() throws java.io.IOException"], ["void", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXInputStream.close()", "public void close() throws java.io.IOException"], ["int", "org.newsclub.net.unix.AFUNIXSocketImpl$AFUNIXInputStream.available()", "public int available() throws java.io.IOException"], ["int", "com.github.dockerjava.jaxrs.filter.LoggingFilter$1.compare(java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>, java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>)", "public int compare(java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>, java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>)"], ["int", "com.github.dockerjava.jaxrs.filter.LoggingFilter$1.compare(java.lang.Object, java.lang.Object)", "public int compare(java.lang.Object, java.lang.Object)"], ["void", "com.github.dockerjava.jaxrs.filter.LoggingFilter$LoggingStream.write(int)", "public void write(int) throws java.io.IOException"], ["com.github.dockerjava.jaxrs.filter.JsonClientFilter", "com.github.dockerjava.jaxrs.filter.JsonClientFilter()", "public com.github.dockerjava.jaxrs.filter.JsonClientFilter()"], ["void", "com.github.dockerjava.jaxrs.filter.JsonClientFilter.filter(javax.ws.rs.client.ClientRequestContext, javax.ws.rs.client.ClientResponseContext)", "public void filter(javax.ws.rs.client.ClientRequestContext, javax.ws.rs.client.ClientResponseContext) throws java.io.IOException"], ["com.github.dockerjava.jaxrs.CreateContainerCmdExec", "com.github.dockerjava.jaxrs.CreateContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.CreateContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.async.GETCallbackNotifier", "com.github.dockerjava.jaxrs.async.GETCallbackNotifier(com.github.dockerjava.core.async.ResponseStreamProcessor<T>, com.github.dockerjava.api.async.ResultCallback<T>, javax.ws.rs.client.Invocation$Builder)", "public com.github.dockerjava.jaxrs.async.GETCallbackNotifier(com.github.dockerjava.core.async.ResponseStreamProcessor<T>, com.github.dockerjava.api.async.ResultCallback<T>, javax.ws.rs.client.Invocation$Builder)"], ["java.lang.Void", "com.github.dockerjava.jaxrs.async.AbstractCallbackNotifier.call()", "public java.lang.Void call() throws java.lang.Exception"], ["<T> java.util.concurrent.Future<java.lang.Void>", "com.github.dockerjava.jaxrs.async.AbstractCallbackNotifier.startAsyncProcessing(com.github.dockerjava.jaxrs.async.AbstractCallbackNotifier<T>)", "public static <T> java.util.concurrent.Future<java.lang.Void> startAsyncProcessing(com.github.dockerjava.jaxrs.async.AbstractCallbackNotifier<T>)"], ["java.lang.Object", "com.github.dockerjava.jaxrs.async.AbstractCallbackNotifier.call()", "public java.lang.Object call() throws java.lang.Exception"], ["com.github.dockerjava.jaxrs.RemoveNetworkCmdExec", "com.github.dockerjava.jaxrs.RemoveNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.RemoveNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec$1.close()", "public void close() throws java.io.IOException"], ["void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec$1.onStart(java.io.Closeable)", "public void onStart(java.io.Closeable)"], ["void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec$1.onNext(A_RES_T)", "public void onNext(A_RES_T)"], ["void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec$1.onError(java.lang.Throwable)", "public void onError(java.lang.Throwable)"], ["void", "com.github.dockerjava.jaxrs.AbstrAsyncDockerCmdExec$1.onComplete()", "public void onComplete()"], ["com.github.dockerjava.jaxrs.ListVolumesCmdExec", "com.github.dockerjava.jaxrs.ListVolumesCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.ListVolumesCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.PingCmdExec", "com.github.dockerjava.jaxrs.PingCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.PingCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.StatsCmdExec", "com.github.dockerjava.jaxrs.StatsCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.StatsCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory$1.close()", "public void close()"], ["void", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory$1.shutdown()", "public void shutdown()"], ["com.github.dockerjava.jaxrs.BuildImageCmdExec", "com.github.dockerjava.jaxrs.BuildImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.BuildImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.CreateNetworkCmdExec", "com.github.dockerjava.jaxrs.CreateNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.CreateNetworkCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.PauseContainerCmdExec", "com.github.dockerjava.jaxrs.PauseContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.PauseContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.InspectVolumeCmdExec", "com.github.dockerjava.jaxrs.InspectVolumeCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.InspectVolumeCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.jaxrs.PushImageCmdExec", "com.github.dockerjava.jaxrs.PushImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.PushImageCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$4.run()", "public void run() throws java.net.SocketException"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory()", "public com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory()"], ["void", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.init(com.github.dockerjava.core.DockerClientConfig)", "public void init(com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.command.AuthCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createAuthCmdExec()", "public com.github.dockerjava.api.command.AuthCmd$Exec createAuthCmdExec()"], ["com.github.dockerjava.api.command.InfoCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createInfoCmdExec()", "public com.github.dockerjava.api.command.InfoCmd$Exec createInfoCmdExec()"], ["com.github.dockerjava.api.command.PingCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createPingCmdExec()", "public com.github.dockerjava.api.command.PingCmd$Exec createPingCmdExec()"], ["com.github.dockerjava.api.command.VersionCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createVersionCmdExec()", "public com.github.dockerjava.api.command.VersionCmd$Exec createVersionCmdExec()"], ["com.github.dockerjava.api.command.PullImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createPullImageCmdExec()", "public com.github.dockerjava.api.command.PullImageCmd$Exec createPullImageCmdExec()"], ["com.github.dockerjava.api.command.PushImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createPushImageCmdExec()", "public com.github.dockerjava.api.command.PushImageCmd$Exec createPushImageCmdExec()"], ["com.github.dockerjava.api.command.SaveImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createSaveImageCmdExec()", "public com.github.dockerjava.api.command.SaveImageCmd$Exec createSaveImageCmdExec()"], ["com.github.dockerjava.api.command.CreateImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCreateImageCmdExec()", "public com.github.dockerjava.api.command.CreateImageCmd$Exec createCreateImageCmdExec()"], ["com.github.dockerjava.api.command.LoadImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createLoadImageCmdExec()", "public com.github.dockerjava.api.command.LoadImageCmd$Exec createLoadImageCmdExec()"], ["com.github.dockerjava.api.command.SearchImagesCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createSearchImagesCmdExec()", "public com.github.dockerjava.api.command.SearchImagesCmd$Exec createSearchImagesCmdExec()"], ["com.github.dockerjava.api.command.RemoveImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createRemoveImageCmdExec()", "public com.github.dockerjava.api.command.RemoveImageCmd$Exec createRemoveImageCmdExec()"], ["com.github.dockerjava.api.command.ListImagesCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createListImagesCmdExec()", "public com.github.dockerjava.api.command.ListImagesCmd$Exec createListImagesCmdExec()"], ["com.github.dockerjava.api.command.InspectImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createInspectImageCmdExec()", "public com.github.dockerjava.api.command.InspectImageCmd$Exec createInspectImageCmdExec()"], ["com.github.dockerjava.api.command.ListContainersCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createListContainersCmdExec()", "public com.github.dockerjava.api.command.ListContainersCmd$Exec createListContainersCmdExec()"], ["com.github.dockerjava.api.command.CreateContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCreateContainerCmdExec()", "public com.github.dockerjava.api.command.CreateContainerCmd$Exec createCreateContainerCmdExec()"], ["com.github.dockerjava.api.command.StartContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createStartContainerCmdExec()", "public com.github.dockerjava.api.command.StartContainerCmd$Exec createStartContainerCmdExec()"], ["com.github.dockerjava.api.command.InspectContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createInspectContainerCmdExec()", "public com.github.dockerjava.api.command.InspectContainerCmd$Exec createInspectContainerCmdExec()"], ["com.github.dockerjava.api.command.ExecCreateCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createExecCmdExec()", "public com.github.dockerjava.api.command.ExecCreateCmd$Exec createExecCmdExec()"], ["com.github.dockerjava.api.command.RemoveContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createRemoveContainerCmdExec()", "public com.github.dockerjava.api.command.RemoveContainerCmd$Exec createRemoveContainerCmdExec()"], ["com.github.dockerjava.api.command.WaitContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createWaitContainerCmdExec()", "public com.github.dockerjava.api.command.WaitContainerCmd$Exec createWaitContainerCmdExec()"], ["com.github.dockerjava.api.command.AttachContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createAttachContainerCmdExec()", "public com.github.dockerjava.api.command.AttachContainerCmd$Exec createAttachContainerCmdExec()"], ["com.github.dockerjava.api.command.ExecStartCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createExecStartCmdExec()", "public com.github.dockerjava.api.command.ExecStartCmd$Exec createExecStartCmdExec()"], ["com.github.dockerjava.api.command.InspectExecCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createInspectExecCmdExec()", "public com.github.dockerjava.api.command.InspectExecCmd$Exec createInspectExecCmdExec()"], ["com.github.dockerjava.api.command.LogContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createLogContainerCmdExec()", "public com.github.dockerjava.api.command.LogContainerCmd$Exec createLogContainerCmdExec()"], ["com.github.dockerjava.api.command.CopyArchiveFromContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCopyArchiveFromContainerCmdExec()", "public com.github.dockerjava.api.command.CopyArchiveFromContainerCmd$Exec createCopyArchiveFromContainerCmdExec()"], ["com.github.dockerjava.api.command.CopyFileFromContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCopyFileFromContainerCmdExec()", "public com.github.dockerjava.api.command.CopyFileFromContainerCmd$Exec createCopyFileFromContainerCmdExec()"], ["com.github.dockerjava.api.command.CopyArchiveToContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCopyArchiveToContainerCmdExec()", "public com.github.dockerjava.api.command.CopyArchiveToContainerCmd$Exec createCopyArchiveToContainerCmdExec()"], ["com.github.dockerjava.api.command.StopContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createStopContainerCmdExec()", "public com.github.dockerjava.api.command.StopContainerCmd$Exec createStopContainerCmdExec()"], ["com.github.dockerjava.api.command.ContainerDiffCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createContainerDiffCmdExec()", "public com.github.dockerjava.api.command.ContainerDiffCmd$Exec createContainerDiffCmdExec()"], ["com.github.dockerjava.api.command.KillContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createKillContainerCmdExec()", "public com.github.dockerjava.api.command.KillContainerCmd$Exec createKillContainerCmdExec()"], ["com.github.dockerjava.api.command.UpdateContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createUpdateContainerCmdExec()", "public com.github.dockerjava.api.command.UpdateContainerCmd$Exec createUpdateContainerCmdExec()"], ["com.github.dockerjava.api.command.RenameContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createRenameContainerCmdExec()", "public com.github.dockerjava.api.command.RenameContainerCmd$Exec createRenameContainerCmdExec()"], ["com.github.dockerjava.api.command.RestartContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createRestartContainerCmdExec()", "public com.github.dockerjava.api.command.RestartContainerCmd$Exec createRestartContainerCmdExec()"], ["com.github.dockerjava.api.command.CommitCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCommitCmdExec()", "public com.github.dockerjava.api.command.CommitCmd$Exec createCommitCmdExec()"], ["com.github.dockerjava.api.command.BuildImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createBuildImageCmdExec()", "public com.github.dockerjava.api.command.BuildImageCmd$Exec createBuildImageCmdExec()"], ["com.github.dockerjava.api.command.TopContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createTopContainerCmdExec()", "public com.github.dockerjava.api.command.TopContainerCmd$Exec createTopContainerCmdExec()"], ["com.github.dockerjava.api.command.TagImageCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createTagImageCmdExec()", "public com.github.dockerjava.api.command.TagImageCmd$Exec createTagImageCmdExec()"], ["com.github.dockerjava.api.command.PauseContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createPauseContainerCmdExec()", "public com.github.dockerjava.api.command.PauseContainerCmd$Exec createPauseContainerCmdExec()"], ["com.github.dockerjava.api.command.UnpauseContainerCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createUnpauseContainerCmdExec()", "public com.github.dockerjava.api.command.UnpauseContainerCmd$Exec createUnpauseContainerCmdExec()"], ["com.github.dockerjava.api.command.EventsCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createEventsCmdExec()", "public com.github.dockerjava.api.command.EventsCmd$Exec createEventsCmdExec()"], ["com.github.dockerjava.api.command.StatsCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createStatsCmdExec()", "public com.github.dockerjava.api.command.StatsCmd$Exec createStatsCmdExec()"], ["com.github.dockerjava.api.command.CreateVolumeCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCreateVolumeCmdExec()", "public com.github.dockerjava.api.command.CreateVolumeCmd$Exec createCreateVolumeCmdExec()"], ["com.github.dockerjava.api.command.InspectVolumeCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createInspectVolumeCmdExec()", "public com.github.dockerjava.api.command.InspectVolumeCmd$Exec createInspectVolumeCmdExec()"], ["com.github.dockerjava.api.command.RemoveVolumeCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createRemoveVolumeCmdExec()", "public com.github.dockerjava.api.command.RemoveVolumeCmd$Exec createRemoveVolumeCmdExec()"], ["com.github.dockerjava.api.command.ListVolumesCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createListVolumesCmdExec()", "public com.github.dockerjava.api.command.ListVolumesCmd$Exec createListVolumesCmdExec()"], ["com.github.dockerjava.api.command.ListNetworksCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createListNetworksCmdExec()", "public com.github.dockerjava.api.command.ListNetworksCmd$Exec createListNetworksCmdExec()"], ["com.github.dockerjava.api.command.InspectNetworkCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createInspectNetworkCmdExec()", "public com.github.dockerjava.api.command.InspectNetworkCmd$Exec createInspectNetworkCmdExec()"], ["com.github.dockerjava.api.command.CreateNetworkCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createCreateNetworkCmdExec()", "public com.github.dockerjava.api.command.CreateNetworkCmd$Exec createCreateNetworkCmdExec()"], ["com.github.dockerjava.api.command.RemoveNetworkCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createRemoveNetworkCmdExec()", "public com.github.dockerjava.api.command.RemoveNetworkCmd$Exec createRemoveNetworkCmdExec()"], ["com.github.dockerjava.api.command.ConnectToNetworkCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createConnectToNetworkCmdExec()", "public com.github.dockerjava.api.command.ConnectToNetworkCmd$Exec createConnectToNetworkCmdExec()"], ["com.github.dockerjava.api.command.DisconnectFromNetworkCmd$Exec", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.createDisconnectFromNetworkCmdExec()", "public com.github.dockerjava.api.command.DisconnectFromNetworkCmd$Exec createDisconnectFromNetworkCmdExec()"], ["void", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.close()", "public void close() throws java.io.IOException"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withReadTimeout(java.lang.Integer)", "public com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory withReadTimeout(java.lang.Integer)"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withConnectTimeout(java.lang.Integer)", "public com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory withConnectTimeout(java.lang.Integer)"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withMaxTotalConnections(java.lang.Integer)", "public com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory withMaxTotalConnections(java.lang.Integer)"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withMaxPerRouteConnections(java.lang.Integer)", "public com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory withMaxPerRouteConnections(java.lang.Integer)"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withConnectionRequestTimeout(java.lang.Integer)", "public com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory withConnectionRequestTimeout(java.lang.Integer)"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withClientResponseFilters(javax.ws.rs.client.ClientResponseFilter...)", "public com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory withClientResponseFilters(javax.ws.rs.client.ClientResponseFilter...)"], ["com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.withClientRequestFilters(javax.ws.rs.client.ClientRequestFilter...)", "public com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory withClientRequestFilters(javax.ws.rs.client.ClientRequestFilter...)"], ["void", "com.github.dockerjava.jaxrs.JerseyDockerCmdExecFactory.releaseConnection(long)", "public void releaseConnection(long)"], ["com.github.dockerjava.jaxrs.UnpauseContainerCmdExec", "com.github.dockerjava.jaxrs.UnpauseContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.UnpauseContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["void", "com.github.dockerjava.jaxrs.ApacheUnixSocket$7.run()", "public void run() throws java.net.SocketException"], ["com.github.dockerjava.jaxrs.CopyArchiveFromContainerCmdExec", "com.github.dockerjava.jaxrs.CopyArchiveFromContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.jaxrs.CopyArchiveFromContainerCmdExec(javax.ws.rs.client.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.api.model.LogConfig$LoggingType[]", "com.github.dockerjava.api.model.LogConfig$LoggingType.values()", "public static com.github.dockerjava.api.model.LogConfig$LoggingType[] values()"], ["com.github.dockerjava.api.model.LogConfig$LoggingType", "com.github.dockerjava.api.model.LogConfig$LoggingType.valueOf(java.lang.String)", "public static com.github.dockerjava.api.model.LogConfig$LoggingType valueOf(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.LogConfig$LoggingType.getType()", "public java.lang.String getType()"], ["com.github.dockerjava.api.model.BuildResponseItem", "com.github.dockerjava.api.model.BuildResponseItem()", "public com.github.dockerjava.api.model.BuildResponseItem()"], ["boolean", "com.github.dockerjava.api.model.BuildResponseItem.isBuildSuccessIndicated()", "public boolean isBuildSuccessIndicated()"], ["java.lang.String", "com.github.dockerjava.api.model.BuildResponseItem.getImageId()", "public java.lang.String getImageId()"], ["com.github.dockerjava.api.model.Ports$Serializer", "com.github.dockerjava.api.model.Ports$Serializer()", "public com.github.dockerjava.api.model.Ports$Serializer()"], ["void", "com.github.dockerjava.api.model.Ports$Serializer.serialize(com.github.dockerjava.api.model.Ports, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(com.github.dockerjava.api.model.Ports, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["void", "com.github.dockerjava.api.model.Ports$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.VolumesRW", "com.github.dockerjava.api.model.VolumesRW(com.github.dockerjava.api.model.VolumeRW...)", "public com.github.dockerjava.api.model.VolumesRW(com.github.dockerjava.api.model.VolumeRW...)"], ["com.github.dockerjava.api.model.VolumeRW[]", "com.github.dockerjava.api.model.VolumesRW.getVolumesRW()", "public com.github.dockerjava.api.model.VolumeRW[] getVolumesRW()"], ["com.github.dockerjava.api.model.Links$Serializer", "com.github.dockerjava.api.model.Links$Serializer()", "public com.github.dockerjava.api.model.Links$Serializer()"], ["void", "com.github.dockerjava.api.model.Links$Serializer.serialize(com.github.dockerjava.api.model.Links, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(com.github.dockerjava.api.model.Links, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["void", "com.github.dockerjava.api.model.Links$Serializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)", "public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException"], ["com.github.dockerjava.api.model.ExposedPorts", "com.github.dockerjava.api.model.ExposedPorts(com.github.dockerjava.api.model.ExposedPort...)", "public com.github.dockerjava.api.model.ExposedPorts(com.github.dockerjava.api.model.ExposedPort...)"], ["com.github.dockerjava.api.model.ExposedPorts", "com.github.dockerjava.api.model.ExposedPorts(java.util.List<com.github.dockerjava.api.model.ExposedPort>)", "public com.github.dockerjava.api.model.ExposedPorts(java.util.List<com.github.dockerjava.api.model.ExposedPort>)"], ["com.github.dockerjava.api.model.ExposedPort[]", "com.github.dockerjava.api.model.ExposedPorts.getExposedPorts()", "public com.github.dockerjava.api.model.ExposedPort[] getExposedPorts()"], ["com.github.dockerjava.api.model.Container", "com.github.dockerjava.api.model.Container()", "public com.github.dockerjava.api.model.Container()"], ["java.lang.String", "com.github.dockerjava.api.model.Container.getId()", "public java.lang.String getId()"], ["java.lang.String", "com.github.dockerjava.api.model.Container.getCommand()", "public java.lang.String getCommand()"], ["java.lang.String", "com.github.dockerjava.api.model.Container.getImage()", "public java.lang.String getImage()"], ["java.lang.String", "com.github.dockerjava.api.model.Container.getImageId()", "public java.lang.String getImageId()"], ["java.lang.Long", "com.github.dockerjava.api.model.Container.getCreated()", "public java.lang.Long getCreated()"], ["java.lang.String", "com.github.dockerjava.api.model.Container.getStatus()", "public java.lang.String getStatus()"], ["com.github.dockerjava.api.model.ContainerPort[]", "com.github.dockerjava.api.model.Container.getPorts()", "public com.github.dockerjava.api.model.ContainerPort[] getPorts()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.dockerjava.api.model.Container.getLabels()", "public java.util.Map<java.lang.String, java.lang.String> getLabels()"], ["java.lang.String[]", "com.github.dockerjava.api.model.Container.getNames()", "public java.lang.String[] getNames()"], ["java.lang.Long", "com.github.dockerjava.api.model.Container.getSizeRw()", "public java.lang.Long getSizeRw()"], ["java.lang.Long", "com.github.dockerjava.api.model.Container.getSizeRootFs()", "public java.lang.Long getSizeRootFs()"], ["com.github.dockerjava.api.model.ContainerNetworkSettings", "com.github.dockerjava.api.model.Container.getNetworkSettings()", "public com.github.dockerjava.api.model.ContainerNetworkSettings getNetworkSettings()"], ["com.github.dockerjava.api.model.ContainerHostConfig", "com.github.dockerjava.api.model.Container.getHostConfig()", "public com.github.dockerjava.api.model.ContainerHostConfig getHostConfig()"], ["java.lang.String", "com.github.dockerjava.api.model.Container.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.Container.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Container.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.Repository", "com.github.dockerjava.api.model.Repository(java.lang.String)", "public com.github.dockerjava.api.model.Repository(java.lang.String)"], ["java.net.URL", "com.github.dockerjava.api.model.Repository.getURL()", "public java.net.URL getURL() throws java.net.MalformedURLException"], ["java.lang.String", "com.github.dockerjava.api.model.Repository.toString()", "public java.lang.String toString()"], ["java.lang.String", "com.github.dockerjava.api.model.Repository.getPath()", "public java.lang.String getPath()"], ["com.github.dockerjava.api.model.ChangeLog", "com.github.dockerjava.api.model.ChangeLog()", "public com.github.dockerjava.api.model.ChangeLog()"], ["java.lang.String", "com.github.dockerjava.api.model.ChangeLog.getPath()", "public java.lang.String getPath()"], ["java.lang.Integer", "com.github.dockerjava.api.model.ChangeLog.getKind()", "public java.lang.Integer getKind()"], ["java.lang.String", "com.github.dockerjava.api.model.ChangeLog.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.model.EventType[]", "com.github.dockerjava.api.model.EventType.values()", "public static com.github.dockerjava.api.model.EventType[] values()"], ["com.github.dockerjava.api.model.EventType", "com.github.dockerjava.api.model.EventType.valueOf(java.lang.String)", "public static com.github.dockerjava.api.model.EventType valueOf(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.EventType.getValue()", "public java.lang.String getValue()"], ["com.github.dockerjava.api.model.EventType", "com.github.dockerjava.api.model.EventType.forValue(java.lang.String)", "public static com.github.dockerjava.api.model.EventType forValue(java.lang.String)"], ["com.github.dockerjava.api.model.Device", "com.github.dockerjava.api.model.Device()", "public com.github.dockerjava.api.model.Device()"], ["com.github.dockerjava.api.model.Device", "com.github.dockerjava.api.model.Device(java.lang.String, java.lang.String, java.lang.String)", "public com.github.dockerjava.api.model.Device(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Device.getcGroupPermissions()", "public java.lang.String getcGroupPermissions()"], ["java.lang.String", "com.github.dockerjava.api.model.Device.getPathInContainer()", "public java.lang.String getPathInContainer()"], ["java.lang.String", "com.github.dockerjava.api.model.Device.getPathOnHost()", "public java.lang.String getPathOnHost()"], ["com.github.dockerjava.api.model.Device", "com.github.dockerjava.api.model.Device.parse(java.lang.String)", "public static com.github.dockerjava.api.model.Device parse(java.lang.String)"], ["boolean", "com.github.dockerjava.api.model.Device.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Device.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.ContainerHostConfig", "com.github.dockerjava.api.model.ContainerHostConfig()", "public com.github.dockerjava.api.model.ContainerHostConfig()"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerHostConfig.getNetworkMode()", "public java.lang.String getNetworkMode()"], ["com.github.dockerjava.api.model.ContainerHostConfig", "com.github.dockerjava.api.model.ContainerHostConfig.withNetworkMode(java.lang.String)", "public com.github.dockerjava.api.model.ContainerHostConfig withNetworkMode(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerHostConfig.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.ContainerHostConfig.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.ContainerHostConfig.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.AccessMode[]", "com.github.dockerjava.api.model.AccessMode.values()", "public static com.github.dockerjava.api.model.AccessMode[] values()"], ["com.github.dockerjava.api.model.AccessMode", "com.github.dockerjava.api.model.AccessMode.valueOf(java.lang.String)", "public static com.github.dockerjava.api.model.AccessMode valueOf(java.lang.String)"], ["com.github.dockerjava.api.model.AccessMode", "com.github.dockerjava.api.model.AccessMode.fromBoolean(boolean)", "public static final com.github.dockerjava.api.model.AccessMode fromBoolean(boolean)"], ["boolean", "com.github.dockerjava.api.model.AccessMode.toBoolean()", "public final boolean toBoolean()"], ["com.github.dockerjava.api.model.ContainerPort", "com.github.dockerjava.api.model.ContainerPort()", "public com.github.dockerjava.api.model.ContainerPort()"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerPort.getIp()", "public java.lang.String getIp()"], ["com.github.dockerjava.api.model.ContainerPort", "com.github.dockerjava.api.model.ContainerPort.withIp(java.lang.String)", "public com.github.dockerjava.api.model.ContainerPort withIp(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.api.model.ContainerPort.getPrivatePort()", "public java.lang.Integer getPrivatePort()"], ["com.github.dockerjava.api.model.ContainerPort", "com.github.dockerjava.api.model.ContainerPort.withPrivatePort(java.lang.Integer)", "public com.github.dockerjava.api.model.ContainerPort withPrivatePort(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.ContainerPort.getPublicPort()", "public java.lang.Integer getPublicPort()"], ["com.github.dockerjava.api.model.ContainerPort", "com.github.dockerjava.api.model.ContainerPort.withPublicPort(java.lang.Integer)", "public com.github.dockerjava.api.model.ContainerPort withPublicPort(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerPort.getType()", "public java.lang.String getType()"], ["com.github.dockerjava.api.model.ContainerPort", "com.github.dockerjava.api.model.ContainerPort.withType(java.lang.String)", "public com.github.dockerjava.api.model.ContainerPort withType(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.ContainerPort.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.ContainerPort.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.ContainerPort.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info()", "public com.github.dockerjava.api.model.Info()"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getArchitecture()", "public java.lang.String getArchitecture()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withArchitecture(java.lang.String)", "public com.github.dockerjava.api.model.Info withArchitecture(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getContainers()", "public java.lang.Integer getContainers()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withContainers(java.lang.Integer)", "public com.github.dockerjava.api.model.Info withContainers(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getContainersPaused()", "public java.lang.Integer getContainersPaused()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withContainersPaused(java.lang.Integer)", "public com.github.dockerjava.api.model.Info withContainersPaused(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getContainersRunning()", "public java.lang.Integer getContainersRunning()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withContainersRunning(java.lang.Integer)", "public com.github.dockerjava.api.model.Info withContainersRunning(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getContainersStopped()", "public java.lang.Integer getContainersStopped()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withContainersStopped(java.lang.Integer)", "public com.github.dockerjava.api.model.Info withContainersStopped(java.lang.Integer)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getCpuCfsPeriod()", "public java.lang.Boolean getCpuCfsPeriod()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withCpuCfsPeriod(java.lang.Boolean)", "public com.github.dockerjava.api.model.Info withCpuCfsPeriod(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getCpuCfsQuota()", "public java.lang.Boolean getCpuCfsQuota()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withCpuCfsQuota(java.lang.Boolean)", "public com.github.dockerjava.api.model.Info withCpuCfsQuota(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getCpuShares()", "public java.lang.Boolean getCpuShares()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withCpuShares(java.lang.Boolean)", "public com.github.dockerjava.api.model.Info withCpuShares(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getCpuSet()", "public java.lang.Boolean getCpuSet()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withCpuSet(java.lang.Boolean)", "public com.github.dockerjava.api.model.Info withCpuSet(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getDebug()", "public java.lang.Boolean getDebug()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withDebug(java.lang.Boolean)", "public com.github.dockerjava.api.model.Info withDebug(java.lang.Boolean)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getDiscoveryBackend()", "public java.lang.String getDiscoveryBackend()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withDiscoveryBackend(java.lang.String)", "public com.github.dockerjava.api.model.Info withDiscoveryBackend(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getDockerRootDir()", "public java.lang.String getDockerRootDir()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withDockerRootDir(java.lang.String)", "public com.github.dockerjava.api.model.Info withDockerRootDir(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getDriver()", "public java.lang.String getDriver()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withDriver(java.lang.String)", "public com.github.dockerjava.api.model.Info withDriver(java.lang.String)"], ["java.util.List<java.util.List<java.lang.String>>", "com.github.dockerjava.api.model.Info.getDriverStatuses()", "public java.util.List<java.util.List<java.lang.String>> getDriverStatuses()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withDriverStatuses(java.util.List<java.util.List<java.lang.String>>)", "public com.github.dockerjava.api.model.Info withDriverStatuses(java.util.List<java.util.List<java.lang.String>>)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getExecutionDriver()", "public java.lang.String getExecutionDriver()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withExecutionDriver(java.lang.String)", "public com.github.dockerjava.api.model.Info withExecutionDriver(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getLoggingDriver()", "public java.lang.String getLoggingDriver()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withLoggingDriver(java.lang.String)", "public com.github.dockerjava.api.model.Info withLoggingDriver(java.lang.String)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getExperimentalBuild()", "public java.lang.Boolean getExperimentalBuild()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withExperimentalBuild(java.lang.Boolean)", "public com.github.dockerjava.api.model.Info withExperimentalBuild(java.lang.Boolean)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getHttpProxy()", "public java.lang.String getHttpProxy()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withHttpProxy(java.lang.String)", "public com.github.dockerjava.api.model.Info withHttpProxy(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getHttpsProxy()", "public java.lang.String getHttpsProxy()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withHttpsProxy(java.lang.String)", "public com.github.dockerjava.api.model.Info withHttpsProxy(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getId()", "public java.lang.String getId()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withId(java.lang.String)", "public com.github.dockerjava.api.model.Info withId(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getImages()", "public java.lang.Integer getImages()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withImages(java.lang.Integer)", "public com.github.dockerjava.api.model.Info withImages(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getIndexServerAddress()", "public java.lang.String getIndexServerAddress()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withIndexServerAddress(java.lang.String)", "public com.github.dockerjava.api.model.Info withIndexServerAddress(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getInitPath()", "public java.lang.String getInitPath()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withInitPath(java.lang.String)", "public com.github.dockerjava.api.model.Info withInitPath(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getInitSha1()", "public java.lang.String getInitSha1()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withInitSha1(java.lang.String)", "public com.github.dockerjava.api.model.Info withInitSha1(java.lang.String)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getIPv4Forwarding()", "public java.lang.Boolean getIPv4Forwarding()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withIPv4Forwarding(java.lang.Boolean)", "public com.github.dockerjava.api.model.Info withIPv4Forwarding(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getBridgeNfIptables()", "public java.lang.Boolean getBridgeNfIptables()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withBridgeNfIptables(java.lang.Boolean)", "public com.github.dockerjava.api.model.Info withBridgeNfIptables(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getBridgeNfIp6tables()", "public java.lang.Boolean getBridgeNfIp6tables()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withBridgeNfIp6tables(java.lang.Boolean)", "public com.github.dockerjava.api.model.Info withBridgeNfIp6tables(java.lang.Boolean)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getKernelVersion()", "public java.lang.String getKernelVersion()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withKernelVersion(java.lang.String)", "public com.github.dockerjava.api.model.Info withKernelVersion(java.lang.String)"], ["java.lang.String[]", "com.github.dockerjava.api.model.Info.getLabels()", "public java.lang.String[] getLabels()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withLabels(java.lang.String[])", "public com.github.dockerjava.api.model.Info withLabels(java.lang.String[])"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getMemoryLimit()", "public java.lang.Boolean getMemoryLimit()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withMemoryLimit(java.lang.Boolean)", "public com.github.dockerjava.api.model.Info withMemoryLimit(java.lang.Boolean)"], ["java.lang.Long", "com.github.dockerjava.api.model.Info.getMemTotal()", "public java.lang.Long getMemTotal()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withMemTotal(java.lang.Long)", "public com.github.dockerjava.api.model.Info withMemTotal(java.lang.Long)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getName()", "public java.lang.String getName()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withName(java.lang.String)", "public com.github.dockerjava.api.model.Info withName(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getNCPU()", "public java.lang.Integer getNCPU()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withNCPU(java.lang.Integer)", "public com.github.dockerjava.api.model.Info withNCPU(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getNEventsListener()", "public java.lang.Integer getNEventsListener()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withNEventsListener(java.lang.Integer)", "public com.github.dockerjava.api.model.Info withNEventsListener(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getNFd()", "public java.lang.Integer getNFd()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withNFd(java.lang.Integer)", "public com.github.dockerjava.api.model.Info withNFd(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getNGoroutines()", "public java.lang.Integer getNGoroutines()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withNGoroutines(java.lang.Integer)", "public com.github.dockerjava.api.model.Info withNGoroutines(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getNoProxy()", "public java.lang.String getNoProxy()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withNoProxy(java.lang.String)", "public com.github.dockerjava.api.model.Info withNoProxy(java.lang.String)"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getOomKillDisable()", "public java.lang.Boolean getOomKillDisable()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withOomKillDisable(java.lang.Boolean)", "public com.github.dockerjava.api.model.Info withOomKillDisable(java.lang.Boolean)"], ["java.lang.Integer", "com.github.dockerjava.api.model.Info.getOomScoreAdj()", "public java.lang.Integer getOomScoreAdj()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withOomScoreAdj(java.lang.Integer)", "public com.github.dockerjava.api.model.Info withOomScoreAdj(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getOperatingSystem()", "public java.lang.String getOperatingSystem()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withOperatingSystem(java.lang.String)", "public com.github.dockerjava.api.model.Info withOperatingSystem(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getOsType()", "public java.lang.String getOsType()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withOsType(java.lang.String)", "public com.github.dockerjava.api.model.Info withOsType(java.lang.String)"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.api.model.Info.getPlugins()", "public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getPlugins()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withPlugins(java.util.Map<java.lang.String, java.util.List<java.lang.String>>)", "public com.github.dockerjava.api.model.Info withPlugins(java.util.Map<java.lang.String, java.util.List<java.lang.String>>)"], ["com.github.dockerjava.api.model.InfoRegistryConfig", "com.github.dockerjava.api.model.Info.getRegistryConfig()", "public com.github.dockerjava.api.model.InfoRegistryConfig getRegistryConfig()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withRegistryConfig(com.github.dockerjava.api.model.InfoRegistryConfig)", "public com.github.dockerjava.api.model.Info withRegistryConfig(com.github.dockerjava.api.model.InfoRegistryConfig)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getServerVersion()", "public java.lang.String getServerVersion()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withServerVersion(java.lang.String)", "public com.github.dockerjava.api.model.Info withServerVersion(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getClusterStore()", "public java.lang.String getClusterStore()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withClusterStore(java.lang.String)", "public com.github.dockerjava.api.model.Info withClusterStore(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getClusterAdvertise()", "public java.lang.String getClusterAdvertise()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withClusterAdvertise(java.lang.String)", "public com.github.dockerjava.api.model.Info withClusterAdvertise(java.lang.String)"], ["java.lang.String[]", "com.github.dockerjava.api.model.Info.getSockets()", "public java.lang.String[] getSockets()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withSockets(java.lang.String[])", "public com.github.dockerjava.api.model.Info withSockets(java.lang.String[])"], ["java.lang.Boolean", "com.github.dockerjava.api.model.Info.getSwapLimit()", "public java.lang.Boolean getSwapLimit()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withSwapLimit(java.lang.Boolean)", "public com.github.dockerjava.api.model.Info withSwapLimit(java.lang.Boolean)"], ["java.util.List<java.lang.Object>", "com.github.dockerjava.api.model.Info.getSystemStatus()", "public java.util.List<java.lang.Object> getSystemStatus()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withSystemStatus(java.util.List<java.lang.Object>)", "public com.github.dockerjava.api.model.Info withSystemStatus(java.util.List<java.lang.Object>)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.getSystemTime()", "public java.lang.String getSystemTime()"], ["com.github.dockerjava.api.model.Info", "com.github.dockerjava.api.model.Info.withSystemTime(java.lang.String)", "public com.github.dockerjava.api.model.Info withSystemTime(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.api.model.Info.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.api.model.Info.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.api.model.Info.hashCode()", "public int hashCode()"], ["com.github.dockerjava.api.model.ResponseItem$ProgressDetail", "com.github.dockerjava.api.model.ResponseItem$ProgressDetail()", "public com.github.dockerjava.api.model.ResponseItem$ProgressDetail()"], ["java.lang.Long", "com.github.dockerjava.api.model.ResponseItem$ProgressDetail.getCurrent()", "public java.lang.Long getCurrent()"], ["java.lang.Long", "com.github.dockerjava.api.model.ResponseItem$ProgressDetail.getTotal()", "public java.lang.Long getTotal()"], ["java.lang.Long", "com.github.dockerjava.api.model.ResponseItem$ProgressDetail.getStart()", "public java.lang.Long getStart()"], ["java.lang.String", "com.github.dockerjava.api.model.ResponseItem$ProgressDetail.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.command.TopContainerResponse", "com.github.dockerjava.api.command.TopContainerResponse()", "public com.github.dockerjava.api.command.TopContainerResponse()"], ["java.lang.String[]", "com.github.dockerjava.api.command.TopContainerResponse.getTitles()", "public java.lang.String[] getTitles()"], ["java.lang.String[][]", "com.github.dockerjava.api.command.TopContainerResponse.getProcesses()", "public java.lang.String[][] getProcesses()"], ["java.lang.String", "com.github.dockerjava.api.command.TopContainerResponse.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig", "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig(com.github.dockerjava.api.command.InspectExecResponse)", "public com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig(com.github.dockerjava.api.command.InspectExecResponse)"], ["java.util.List<java.lang.String>", "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig.getArguments()", "public java.util.List<java.lang.String> getArguments()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig.getEntryPoint()", "public java.lang.String getEntryPoint()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig.isPrivileged()", "public java.lang.Boolean isPrivileged()"], ["java.lang.Boolean", "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig.isTty()", "public java.lang.Boolean isTty()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig.getUser()", "public java.lang.String getUser()"], ["java.lang.String", "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.netty.exec.InspectVolumeCmdExec", "com.github.dockerjava.netty.exec.InspectVolumeCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.InspectVolumeCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.SearchImagesCmdExec", "com.github.dockerjava.netty.exec.SearchImagesCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.SearchImagesCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.InspectNetworkCmdExec", "com.github.dockerjava.netty.exec.InspectNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.InspectNetworkCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.CommitCmdExec", "com.github.dockerjava.netty.exec.CommitCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.CommitCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["java.lang.Void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec.exec(CMD_T, com.github.dockerjava.api.async.ResultCallback<A_RES_T>)", "public java.lang.Void exec(CMD_T, com.github.dockerjava.api.async.ResultCallback<A_RES_T>)"], ["java.lang.Void", "com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec.exec(com.github.dockerjava.api.command.DockerCmd, com.github.dockerjava.api.async.ResultCallback)", "public java.lang.Void exec(com.github.dockerjava.api.command.DockerCmd, com.github.dockerjava.api.async.ResultCallback)"], ["com.github.dockerjava.netty.exec.UnpauseContainerCmdExec", "com.github.dockerjava.netty.exec.UnpauseContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.UnpauseContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.netty.exec.RenameContainerCmdExec", "com.github.dockerjava.netty.exec.RenameContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)", "public com.github.dockerjava.netty.exec.RenameContainerCmdExec(com.github.dockerjava.netty.WebTarget, com.github.dockerjava.core.DockerClientConfig)"], ["com.github.dockerjava.core.AuthConfigFile", "com.github.dockerjava.core.AuthConfigFile()", "public com.github.dockerjava.core.AuthConfigFile()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.core.AuthConfigFile.resolveAuthConfig(java.lang.String)", "public com.github.dockerjava.api.model.AuthConfig resolveAuthConfig(java.lang.String)"], ["com.github.dockerjava.api.model.AuthConfigurations", "com.github.dockerjava.core.AuthConfigFile.getAuthConfigurations()", "public com.github.dockerjava.api.model.AuthConfigurations getAuthConfigurations()"], ["int", "com.github.dockerjava.core.AuthConfigFile.hashCode()", "public int hashCode()"], ["boolean", "com.github.dockerjava.core.AuthConfigFile.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "com.github.dockerjava.core.AuthConfigFile.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.core.AuthConfigFile", "com.github.dockerjava.core.AuthConfigFile.loadConfig(java.io.File)", "public static com.github.dockerjava.core.AuthConfigFile loadConfig(java.io.File) throws java.io.IOException"], ["com.github.dockerjava.core.async.JsonStreamProcessor", "com.github.dockerjava.core.async.JsonStreamProcessor(java.lang.Class<T>)", "public com.github.dockerjava.core.async.JsonStreamProcessor(java.lang.Class<T>)"], ["void", "com.github.dockerjava.core.async.JsonStreamProcessor.processResponseStream(java.io.InputStream, com.github.dockerjava.api.async.ResultCallback<T>)", "public void processResponseStream(java.io.InputStream, com.github.dockerjava.api.async.ResultCallback<T>)"], ["com.github.dockerjava.core.DefaultDockerClientConfig$Builder", "com.github.dockerjava.core.DefaultDockerClientConfig.createDefaultConfigBuilder()", "public static com.github.dockerjava.core.DefaultDockerClientConfig$Builder createDefaultConfigBuilder()"], ["java.net.URI", "com.github.dockerjava.core.DefaultDockerClientConfig.getDockerHost()", "public java.net.URI getDockerHost()"], ["com.github.dockerjava.core.RemoteApiVersion", "com.github.dockerjava.core.DefaultDockerClientConfig.getApiVersion()", "public com.github.dockerjava.core.RemoteApiVersion getApiVersion()"], ["java.lang.String", "com.github.dockerjava.core.DefaultDockerClientConfig.getRegistryUsername()", "public java.lang.String getRegistryUsername()"], ["java.lang.String", "com.github.dockerjava.core.DefaultDockerClientConfig.getRegistryPassword()", "public java.lang.String getRegistryPassword()"], ["java.lang.String", "com.github.dockerjava.core.DefaultDockerClientConfig.getRegistryEmail()", "public java.lang.String getRegistryEmail()"], ["java.lang.String", "com.github.dockerjava.core.DefaultDockerClientConfig.getRegistryUrl()", "public java.lang.String getRegistryUrl()"], ["java.lang.String", "com.github.dockerjava.core.DefaultDockerClientConfig.getDockerConfig()", "public java.lang.String getDockerConfig()"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.core.DefaultDockerClientConfig.effectiveAuthConfig(java.lang.String)", "public com.github.dockerjava.api.model.AuthConfig effectiveAuthConfig(java.lang.String)"], ["com.github.dockerjava.api.model.AuthConfigurations", "com.github.dockerjava.core.DefaultDockerClientConfig.getAuthConfigurations()", "public com.github.dockerjava.api.model.AuthConfigurations getAuthConfigurations()"], ["com.github.dockerjava.core.SSLConfig", "com.github.dockerjava.core.DefaultDockerClientConfig.getSSLConfig()", "public com.github.dockerjava.core.SSLConfig getSSLConfig()"], ["boolean", "com.github.dockerjava.core.DefaultDockerClientConfig.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.DefaultDockerClientConfig.hashCode()", "public int hashCode()"], ["java.lang.String", "com.github.dockerjava.core.DefaultDockerClientConfig.toString()", "public java.lang.String toString()"], ["java.lang.String", "com.github.dockerjava.core.util.FilePathUtil.relativize(java.io.File, java.io.File)", "public static java.lang.String relativize(java.io.File, java.io.File)"], ["java.lang.String", "com.github.dockerjava.core.util.FilePathUtil.relativize(java.nio.file.Path, java.nio.file.Path)", "public static java.lang.String relativize(java.nio.file.Path, java.nio.file.Path)"], ["com.github.dockerjava.core.dockerfile.DockerfileStatement$OtherLine", "com.github.dockerjava.core.dockerfile.DockerfileStatement$OtherLine(java.lang.String)", "public com.github.dockerjava.core.dockerfile.DockerfileStatement$OtherLine(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.dockerfile.DockerfileStatement$OtherLine.toString()", "public java.lang.String toString()"], ["int", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult$1.available()", "public int available() throws java.io.IOException"], ["int", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult$1.read()", "public int read() throws java.io.IOException"], ["int", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult$1.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["void", "com.github.dockerjava.core.dockerfile.Dockerfile$ScannedResult$1.close()", "public void close() throws java.io.IOException"], ["com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl(com.github.dockerjava.api.command.CopyFileFromContainerCmd$Exec, java.lang.String, java.lang.String)", "public com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl(com.github.dockerjava.api.command.CopyFileFromContainerCmd$Exec, java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.String", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.getResource()", "public java.lang.String getResource()"], ["com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl withContainerId(java.lang.String)"], ["com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.withResource(java.lang.String)", "public com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl withResource(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.getHostPath()", "public java.lang.String getHostPath()"], ["com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.withHostPath(java.lang.String)", "public com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl withHostPath(java.lang.String)"], ["java.io.InputStream", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.exec()", "public java.io.InputStream exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.Object", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.api.command.CopyFileFromContainerCmd", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.withResource(java.lang.String)", "public com.github.dockerjava.api.command.CopyFileFromContainerCmd withResource(java.lang.String)"], ["com.github.dockerjava.api.command.CopyFileFromContainerCmd", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.withHostPath(java.lang.String)", "public com.github.dockerjava.api.command.CopyFileFromContainerCmd withHostPath(java.lang.String)"], ["com.github.dockerjava.api.command.CopyFileFromContainerCmd", "com.github.dockerjava.core.command.CopyFileFromContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.CopyFileFromContainerCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.core.command.PushImageCmdImpl", "com.github.dockerjava.core.command.PushImageCmdImpl(com.github.dockerjava.api.command.PushImageCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.PushImageCmdImpl(com.github.dockerjava.api.command.PushImageCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.PushImageCmdImpl.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.github.dockerjava.core.command.PushImageCmdImpl.getTag()", "public java.lang.String getTag()"], ["com.github.dockerjava.api.command.PushImageCmd", "com.github.dockerjava.core.command.PushImageCmdImpl.withName(java.lang.String)", "public com.github.dockerjava.api.command.PushImageCmd withName(java.lang.String)"], ["com.github.dockerjava.api.command.PushImageCmd", "com.github.dockerjava.core.command.PushImageCmdImpl.withTag(java.lang.String)", "public com.github.dockerjava.api.command.PushImageCmd withTag(java.lang.String)"], ["com.github.dockerjava.api.model.AuthConfig", "com.github.dockerjava.core.command.PushImageCmdImpl.getAuthConfig()", "public com.github.dockerjava.api.model.AuthConfig getAuthConfig()"], ["com.github.dockerjava.api.command.PushImageCmd", "com.github.dockerjava.core.command.PushImageCmdImpl.withAuthConfig(com.github.dockerjava.api.model.AuthConfig)", "public com.github.dockerjava.api.command.PushImageCmd withAuthConfig(com.github.dockerjava.api.model.AuthConfig)"], ["com.github.dockerjava.core.command.AuthCmdImpl", "com.github.dockerjava.core.command.AuthCmdImpl(com.github.dockerjava.api.command.AuthCmd$Exec, com.github.dockerjava.api.model.AuthConfig)", "public com.github.dockerjava.core.command.AuthCmdImpl(com.github.dockerjava.api.command.AuthCmd$Exec, com.github.dockerjava.api.model.AuthConfig)"], ["com.github.dockerjava.api.model.AuthResponse", "com.github.dockerjava.core.command.AuthCmdImpl.exec()", "public com.github.dockerjava.api.model.AuthResponse exec() throws com.github.dockerjava.api.exception.UnauthorizedException"], ["java.lang.Object", "com.github.dockerjava.core.command.AuthCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.api.command.AuthCmd", "com.github.dockerjava.core.command.AuthCmdImpl.withAuthConfig(com.github.dockerjava.api.model.AuthConfig)", "public com.github.dockerjava.api.command.AuthCmd withAuthConfig(com.github.dockerjava.api.model.AuthConfig)"], ["com.github.dockerjava.core.command.ListNetworksCmdImpl", "com.github.dockerjava.core.command.ListNetworksCmdImpl(com.github.dockerjava.api.command.ListNetworksCmd$Exec)", "public com.github.dockerjava.core.command.ListNetworksCmdImpl(com.github.dockerjava.api.command.ListNetworksCmd$Exec)"], ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>", "com.github.dockerjava.core.command.ListNetworksCmdImpl.getFilters()", "public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getFilters()"], ["com.github.dockerjava.api.command.ListNetworksCmd", "com.github.dockerjava.core.command.ListNetworksCmdImpl.withIdFilter(java.lang.String...)", "public com.github.dockerjava.api.command.ListNetworksCmd withIdFilter(java.lang.String...)"], ["com.github.dockerjava.api.command.ListNetworksCmd", "com.github.dockerjava.core.command.ListNetworksCmdImpl.withNameFilter(java.lang.String...)", "public com.github.dockerjava.api.command.ListNetworksCmd withNameFilter(java.lang.String...)"], ["com.github.dockerjava.core.command.CreateContainerCmdImpl$NetworkingConfig", "com.github.dockerjava.core.command.CreateContainerCmdImpl$NetworkingConfig()", "public com.github.dockerjava.core.command.CreateContainerCmdImpl$NetworkingConfig()"], ["java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork>", "com.github.dockerjava.core.command.CreateContainerCmdImpl$NetworkingConfig.getEndpointsConfig()", "public java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork> getEndpointsConfig()"], ["com.github.dockerjava.core.command.CreateContainerCmdImpl$NetworkingConfig", "com.github.dockerjava.core.command.CreateContainerCmdImpl$NetworkingConfig.withEndpointsConfig(java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork>)", "public com.github.dockerjava.core.command.CreateContainerCmdImpl$NetworkingConfig withEndpointsConfig(java.util.Map<java.lang.String, com.github.dockerjava.api.model.ContainerNetwork>)"], ["com.github.dockerjava.core.command.AttachContainerCmdImpl", "com.github.dockerjava.core.command.AttachContainerCmdImpl(com.github.dockerjava.api.command.AttachContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.AttachContainerCmdImpl(com.github.dockerjava.api.command.AttachContainerCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.AttachContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.AttachContainerCmdImpl.hasLogsEnabled()", "public java.lang.Boolean hasLogsEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.AttachContainerCmdImpl.hasFollowStreamEnabled()", "public java.lang.Boolean hasFollowStreamEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.AttachContainerCmdImpl.hasTimestampsEnabled()", "public java.lang.Boolean hasTimestampsEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.AttachContainerCmdImpl.hasStdoutEnabled()", "public java.lang.Boolean hasStdoutEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.AttachContainerCmdImpl.hasStderrEnabled()", "public java.lang.Boolean hasStderrEnabled()"], ["java.io.InputStream", "com.github.dockerjava.core.command.AttachContainerCmdImpl.getStdin()", "public java.io.InputStream getStdin()"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.AttachContainerCmd withContainerId(java.lang.String)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withFollowStream(java.lang.Boolean)", "public com.github.dockerjava.api.command.AttachContainerCmd withFollowStream(java.lang.Boolean)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withTimestamps(java.lang.Boolean)", "public com.github.dockerjava.api.command.AttachContainerCmd withTimestamps(java.lang.Boolean)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withStdOut(java.lang.Boolean)", "public com.github.dockerjava.api.command.AttachContainerCmd withStdOut(java.lang.Boolean)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withStdErr(java.lang.Boolean)", "public com.github.dockerjava.api.command.AttachContainerCmd withStdErr(java.lang.Boolean)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withStdIn(java.io.InputStream)", "public com.github.dockerjava.api.command.AttachContainerCmd withStdIn(java.io.InputStream)"], ["com.github.dockerjava.api.command.AttachContainerCmd", "com.github.dockerjava.core.command.AttachContainerCmdImpl.withLogs(java.lang.Boolean)", "public com.github.dockerjava.api.command.AttachContainerCmd withLogs(java.lang.Boolean)"], ["com.github.dockerjava.core.command.VersionCmdImpl", "com.github.dockerjava.core.command.VersionCmdImpl(com.github.dockerjava.api.command.VersionCmd$Exec)", "public com.github.dockerjava.core.command.VersionCmdImpl(com.github.dockerjava.api.command.VersionCmd$Exec)"], ["com.github.dockerjava.core.command.InfoCmdImpl", "com.github.dockerjava.core.command.InfoCmdImpl(com.github.dockerjava.api.command.InfoCmd$Exec)", "public com.github.dockerjava.core.command.InfoCmdImpl(com.github.dockerjava.api.command.InfoCmd$Exec)"], ["com.github.dockerjava.core.command.SearchImagesCmdImpl", "com.github.dockerjava.core.command.SearchImagesCmdImpl(com.github.dockerjava.api.command.SearchImagesCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.SearchImagesCmdImpl(com.github.dockerjava.api.command.SearchImagesCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.SearchImagesCmdImpl.getTerm()", "public java.lang.String getTerm()"], ["com.github.dockerjava.api.command.SearchImagesCmd", "com.github.dockerjava.core.command.SearchImagesCmdImpl.withTerm(java.lang.String)", "public com.github.dockerjava.api.command.SearchImagesCmd withTerm(java.lang.String)"], ["com.github.dockerjava.core.command.ExecStartCmdImpl", "com.github.dockerjava.core.command.ExecStartCmdImpl(com.github.dockerjava.api.command.ExecStartCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.ExecStartCmdImpl(com.github.dockerjava.api.command.ExecStartCmd$Exec, java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.ExecStartCmdImpl.getExecId()", "public java.lang.String getExecId()"], ["com.github.dockerjava.api.command.ExecStartCmd", "com.github.dockerjava.core.command.ExecStartCmdImpl.withExecId(java.lang.String)", "public com.github.dockerjava.api.command.ExecStartCmd withExecId(java.lang.String)"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ExecStartCmdImpl.hasDetachEnabled()", "public java.lang.Boolean hasDetachEnabled()"], ["java.lang.Boolean", "com.github.dockerjava.core.command.ExecStartCmdImpl.hasTtyEnabled()", "public java.lang.Boolean hasTtyEnabled()"], ["java.io.InputStream", "com.github.dockerjava.core.command.ExecStartCmdImpl.getStdin()", "public java.io.InputStream getStdin()"], ["com.github.dockerjava.api.command.ExecStartCmd", "com.github.dockerjava.core.command.ExecStartCmdImpl.withDetach(java.lang.Boolean)", "public com.github.dockerjava.api.command.ExecStartCmd withDetach(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ExecStartCmd", "com.github.dockerjava.core.command.ExecStartCmdImpl.withTty(java.lang.Boolean)", "public com.github.dockerjava.api.command.ExecStartCmd withTty(java.lang.Boolean)"], ["com.github.dockerjava.api.command.ExecStartCmd", "com.github.dockerjava.core.command.ExecStartCmdImpl.withStdIn(java.io.InputStream)", "public com.github.dockerjava.api.command.ExecStartCmd withStdIn(java.io.InputStream)"], ["<T extends com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>> T", "com.github.dockerjava.core.command.ExecStartCmdImpl.exec(T)", "public <T extends com.github.dockerjava.api.async.ResultCallback<com.github.dockerjava.api.model.Frame>> T exec(T)"], ["com.github.dockerjava.core.command.UpdateContainerCmdImpl", "com.github.dockerjava.core.command.UpdateContainerCmdImpl()", "public com.github.dockerjava.core.command.UpdateContainerCmdImpl()"], ["com.github.dockerjava.core.command.UpdateContainerCmdImpl", "com.github.dockerjava.core.command.UpdateContainerCmdImpl(com.github.dockerjava.api.command.UpdateContainerCmd$Exec, java.lang.String)", "public com.github.dockerjava.core.command.UpdateContainerCmdImpl(com.github.dockerjava.api.command.UpdateContainerCmd$Exec, java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getBlkioWeight()", "public java.lang.Integer getBlkioWeight()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withBlkioWeight(java.lang.Integer)", "public com.github.dockerjava.api.command.UpdateContainerCmd withBlkioWeight(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getContainerId()", "public java.lang.String getContainerId()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withContainerId(java.lang.String)", "public com.github.dockerjava.api.command.UpdateContainerCmd withContainerId(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getCpuPeriod()", "public java.lang.Integer getCpuPeriod()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withCpuPeriod(java.lang.Integer)", "public com.github.dockerjava.api.command.UpdateContainerCmd withCpuPeriod(java.lang.Integer)"], ["java.lang.Integer", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getCpuQuota()", "public java.lang.Integer getCpuQuota()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withCpuQuota(java.lang.Integer)", "public com.github.dockerjava.api.command.UpdateContainerCmd withCpuQuota(java.lang.Integer)"], ["java.lang.String", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getCpusetCpus()", "public java.lang.String getCpusetCpus()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withCpusetCpus(java.lang.String)", "public com.github.dockerjava.api.command.UpdateContainerCmd withCpusetCpus(java.lang.String)"], ["java.lang.String", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getCpusetMems()", "public java.lang.String getCpusetMems()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withCpusetMems(java.lang.String)", "public com.github.dockerjava.api.command.UpdateContainerCmd withCpusetMems(java.lang.String)"], ["java.lang.Integer", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getCpuShares()", "public java.lang.Integer getCpuShares()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withCpuShares(java.lang.Integer)", "public com.github.dockerjava.api.command.UpdateContainerCmd withCpuShares(java.lang.Integer)"], ["java.lang.Long", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getKernelMemory()", "public java.lang.Long getKernelMemory()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withKernelMemory(java.lang.Long)", "public com.github.dockerjava.api.command.UpdateContainerCmd withKernelMemory(java.lang.Long)"], ["java.lang.Long", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getMemory()", "public java.lang.Long getMemory()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withMemory(java.lang.Long)", "public com.github.dockerjava.api.command.UpdateContainerCmd withMemory(java.lang.Long)"], ["java.lang.Long", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getMemoryReservation()", "public java.lang.Long getMemoryReservation()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withMemoryReservation(java.lang.Long)", "public com.github.dockerjava.api.command.UpdateContainerCmd withMemoryReservation(java.lang.Long)"], ["java.lang.Long", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.getMemorySwap()", "public java.lang.Long getMemorySwap()"], ["com.github.dockerjava.api.command.UpdateContainerCmd", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.withMemorySwap(java.lang.Long)", "public com.github.dockerjava.api.command.UpdateContainerCmd withMemorySwap(java.lang.Long)"], ["com.github.dockerjava.api.model.UpdateContainerResponse", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.exec()", "public com.github.dockerjava.api.model.UpdateContainerResponse exec() throws com.github.dockerjava.api.exception.NotFoundException"], ["java.lang.String", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.toString()", "public java.lang.String toString()"], ["boolean", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.hashCode()", "public int hashCode()"], ["java.lang.Object", "com.github.dockerjava.core.command.UpdateContainerCmdImpl.exec()", "public java.lang.Object exec() throws com.github.dockerjava.api.exception.DockerException"], ["com.github.dockerjava.core.command.PingCmdImpl", "com.github.dockerjava.core.command.PingCmdImpl(com.github.dockerjava.api.command.PingCmd$Exec)", "public com.github.dockerjava.core.command.PingCmdImpl(com.github.dockerjava.api.command.PingCmd$Exec)"], ["com.github.dockerjava.core.command.AbstrDockerCmd", "com.github.dockerjava.core.command.AbstrDockerCmd(com.github.dockerjava.api.command.DockerCmdSyncExec<CMD_T, RES_T>)", "public com.github.dockerjava.core.command.AbstrDockerCmd(com.github.dockerjava.api.command.DockerCmdSyncExec<CMD_T, RES_T>)"], ["RES_T", "com.github.dockerjava.core.command.AbstrDockerCmd.exec()", "public RES_T exec() throws com.github.dockerjava.api.exception.DockerException"], ["void", "com.github.dockerjava.core.command.AbstrDockerCmd.close()", "public void close()"], ["java.lang.String", "com.github.dockerjava.core.command.AbstrDockerCmd.toString()", "public java.lang.String toString()"], ["com.github.dockerjava.core.GoLangMatchFileFilter", "com.github.dockerjava.core.GoLangMatchFileFilter(java.io.File, java.util.List<java.lang.String>)", "public com.github.dockerjava.core.GoLangMatchFileFilter(java.io.File, java.util.List<java.lang.String>)"], ["boolean", "com.github.dockerjava.core.GoLangMatchFileFilter.accept(java.io.File)", "public boolean accept(java.io.File)"]]}